{"version":3,"sources":["icons/svg/delapouite/dice-six-faces-six.svg","icons/svg/delapouite/sword-brandish.svg","icons/svg/lorc/shard-sword.svg","icons/svg/lorc/spiral-thrust.svg","assets/img/healing1.png","assets/img/fireball.png","assets/img/thunderbolt.png","assets/img/dark-blast.png","assets/img/crippling-blow.png","assets/img/wrath.png","assets/img/charge.png","assets/img/headshot.png","assets/img/shadow-strike.png","assets/img/vanish.png","assets/img/inspect.png","assets/img/weapon-attack.png","icons/svg/lorc/aura.svg","icons/svg/lorc/barbute.svg","icons/svg/delapouite/muscular-torso.svg","icons/svg/sbed/hand.svg","icons/svg/delapouite/ring.svg","icons/svg/lorc/footprint.svg","icons/svg/lorc/quick-slash.svg","icons/svg/lorc/barbed-arrow.svg","icons/svg/carl-olsen/flame.svg","icons/svg/lorc/bleeding-eye.svg","icons/svg/lorc/moebius-trefoil.svg","icons/svg/lorc/triorb.svg","icons/svg/sbed/shield.svg","icons/svg/lorc/book-cover.svg","icons/svg/skoll/fist.svg","icons/svg/lorc/fire-axe.svg","icons/svg/delapouite/war-axe.svg","icons/svg/lorc/stiletto.svg","icons/svg/lorc/croc-sword.svg","icons/svg/delapouite/flail.svg","icons/svg/lorc/crossed-swords.svg","icons/svg/delapouite/katana.svg","icons/svg/lorc/sword-hilt.svg","icons/svg/willdabeast/orb-wand.svg","icons/svg/lorc/wizard-staff.svg","icons/svg/skoll/luger.svg","icons/svg/carl-olsen/crossbow.svg","icons/svg/lorc/bloody-sword.svg","icons/svg/lorc/winged-sword.svg","icons/svg/delapouite/closed-barbute.svg","icons/svg/lorc/hood.svg","icons/svg/delapouite/shoulder-armor.svg","icons/svg/lorc/robe.svg","icons/svg/delapouite/gloves.svg","icons/svg/delapouite/power-ring.svg","icons/svg/lorc/boots.svg","icons/svg/lorc/magnifying-glass.svg","icons/svg/lorc/tombstone.svg","icons/svg/delapouite/pencil.svg","icons/svg/delapouite/save.svg","icons/svg/delapouite/trash-can.svg","assets/img/roll.png","icons/svg/cathelineau/swordman.svg","icons/svg/lorc/swap-bag.svg","icons/svg/delapouite/skills.svg","icons/svg/delapouite/crystal-shrine.svg","icons/svg/lorc/emerald.svg","icons/svg/lorc/two-shadows.svg","assets/img/23761.jpg","util/getKeys.ts","util/notZero.ts","util/getSign.ts","util/noneg.ts","types/Roll2.ts","types/Damage.ts","util/reduce.ts","types/Events.ts","types/Weapon.ts","objects/util.ts","objects/fists.ts","types/Character.ts","objects/baseCharacter.ts","types/Party.ts","state/util.ts","util/updateIn.ts","util/getRandom.ts","objects/basicShield.ts","objects/basicTome.ts","objects/builders/armor/names.ts","objects/builders/util.ts","objects/builders/armor/stats.ts","objects/builders/armor/uniques/index.ts","objects/builders/armor/mythics/index.ts","objects/builders/armor/sets/index.ts","objects/builders/armor/createArmor.ts","objects/builders/weapons/stats.ts","objects/builders/weapons/createWeapon.ts","objects/builders/makeItem.ts","objects/makeSkill.ts","objects/makeCharacter.ts","objects/builders/weapons/mythics/index.ts","objects/builders/mods/index.tsx","state/parties/index.ts","hooks/useActions.ts","contexts/PartyContext/index.tsx","state/rolls/index.ts","contexts/RollContext/index.tsx","contexts/CharacterContext/index.tsx","elements/flex.ts","icons/maps.tsx","components/Icon/index.tsx","components/Hover/index.tsx","elements/box.tsx","components/ResourceScore/index.tsx","components/AbilityScore/index.tsx","components/StatScore/index.tsx","components/DamageResistanceScore/index.tsx","util/compare.ts","components/TraitScore/index.tsx","util/getValueString.ts","components/CheckPreview/index.tsx","components/ArmorIcon/index.tsx","types/Item.ts","components/ItemIcon/index.tsx","components/ItemPreview/index.tsx","types/Armor.ts","components/WeaponIcon/index.tsx","components/DamageRollScores/index.tsx","components/WeaponPreview/index.tsx","components/ItemPreviewSmall/index.tsx","components/ArmorScoreList/index.tsx","components/Gauge/index.tsx","components/CharacterInspect/index.tsx","components/SkillPreview/index.tsx","components/CombatCharacterSkills/index.tsx","objects/makeNpc.ts","objects/makeParty.ts","contexts/CombatContext/log.tsx","contexts/CombatContext/util.tsx","contexts/CombatLogContext/index.tsx","contexts/ModalContext/reducer.ts","contexts/ModalContext/index.tsx","components/CombatVictoryModal/index.tsx","components/CombatLossModal/index.tsx","contexts/CombatContext/index.tsx","hooks/useInterval.ts","components/CombatCharacterTargets/index.tsx","components/CharacterDetails/index.tsx","contexts/UIContext/index.tsx","components/SkillPreviewAlt/index.tsx","domain/Character/index.tsx","components/RollResult/index.tsx","contexts/CompareContext/index.tsx","components/WeaponCompare/index.tsx","components/ItemCompare/index.tsx","components/CharacterItemFilters/index.tsx","components/CharacterItems/index.tsx","components/Sidebar/index.tsx","components/ModPreview/index.tsx","components/ApplicationLog/index.tsx","components/RollLog/index.tsx","components/AttackLog/index.tsx","components/PartySkills/index.tsx","components/PartyMods/index.tsx","routes/index.tsx","components/AppSidebar/index.tsx","components/CombatParty/index.tsx","types/Skill.ts","domain/Combat/index.tsx","components/AppHeader/index.tsx","App.tsx","serviceWorker.ts","index.tsx","state/index.ts"],"names":["module","exports","getKeys","obj","Object","keys","notZero","value","content","getSign","noneg","THREE_D6_DIST","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","processRollString","rollString","split","map","roll","n","d","parseInt","getModifierString","modifier","Math","abs","resolveRoll","allowNegatives","string","combineRollStrings","result","DiceRoll","id","v4","total","output","criticalSuccess","minTotal","criticalFailure","maxTotal","averageTotal","quickRoll","str","mod","getCheckProbability","check","resolveCheck","rollResult","chance","goal","ZERO_ROLL","THREE_D6","ZERO_CHECK","makeCharacterRoll","makeCharacterCheck","undefined","makeStandardCharacterCheck","rolls","list","filter","r","reduce","p","c","forEach","pRoll","i","combineRolls","combineCharacterRolls","reduceCharacterRoll","character","keyValue","getModifierValueFromKeys","reduceCharacterCheck","resolveCharacterRoll","resolveCharacterCheck","getRollRange","getRollText","length","hasMod","keyString","plus","CharacterKeyMap3","modString","DamageTypeKeyColors","slashing","piercing","fire","blood","light","dark","getDamageTypeKeys","rollDamage","crit","label","key","rollResults","ZERO_DAMAGE_ROLLS","combineDamageTypeRolls","ret","reducer","initialValue","EventsTypeMap","onHit","onCrit","force","traits","combineEvents","events","ZERO_WEAPON_TRAIT","accuracyOffset","damageRolls","combineWeaponTraits","processWeapon","weapon","processed","Error","mods","slots","combinedTrait","accuracyCheck","console","log","name","makeRequirementCheck","BASE_EQUIPPABLE","type","rarity","equippable","cost","resource","requirementCheck","duration","healthOffset","focusOffset","abilitiesModifiers","strength","dexterity","intelligence","vigor","statsModifiers","health","focus","will","perception","agility","accuracy","evade","damageResistances","makeTrait","FISTS","weaponType","slotCount","getTraits","armorTraits","armor","item","equippedItemTraits","equippedItems","getAbilities","trait","cur","abilities","getStats","getDamageResistances","a","processCharacter","withWeapon","stats","dead","commitTrait","s","setCharacterAbilityScore","characterPoints","resources","validateCharacter","power","characterAbilityScoreCosts","canEquip","equipable","processedCharacter","unequipItem","validate","itemId","equippables","unequipWeapon","find","unequipArmor","unequipGenericItem","vr","equipGenericItem","resourceValue","equipArmor","equipWeapon","weaponHands","getTraitValue","abilityValue","statValue","combineTraits","current","ar","ac","sr","sc","pc","removedItems","localUpdate","unequipResult","items","BASE_CHARACTER","heads","bodies","hands","fingers","feet","skills","inspected","processParty","party","characters","partyId","makeReducer","core","initialState","state","action","coreFn","upsertIn","updateIn","accessor","getRandom","floor","random","BASIC_SHIELD","BASIC_TOME","ArmorUniqueNames","shuffleArray","array","j","Rarity3d6Map","18","getItemStatRolls","count","requirementScore","offset","statCount","statRolls","ArmorRequirementKeys","helmet","cowl","chestplate","robe","gloves","ring","boots","ArmorCostsT","ArmorResourcesT","armorStatKeysBase","ArmorRarityStatKeys","common","uncommon","rare","legendary","unique","mythic","set","ArmorRarityStatCounts","makeStaticRoll","makeRoll","UNIQUE_ARMORS","MYTHIC_ARMORS","SET_ARMORS","buildArmor","armorType","createArmor","getArmorStatRolls","base","WeaponRequirementKeys","fists","axe","greataxe","flail","daggers","katana","rapier","wand","staff","elementalSword","elementalGreatsword","sword","greatsword","pistol","crossbow","WeaponCosts","weaponStatKeysBase","WeaponRarityStatKeys","WeaponRarityStatCounts","makeDamageRoll","modCoef","buildWeapon","createWeapon","getWeaponStatRolls","element","WeaponDamages","accuracyModifier","rest","ITEM_TYPES","itemCore","makeWeapon","makeArmor","shield","tome","makeSkill","imgSrc","targetTraits","sourceTraits","combineWeaponDamage","checkDodgeForTraits","focusCost","target","BASIC_ATTACK","WeaponAttack","INSPECT","Inspect","FIREBALL","Fireball","CRIPPLING_BLOW","CripplingBlow","THUNDERBOLT","Thunderbolt","DARK_BLAST","DarkBlast","HEALING","Healing","WRATH","Wrath","CHARGE","Charge","SKILL_SHOT","SkillShot","VANISH","Vanish","SHADOW_STRIKE","ShadowStrike","makeCharacter","SWORD_OF_BLOOD_AND_FIRE","SWORD_OF_THE_INFINITE","SLASHING_MOD","actionCreators","payload","characterId","actions","upsertParty","dispatch","upsertCharacter","deleteCharacter","upsertItem","removeItem","equipItem","getState","parties","_character","max","katie","milo","PC_PARTY_ID","INITIAL_STATE","Array","fill","makeItem","usePartiesActions","deps","useDispatch","useMemo","bindActionCreators","useActions","defaultContextValue","rawParties","userParty","rawUserParty","activeCharacterId","findCharacter","findRawCharacter","setActiveCharacterId","PartyContext","React","createContext","PartyContextProvider","props","children","useSelector","useState","Provider","usePartyContext","useContext","RollContext","history","execRoll","execCheck","rollCharacter","checkCharacter","getProbability","useRollContext","RollContextProvider","addRoll","characterContext","useCharacterContext","RollStateContextProvider","CharacterContext","rawCharacter","onChange","CharacterContextProvider","CharacterStateContextProvider","FlexContainer","styled","display","flexDirection","$direction","flex","$full","FullContainer","IconCharacterResourceMap","WeaponHands","CharacterPoints","Heads","Bodies","Hands","Finger","Feet","IconDamageTypeMap","Slashing","Piercing","Fire","Blood","Light","Dark","IconItemTypeMap","Shield","Tome","IconWeaponTypeMap","Fists","Axe","GreatAxe","Flail","Daggers","Katana","Rapier","Wand","Staff","FireSword","DarkSword","Sword","Greatsword","Pistol","Crossbow","IconUniqueWeaponMap","BloodSword","LightSword","IconArmorTypeMap","Helmet","Cowl","Armor","Robe","Gloves","Ring","Boots","Icon","src","size","style","loading","setLoading","svg","setSvg","useEffect","fetch","then","res","text","height","width","dangerouslySetInnerHTML","__html","Hover","delay","internalHovering","setInternalHovering","isHovering","setIsHovering","guid","setGuid","useLayoutEffect","setTimeout","onMouseEnter","e","preventDefault","stopPropagation","onMouseLeave","BoxContainer","substyle","tag","Element","border","boxSizing","background","padding","color","SmallBox","justifyContent","alignItems","BoxButton","margin","borderColor","cursor","disabled","ResourceScore","iconUrl","fontFamily","fontSize","marginRight","AbilityScore","edit","keyName","rawValue","displayValue","points","onClick","onIncrement","char","onDecrement","PureAbilityScore","whiteSpace","href","fontWeight","StatScore","displayName","DamageResistanceScore","rollText","ZERO_COMPARE","ONE_COMPARE","BASE_ARGS","getCompareFn","valueA","valueB","args","TraitScore","compareResult","abilityKeys","statKeys","getValueString","CheckPreview","showCheckButton","rollKeys","k","keyStr","rollStr","probability","Dice6","ArmorIcon","ItemRarityColorMap","ItemIcon","ItemPreview","showEquipButton","showRequirementCheck","showCollapseButton","collapsed","setCollapsed","requirementCompare","traitCompare","resistancesCompare","costComare","isArmor","rarityColor","Color","desaturate","fade","rgb","marginTop","flexWrap","lineHeight","ArmorTypeSortKey","WeaponIcon","icon","DamageRollScores","parent","damageRangeText","damageRollText","DamageRollScore","marginBottom","WeaponPreview","showRequirement","accuracyCompare","damageCompare","values","combinedRoll","ItemPreviewSmall","isEmpty","isWeapon","isOpen","direction","tagName","arrow","boxShadow","ArmorScoreList","rings","arr","sort","b","Gauge","hovering","setHovering","percentage","position","left","maxWidth","minWidth","lighten","textShadow","backgroundColor","transition","right","top","overflow","CharacterInspect","SkillPreview","skillId","skill","backgroundSize","CombatCharacterSkills","activeSkillId","active","opacity","CombatCharacterSkill","isDefault","randomNameConfig","dictionaries","adjectives","animals","separator","makeNpc","npc","uniqueNamesGenerator","makeParty","Span","bold","NameSpan","isUser","cz","v","gv","LogAddedTraits","attackResult","source","addLine","gfo","gho","ZERO_RESULT","sourceId","targetId","index","hitSuccess","dodgeSuccess","rawDamage","blockedDamage","totalDamage","cr","getSkillDamageRolls","execSkill","characterSkills","skillCheck","getSkillCheck","skillCheckResult","rr","damageRollsResult","dodgeRoll","damageResult","resistanceCheck","resistanceRoll","damageTotal","resolveRound","rounds","rawEnemyParty","updateCharacter","rawCharacters","updater","round","rawSource","rawTarget","logResult","getTraitUpdates","t","processEvent","event","addedTraits","skillTraits","checkEvent","checkParty","ENEMY_PARTY_ID","CombatLogContext","lines","line","clear","useCombatLogContext","CombatLogContextProvider","setLines","contents","callback","blocking","OPEN","CLOSE","coreFunction","ModalContext","open","close","setBlocking","setPayload","setContents","setCallback","setStyle","useModalContext","getContextValue","Modal","setAppElement","ModalContextProvider","reducerValue","useReducer","context","parentSelector","document","querySelector","onRequestClose","bottom","overlay","CombatVictoryModal","reset","chosenItemId","setChosenItemId","rewardChoices","textAlign","CombatLossModal","wins","useHistory","push","enemyParty","running","done","characterTargets","setCharacterSkill","setCharacterTarget","next","start","stop","CombatContext","useCombatContext","CombatContextProvider","setRounds","setWins","setCharacterSkills","setCharacterTargets","targets","setDone","partyA","partyB","bCharacters","getCombatRecordBuilder","builder","onTick","setRunning","ref","useRef","setInterval","clearInterval","useInterval","finish","didWin","w","activeSkill","checkCharacterActiveSkills","activeTarget","checkCharacterActiveTargets","CombatCharacterTargets","activeTargetId","cc","alt","Roll","CombatCharacterTarget","CharacterDetails","showEdit","showInspect","showWeaponInspect","showSkills","detailsHovering","setDetailsHovering","weaponHovering","setWeaponHovering","isEditing","setIsEditing","setName","Tombstone","Pencil","Save","Delete","borderTop","defaultValue","logKey","sidebarKey","setLogKey","setSidebarKey","UIContext","useUIContext","UIContextProvider","SkillPreviewAlt","Character","useParams","RollResult","isCheck","CompareContext","compareChecks","checkA","checkB","compareRolls","rollA","rollB","compareValues","useCompareContext","CompareContextProvider","EquipedWeaponCompare","WeaponCompareItem","costComapre","weaponRoll","testRoll","weaponValue","testValue","EquipeItemCompare","testItem","ItemCompareItem","itemRoll","itemValue","CharacterItemFilters","CharacterItemFilterButton","hsl","toString","Item","onEquip","isEquipable","canEquipItem","Sidebar","activeKey","setActiveKey","options","activeOption","o","option","borderBottom","borderRight","borderLeft","Component","ModPreview","weaponTrait","Mod","setText","submitLog","setSubmitLog","setIndex","submit","alert","Fragment","onKeyDown","keyCode","Attack","scrollRef","scrollIntoView","behavior","overflowY","overflowX","l","Items","itemType","setItemType","itemRarity","setItemRarity","other","weapons","armors","Skills","Mods","AppLog","makeRoute","path","MAIN_OPTIONS","CharactersIcon","AppSidebar","AppSidebarCharacters","to","newCharacter","CombatParty","SelectedDamageRange","range","min","damageResults","resistanceResult","getSkillRange","prob","dodgeProb","Combat","BG","activeStyles","inactiveStyles","AppHeader","paths","chunks","useLocation","pathname","Link","includes","App","Boolean","window","location","hostname","match","engine","Styletron","store","createStore","combineReducers","compose","applyMiddleware","thunk","ReactDOM","render","StrictMode","debug","debugAfterHydration","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,gD,kCCA3CD,EAAOC,QAAU,IAA0B,4C,sCCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,iECA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,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","file":"static/js/main.aa6054c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dice-six-faces-six.e202d07a.svg\";","module.exports = __webpack_public_path__ + \"static/media/sword-brandish.a3fe9ae2.svg\";","module.exports = __webpack_public_path__ + \"static/media/shard-sword.23a923d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/spiral-thrust.4b9960c0.svg\";","module.exports = __webpack_public_path__ + \"static/media/healing1.e72c5d2c.png\";","module.exports = __webpack_public_path__ + \"static/media/fireball.267cc34c.png\";","module.exports = __webpack_public_path__ + \"static/media/thunderbolt.bb5d2de7.png\";","module.exports = __webpack_public_path__ + \"static/media/dark-blast.155cdf6e.png\";","module.exports = __webpack_public_path__ + \"static/media/crippling-blow.f9be9048.png\";","module.exports = __webpack_public_path__ + \"static/media/wrath.b68f4b08.png\";","module.exports = __webpack_public_path__ + \"static/media/charge.11d38245.png\";","module.exports = __webpack_public_path__ + \"static/media/headshot.6549c4b8.png\";","module.exports = __webpack_public_path__ + \"static/media/shadow-strike.b9675e5b.png\";","module.exports = __webpack_public_path__ + \"static/media/vanish.670b9e64.png\";","module.exports = __webpack_public_path__ + \"static/media/inspect.af959ce1.png\";","module.exports = __webpack_public_path__ + \"static/media/weapon-attack.1f0b2b4e.png\";","module.exports = __webpack_public_path__ + \"static/media/aura.72475924.svg\";","module.exports = __webpack_public_path__ + \"static/media/barbute.e93dc754.svg\";","module.exports = __webpack_public_path__ + \"static/media/muscular-torso.92dbbc2a.svg\";","module.exports = __webpack_public_path__ + \"static/media/hand.9a950e42.svg\";","module.exports = __webpack_public_path__ + \"static/media/ring.5187be72.svg\";","module.exports = __webpack_public_path__ + \"static/media/footprint.88018ef0.svg\";","module.exports = __webpack_public_path__ + \"static/media/quick-slash.1d87b52f.svg\";","module.exports = __webpack_public_path__ + \"static/media/barbed-arrow.c6c3f6ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/flame.332be8c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/bleeding-eye.12de19c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/moebius-trefoil.d014b37d.svg\";","module.exports = __webpack_public_path__ + \"static/media/triorb.b6fc9ecd.svg\";","module.exports = __webpack_public_path__ + \"static/media/shield.2cc62e8a.svg\";","module.exports = __webpack_public_path__ + \"static/media/book-cover.a02eb2a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/fist.d1b25a44.svg\";","module.exports = __webpack_public_path__ + \"static/media/fire-axe.3106dbae.svg\";","module.exports = __webpack_public_path__ + \"static/media/war-axe.e2df8956.svg\";","module.exports = __webpack_public_path__ + \"static/media/stiletto.ad33f46f.svg\";","module.exports = __webpack_public_path__ + \"static/media/croc-sword.dfa5ecf6.svg\";","module.exports = __webpack_public_path__ + \"static/media/flail.1f360b03.svg\";","module.exports = __webpack_public_path__ + \"static/media/crossed-swords.b7d2c27a.svg\";","module.exports = __webpack_public_path__ + \"static/media/katana.8ca51fab.svg\";","module.exports = __webpack_public_path__ + \"static/media/sword-hilt.409c650d.svg\";","module.exports = __webpack_public_path__ + \"static/media/orb-wand.2f0c673e.svg\";","module.exports = __webpack_public_path__ + \"static/media/wizard-staff.3e6091b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/luger.ec54b497.svg\";","module.exports = __webpack_public_path__ + \"static/media/crossbow.6d23d544.svg\";","module.exports = __webpack_public_path__ + \"static/media/bloody-sword.59d8ca0f.svg\";","module.exports = __webpack_public_path__ + \"static/media/winged-sword.c22831aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/closed-barbute.59102a4b.svg\";","module.exports = __webpack_public_path__ + \"static/media/hood.7b3df127.svg\";","module.exports = __webpack_public_path__ + \"static/media/shoulder-armor.caa17ee9.svg\";","module.exports = __webpack_public_path__ + \"static/media/robe.5b61ecba.svg\";","module.exports = __webpack_public_path__ + \"static/media/gloves.03da1411.svg\";","module.exports = __webpack_public_path__ + \"static/media/power-ring.ed9dcd22.svg\";","module.exports = __webpack_public_path__ + \"static/media/boots.b6910f10.svg\";","module.exports = __webpack_public_path__ + \"static/media/magnifying-glass.ec7b5987.svg\";","module.exports = __webpack_public_path__ + \"static/media/tombstone.31b6aa47.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencil.ac0b4bc7.svg\";","module.exports = __webpack_public_path__ + \"static/media/save.ec2d8043.svg\";","module.exports = __webpack_public_path__ + \"static/media/trash-can.3332c6a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/roll.300ea409.png\";","module.exports = __webpack_public_path__ + \"static/media/swordman.c84cfcb8.svg\";","module.exports = __webpack_public_path__ + \"static/media/swap-bag.df43fabd.svg\";","module.exports = __webpack_public_path__ + \"static/media/skills.60519e24.svg\";","module.exports = __webpack_public_path__ + \"static/media/crystal-shrine.d915d792.svg\";","module.exports = __webpack_public_path__ + \"static/media/emerald.df0125b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/two-shadows.3e048aca.svg\";","module.exports = __webpack_public_path__ + \"static/media/23761.e6671090.jpg\";","export const getKeys = <T extends string>(\r\n  obj: Partial<Record<T, any>>,\r\n): T[] => {\r\n  return Object.keys(obj) as T[]\r\n}\r\n","export const notZero = <T = any>(value: number, content: T) =>\r\n  value === 0 ? '' : content\r\n","import { notZero } from './notZero'\r\n\r\nexport const getSign = (value: number): string =>\r\n  notZero(value, value > 0 ? '+' : '-')\r\n","export const noneg = (value: number) => (value > 0 ? value : 0)\r\n","import { DiceRoll } from 'rpg-dice-roller'\r\nimport { getSign } from '../util/getSign'\r\nimport { v4 } from 'uuid'\r\nimport {\r\n  CharacterSkillCheckKeyT,\r\n  ProcessedCharacterT,\r\n  getModifierValueFromKeys,\r\n  CharacterKeyMap3,\r\n} from './Character'\r\nimport { getKeys } from '../util/getKeys'\r\nimport { noneg } from '../util/noneg'\r\n\r\nexport const THREE_D6_DIST: any = {\r\n  3: 0.46,\r\n  4: 1.85,\r\n  5: 4.62,\r\n  6: 9.25,\r\n  7: 16.2,\r\n  8: 25.92,\r\n  9: 37.5,\r\n  10: 50.0,\r\n  11: 62.5,\r\n  12: 74.07,\r\n  13: 83.79,\r\n  14: 90.74,\r\n  15: 95.37,\r\n  16: 98.14,\r\n  17: 99.53,\r\n}\r\nexport const get3d6Probability = (result: number) => {\r\n  if (result < 3) return 0.46\r\n  if (result > 17) return 99.53\r\n  return THREE_D6_DIST[result]\r\n}\r\n\r\ninterface ProcessedRollT {\r\n  n: number\r\n  d: number\r\n}\r\nconst processRollString = (rollString: string): ProcessedRollT[] => {\r\n  const rolls = rollString.split('+')\r\n  return rolls.map((roll) => {\r\n    const [n, d] = roll.split('d')\r\n    return { n: parseInt(n, 10), d: parseInt(d, 10) }\r\n  })\r\n}\r\n\r\nexport interface Roll2T {\r\n  string: string\r\n  modifier: number\r\n}\r\nexport interface Check2T {\r\n  value: number\r\n  roll: Roll2T\r\n}\r\nexport interface Roll2ResultT {\r\n  id: string\r\n  label?: string\r\n  total: number\r\n  output: string\r\n  criticalSuccess: boolean\r\n  criticalFailure: boolean\r\n  minTotal: number\r\n  maxTotal: number\r\n  averageTotal: number\r\n}\r\nexport interface Check2ResultT extends Roll2ResultT {\r\n  result: boolean\r\n  chance: number\r\n  goal: number\r\n}\r\nexport interface CharacterRollT extends Roll2T {\r\n  keys: CharacterSkillCheckKeyT[]\r\n}\r\nexport interface CharacterCheckT extends Check2T {\r\n  keys: CharacterSkillCheckKeyT[]\r\n}\r\n\r\nconst getModifierString = (modifier: number) => {\r\n  if (modifier === 0) return ''\r\n  return `${getSign(modifier)}${Math.abs(modifier)}`\r\n}\r\nexport const resolveRoll = (\r\n  roll: Roll2T,\r\n  allowNegatives: boolean = true,\r\n): Roll2ResultT => {\r\n  const string = combineRollStrings(roll.string) || '1d1-1'\r\n  const result = new DiceRoll(`${string}${getModifierString(roll.modifier)}`)\r\n  return {\r\n    id: v4(),\r\n    total: allowNegatives ? result.total : noneg(result.total),\r\n    output: result.output,\r\n    criticalSuccess: result.total === result.minTotal,\r\n    criticalFailure: result.total === result.maxTotal,\r\n    minTotal: allowNegatives ? result.minTotal : noneg(result.minTotal),\r\n    maxTotal: allowNegatives ? result.maxTotal : noneg(result.maxTotal),\r\n    averageTotal: allowNegatives\r\n      ? result.averageTotal\r\n      : noneg(result.averageTotal),\r\n  }\r\n}\r\nexport const quickRoll = (str: string, mod?: number): number =>\r\n  resolveRoll({ string: str, modifier: mod || 0 }).total\r\n\r\nexport const getCheckProbability = (check: Check2T): number => {\r\n  const { value, roll } = check\r\n  if (roll.string === '3d6' && roll.modifier === 0)\r\n    return get3d6Probability(value)\r\n  if (roll.string === '') {\r\n    return roll.modifier <= value ? 100 : 0\r\n  }\r\n  return 0\r\n}\r\n\r\nexport const resolveCheck = (\r\n  check: Check2T,\r\n  allowNegatives?: boolean,\r\n): Check2ResultT => {\r\n  const { value, roll } = check\r\n  const rollResult = resolveRoll(roll, allowNegatives)\r\n  return {\r\n    ...rollResult,\r\n    result: rollResult.total <= value,\r\n    chance: getCheckProbability(check),\r\n    goal: value,\r\n  }\r\n}\r\n\r\nexport const ZERO_ROLL: Roll2T = {\r\n  string: '',\r\n  modifier: 0,\r\n}\r\nexport const THREE_D6: Roll2T = {\r\n  string: '3d6',\r\n  modifier: 0,\r\n}\r\nexport const ZERO_CHECK: Check2T = {\r\n  value: 0,\r\n  roll: ZERO_ROLL,\r\n}\r\nexport const makeRoll = (str?: string, mod?: number): Roll2T => ({\r\n  string: str || ZERO_ROLL.string,\r\n  modifier: mod || ZERO_ROLL.modifier,\r\n})\r\nexport const makeCheck = (\r\n  value: number,\r\n  str?: string,\r\n  mod?: number,\r\n): Check2T => ({\r\n  value,\r\n  roll: {\r\n    string: str || THREE_D6.string,\r\n    modifier: mod || THREE_D6.modifier,\r\n  },\r\n})\r\nexport const makeCharacterRoll = (\r\n  keys: CharacterSkillCheckKeyT[],\r\n  str?: string,\r\n  mod?: number,\r\n): CharacterRollT => ({\r\n  keys,\r\n  string: str || ZERO_ROLL.string,\r\n  modifier: mod || ZERO_ROLL.modifier,\r\n})\r\nexport const makeCharacterCheck = (\r\n  keys: CharacterSkillCheckKeyT[],\r\n  str?: string,\r\n  mod?: number,\r\n  value?: number,\r\n): CharacterCheckT => ({\r\n  keys,\r\n  value: value || ZERO_CHECK.value,\r\n  roll: {\r\n    string: str === undefined ? THREE_D6.string : str,\r\n    modifier: mod || THREE_D6.modifier,\r\n  },\r\n})\r\nexport const makeStandardCharacterCheck = (\r\n  keys: CharacterSkillCheckKeyT[],\r\n  modifier: number = 0,\r\n) => makeCharacterCheck(keys, undefined, undefined, modifier)\r\nexport const combineRollStrings = (...rolls: string[]): string => {\r\n  const list = rolls\r\n    .filter((r) => r !== '')\r\n    .map((r) => processRollString(r))\r\n    .reduce((p, c) => [...p, ...c], [])\r\n  let result: Record<number, number> = {}\r\n  list.forEach((pRoll) => {\r\n    result[pRoll.d] = (result[pRoll.d] || 0) + pRoll.n\r\n  })\r\n  return getKeys(result)\r\n    .map((d, i) => {\r\n      return `${result[parseInt(d, 10)]}d${d}`\r\n    })\r\n    .reduce((p, c, i) => `${p}${i > 0 ? '+' : ''}${c}`, '')\r\n}\r\nexport const combineRolls = (...rolls: Roll2T[]): Roll2T => {\r\n  return rolls.reduce(\r\n    (p, c) => ({\r\n      string: combineRollStrings(p.string, c.string),\r\n      modifier: p.modifier + c.modifier,\r\n    }),\r\n    ZERO_ROLL,\r\n  )\r\n}\r\nexport const combineChecks = (...checks: Check2T[]): Check2T => {\r\n  return checks.reduce((p, c) => ({\r\n    value: p.value + c.value,\r\n    roll: combineRolls(p.roll, c.roll),\r\n  }))\r\n}\r\nexport const combineCharacterRolls = (\r\n  ...rolls: CharacterRollT[]\r\n): CharacterRollT => {\r\n  return rolls.reduce(\r\n    (p, c) => ({\r\n      ...combineRolls(p, c),\r\n      keys: [...p.keys, ...c.keys],\r\n    }),\r\n    makeCharacterRoll([]),\r\n  )\r\n}\r\nexport const reduceCharacterRoll = (\r\n  roll: CharacterRollT,\r\n  character: ProcessedCharacterT,\r\n): Roll2T => {\r\n  const keyValue = getModifierValueFromKeys(character)(roll.keys || [])\r\n  return {\r\n    string: roll.string,\r\n    modifier: roll.modifier + keyValue,\r\n  }\r\n}\r\nexport const reduceCharacterCheck = (\r\n  check: CharacterCheckT,\r\n  character: ProcessedCharacterT,\r\n): Check2T => {\r\n  const keyValue = getModifierValueFromKeys(character)(check.keys)\r\n  return {\r\n    value: check.value + keyValue,\r\n    roll: check.roll,\r\n  }\r\n}\r\nexport const resolveCharacterRoll = (\r\n  roll: CharacterRollT,\r\n  character: ProcessedCharacterT,\r\n  allowNegatives?: boolean,\r\n) => {\r\n  return resolveRoll(reduceCharacterRoll(roll, character), allowNegatives)\r\n}\r\nexport const resolveCharacterCheck = (\r\n  check: CharacterCheckT,\r\n  character: ProcessedCharacterT,\r\n  allowNegatives?: boolean,\r\n) => {\r\n  return resolveCheck(reduceCharacterCheck(check, character), allowNegatives)\r\n}\r\n\r\n// utils\r\nexport const getRollRange = (roll: Roll2T): string => {\r\n  const result = resolveRoll(roll, false)\r\n  if (result.minTotal === result.maxTotal) return `${result.maxTotal}`\r\n  return `${result.minTotal}-${result.maxTotal}`\r\n}\r\nexport const getRollText = (roll: CharacterRollT) => {\r\n  const hasKeys = roll.keys.length > 0\r\n  const hasMod = roll.modifier !== 0\r\n  const keyString = roll.keys.reduce((p, c, i) => {\r\n    const plus = i === 0 && !roll.string ? '' : '+'\r\n    return `${p}${plus}${CharacterKeyMap3[c]}`\r\n  }, '')\r\n  const modString = hasMod\r\n    ? `${roll.string || keyString ? getSign(roll.modifier) : ''}${Math.abs(\r\n        roll.modifier,\r\n      )}`\r\n    : ''\r\n  return `${roll.string}${keyString}${modString}`\r\n}\r\n","import { getKeys } from '../util/getKeys'\r\nimport {\r\n  CharacterRollT,\r\n  Roll2ResultT,\r\n  makeCharacterRoll,\r\n  combineCharacterRolls,\r\n} from './Roll2'\r\nimport { RollCheckerT } from '../contexts/RollContext'\r\n\r\nexport type DamageElementTypeT = 'fire' | 'blood' | 'light' | 'dark'\r\nexport type DamageTypeKeyT = DamageElementTypeT | 'slashing' | 'piercing'\r\n\r\ntype _DamageTypeRollsT = Record<DamageTypeKeyT, CharacterRollT | undefined>\r\nexport type DamageTypeRollsT = Partial<_DamageTypeRollsT>\r\ntype _DamageTypeResultsT = Record<DamageTypeKeyT, Roll2ResultT | undefined>\r\nexport type DamageTypeResultsT = Partial<_DamageTypeResultsT>\r\n\r\nexport interface DamageRollsResultT {\r\n  total: number\r\n  rollResults: DamageTypeResultsT\r\n}\r\n\r\nexport const DamageTypeKeyColors: Record<DamageTypeKeyT, string> = {\r\n  slashing: 'grey',\r\n  piercing: 'grey',\r\n  fire: 'orange',\r\n  blood: '#cd7474',\r\n  light: 'lemonchiffon',\r\n  dark: 'mediumpurple',\r\n}\r\n\r\nexport const getDamageTypeKeys = (\r\n  obj: DamageTypeRollsT | DamageTypeResultsT,\r\n): DamageTypeKeyT[] => getKeys<DamageTypeKeyT>(obj)\r\n\r\nexport const rollDamage = (\r\n  resolveRoll: RollCheckerT<CharacterRollT, Roll2ResultT>,\r\n) => (\r\n  rolls: DamageTypeRollsT,\r\n  crit: boolean = false,\r\n  label?: string,\r\n): DamageRollsResultT => {\r\n  let total = 0\r\n  const keys: DamageTypeKeyT[] = getKeys(rolls).filter((key) => rolls[key])\r\n  let rollResults: DamageTypeResultsT = {\r\n    slashing: undefined,\r\n    piercing: undefined,\r\n    fire: undefined,\r\n    blood: undefined,\r\n    light: undefined,\r\n    dark: undefined,\r\n  }\r\n  keys.forEach((key) => {\r\n    const roll = rolls[key] as CharacterRollT\r\n    let result = resolveRoll(roll, true, false, label)\r\n    if (crit) {\r\n      result = {\r\n        ...result,\r\n        total: result.maxTotal || result.total,\r\n      }\r\n    }\r\n    total += result.total\r\n    rollResults = { ...rollResults, [key]: result }\r\n  })\r\n  return {\r\n    total,\r\n    rollResults,\r\n  }\r\n}\r\n\r\nexport const ZERO_DAMAGE_ROLLS: DamageTypeRollsT = {\r\n  slashing: makeCharacterRoll([]),\r\n  piercing: makeCharacterRoll([]),\r\n  fire: makeCharacterRoll([]),\r\n  blood: makeCharacterRoll([]),\r\n  light: makeCharacterRoll([]),\r\n  dark: makeCharacterRoll([]),\r\n}\r\nconst force = (roll?: CharacterRollT) => roll as CharacterRollT\r\n\r\nexport const combineDamageTypeRolls = (...rolls: DamageTypeRollsT[]) => {\r\n  return rolls.reduce((p, c) => {\r\n    let ret: DamageTypeRollsT = {}\r\n    getKeys(p).forEach((key) => {\r\n      ret[key] = c[key]\r\n        ? combineCharacterRolls(force(p[key]), force(c[key]))\r\n        : p[key]\r\n    })\r\n    return ret\r\n  }, ZERO_DAMAGE_ROLLS)\r\n}\r\n","export const reduce = <TList, TRestult>(\r\n  list: TList[],\r\n  reducer: (result: TRestult, current: TList, index?: number) => TRestult,\r\n  initialValue: TRestult,\r\n): TRestult => {\r\n  return list.reduce(reducer as any, initialValue as TRestult) as TRestult\r\n}\r\n","import { CharacterTraitT, CharacterT, ProcessedCharacterT } from './Character'\r\nimport { SkillT } from './Skill'\r\nimport { getKeys } from '../util/getKeys'\r\nimport { reduce } from '../util/reduce'\r\n\r\nexport type EventTypeT = 'onHit' | 'onCrit'\r\nexport type EventsT = Partial<Record<EventTypeT, CharacterTraitT[]>>\r\nexport const EventsTypeMap: Record<EventTypeT, string> = {\r\n  onHit: 'on hit',\r\n  onCrit: 'on crit',\r\n}\r\n\r\nexport const checkEvent = (character: CharacterT, skill: SkillT) => (\r\n  event: EventTypeT,\r\n): CharacterTraitT[] | undefined => {\r\n  if ((character as ProcessedCharacterT).processed) {\r\n    throw new Error('No Processed Characters [checkEvent]')\r\n  }\r\n  const skillTraits = skill.events[event]\r\n  if (skill.combineWeaponDamage) {\r\n    const { weapon } = character\r\n    if (!weapon) return skillTraits\r\n    const traits = weapon.events[event]\r\n    if (!traits) return skillTraits\r\n    return [...(skillTraits || []), ...traits]\r\n  }\r\n  return skillTraits\r\n}\r\n\r\nconst force = (traits?: CharacterTraitT[]) => traits || []\r\nexport const combineEvents = (...events: EventsT[]): EventsT => {\r\n  return reduce<EventsT, EventsT>(\r\n    events,\r\n    (p, c) => {\r\n      let ret: EventsT = {}\r\n      getKeys(p).forEach((key) => {\r\n        ret[key] = [...force(p[key]), ...force(c[key])]\r\n      })\r\n      return ret\r\n    },\r\n    {\r\n      onHit: [],\r\n      onCrit: [],\r\n    },\r\n  )\r\n}\r\n","import { EquippableT, ItemRarityT } from './Item'\r\nimport {\r\n  DamageTypeRollsT,\r\n  ZERO_DAMAGE_ROLLS,\r\n  combineDamageTypeRolls,\r\n} from './Damage'\r\nimport { CharacterT, ProcessedCharacterT, CharacterTraitT } from './Character'\r\nimport { CharacterCheckT, makeCharacterRoll } from './Roll2'\r\nimport { EventsT, combineEvents } from './Events'\r\nimport { reduce } from '../util/reduce'\r\n\r\nexport type WeaponTypeT =\r\n  // default\r\n  | 'fists'\r\n  // S\r\n  | 'axe' // s,1\r\n  | 'greataxe' // s,2\r\n  | 'flail' // p,1\r\n  // D\r\n  | 'daggers' // p,2\r\n  | 'katana' // s,1\r\n  | 'rapier' // p,1\r\n  // I\r\n  | 'wand' // e,1\r\n  | 'staff' // e,2\r\n  // S+I\r\n  | 'elementalSword' // s,e,1\r\n  | 'elementalGreatsword' // s,e,2\r\n  // S+D\r\n  | 'sword' // s,1\r\n  | 'greatsword' // s,2\r\n  // D+I\r\n  | 'pistol' // p,e,1\r\n  | 'crossbow' // p,e,2\r\n\r\nexport type WeaponIconKeyT =\r\n  | 'fire-sword'\r\n  | 'blood-sword'\r\n  | 'light-sword'\r\n  | 'dark-sword'\r\nexport interface WeaponT extends EquippableT {\r\n  type: 'weapon'\r\n  weaponType: WeaponTypeT\r\n  accuracyCheck: CharacterCheckT\r\n  damageRolls: DamageTypeRollsT\r\n  events: EventsT\r\n  slotCount: number\r\n  slots: WeaponModT[]\r\n}\r\nexport interface ProcessedWeaponT extends WeaponT {\r\n  processed: true\r\n}\r\n\r\nexport interface WeaponTraitT {\r\n  id: string\r\n  accuracyOffset: number\r\n  damageRolls: DamageTypeRollsT\r\n  events: EventsT\r\n  traits: CharacterTraitT[]\r\n}\r\nexport const ZERO_WEAPON_TRAIT: WeaponTraitT = {\r\n  id: '',\r\n  accuracyOffset: 0,\r\n  damageRolls: ZERO_DAMAGE_ROLLS,\r\n  events: {},\r\n  traits: [],\r\n}\r\nexport interface WeaponModT {\r\n  id: string\r\n  name: string\r\n  icon?: string\r\n  rarity: ItemRarityT\r\n  traits: WeaponTraitT[]\r\n}\r\n\r\nexport const combineWeaponTraits = (\r\n  ...traits: WeaponTraitT[]\r\n): WeaponTraitT => {\r\n  return traits.reduce((p, c) => {\r\n    return {\r\n      id: c.id,\r\n      accuracyOffset: p.accuracyOffset + c.accuracyOffset,\r\n      damageRolls: combineDamageTypeRolls(p.damageRolls, c.damageRolls),\r\n      events: combineEvents(p.events, c.events),\r\n      traits: [...p.traits, ...c.traits],\r\n    }\r\n  }, ZERO_WEAPON_TRAIT)\r\n}\r\n\r\nexport const processWeapon = (weapon: WeaponT): ProcessedWeaponT => {\r\n  if ((weapon as ProcessedWeaponT).processed) {\r\n    throw new Error('No Processed Weapons Allowed')\r\n  }\r\n  const mods = weapon.slots\r\n  const traits = reduce<WeaponModT, WeaponTraitT[]>(\r\n    mods,\r\n    (p, c) => [...p, ...c.traits],\r\n    [],\r\n  )\r\n  const combinedTrait = combineWeaponTraits(...traits)\r\n  const ret: ProcessedWeaponT = {\r\n    ...weapon,\r\n    processed: true,\r\n    accuracyCheck: {\r\n      ...weapon.accuracyCheck,\r\n      value: weapon.accuracyCheck.value + combinedTrait.accuracyOffset,\r\n    },\r\n    damageRolls: combineDamageTypeRolls(\r\n      weapon.damageRolls,\r\n      combinedTrait.damageRolls,\r\n    ),\r\n    traits: [...weapon.traits, ...combinedTrait.traits],\r\n    events: combineEvents(weapon.events, combinedTrait.events),\r\n  }\r\n  console.log('weapon', weapon.name)\r\n  console.log(ret)\r\n  return ret\r\n}\r\n","import { EquippableT, ItemTypeT } from '../types/Item'\r\nimport { v4 } from 'uuid'\r\nimport { CharacterSkillCheckKeyT, CharacterTraitT } from '../types/Character'\r\nimport {\r\n  CharacterCheckT,\r\n  makeCharacterCheck,\r\n  makeCharacterRoll,\r\n} from '../types/Roll2'\r\n\r\nexport const makeRequirementCheck = (\r\n  keys: CharacterSkillCheckKeyT[],\r\n  value: number,\r\n): CharacterCheckT => makeCharacterCheck(keys, '', value, undefined)\r\n\r\nexport const BASE_EQUIPPABLE = (type: ItemTypeT): EquippableT => {\r\n  const id = v4()\r\n  return {\r\n    id,\r\n    type,\r\n    rarity: 'common',\r\n    equippable: true,\r\n    name: '',\r\n    cost: 0,\r\n    resource: 'weaponHands',\r\n    requirementCheck: makeRequirementCheck(['intelligence'], 1),\r\n    traits: [\r\n      {\r\n        id: `${id}-0`,\r\n        name: 'Bonus',\r\n        duration: -1,\r\n        healthOffset: 0,\r\n        focusOffset: 0,\r\n        abilitiesModifiers: {\r\n          strength: 0,\r\n          dexterity: 0,\r\n          intelligence: 0,\r\n          vigor: 0,\r\n        },\r\n        statsModifiers: {\r\n          health: 0,\r\n          focus: 0,\r\n          will: 0,\r\n          perception: 0,\r\n          agility: 0,\r\n          accuracy: 0,\r\n          evade: 0,\r\n        },\r\n      },\r\n    ],\r\n    damageResistances: {\r\n      slashing: makeCharacterRoll([]),\r\n      piercing: makeCharacterRoll([]),\r\n      fire: makeCharacterRoll([]),\r\n      blood: makeCharacterRoll([]),\r\n      light: makeCharacterRoll([]),\r\n      dark: makeCharacterRoll([]),\r\n    },\r\n  }\r\n}\r\n\r\nexport const makeTrait = (name: string = ''): CharacterTraitT => {\r\n  return {\r\n    id: v4(),\r\n    name,\r\n    duration: -1,\r\n    healthOffset: 0,\r\n    focusOffset: 0,\r\n    abilitiesModifiers: {\r\n      strength: 0,\r\n      dexterity: 0,\r\n      intelligence: 0,\r\n      vigor: 0,\r\n    },\r\n    statsModifiers: {\r\n      health: 0,\r\n      focus: 0,\r\n      will: 0,\r\n      perception: 0,\r\n      agility: 0,\r\n      accuracy: 0,\r\n      evade: 0,\r\n    },\r\n  }\r\n}\r\n","import { WeaponT } from '../types/Weapon'\r\nimport { v4 } from 'uuid'\r\nimport { BASE_EQUIPPABLE, makeRequirementCheck } from './util'\r\nimport { makeCharacterCheck, makeCharacterRoll } from '../types/Roll2'\r\n\r\nexport const FISTS: WeaponT = {\r\n  ...BASE_EQUIPPABLE('weapon'),\r\n  id: v4(),\r\n  equippable: true,\r\n  type: 'weapon',\r\n  weaponType: 'fists',\r\n  name: 'Unarmed',\r\n  cost: 0,\r\n  resource: 'weaponHands',\r\n  requirementCheck: makeRequirementCheck(['strength'], 1),\r\n  damageRolls: {\r\n    piercing: makeCharacterRoll([], '1d6', -3),\r\n  },\r\n  accuracyCheck: makeCharacterCheck(['dexterity']),\r\n  traits: [],\r\n  events: {},\r\n  slotCount: 0,\r\n  slots: [],\r\n}\r\n","import { WeaponT, ProcessedWeaponT, processWeapon } from './Weapon'\r\nimport { EquippableT } from './Item'\r\nimport { FISTS } from '../objects/fists'\r\nimport { DamageTypeRollsT, getDamageTypeKeys, DamageTypeKeyT } from './Damage'\r\nimport { ArmorT } from './Armor'\r\nimport { reduce } from '../util/reduce'\r\nimport { v4 } from 'uuid'\r\nimport { noneg } from '../util/noneg'\r\nimport { makeTrait } from '../objects/util'\r\nimport {\r\n  combineCharacterRolls,\r\n  CharacterRollT,\r\n  resolveCharacterCheck,\r\n} from './Roll2'\r\nimport { SkillT } from './Skill'\r\n\r\nexport type CharacterAbilityKeyT =\r\n  | 'strength'\r\n  | 'dexterity'\r\n  | 'intelligence'\r\n  | 'vigor'\r\nexport type CharacterAbilitiesT = Record<CharacterAbilityKeyT, number>\r\n\r\nexport type CharacterStatKeyT =\r\n  | 'health'\r\n  | 'focus'\r\n  | 'will'\r\n  | 'perception'\r\n  | 'agility'\r\n  | 'accuracy'\r\n  | 'evade'\r\nexport type CharacterStatsT = Record<CharacterStatKeyT, number>\r\n\r\nexport type CharacterResourceKeyT =\r\n  | 'characterPoints'\r\n  | 'weaponHands'\r\n  | 'heads'\r\n  | 'bodies'\r\n  | 'hands'\r\n  | 'fingers'\r\n  | 'feet'\r\nexport type CharacterResourcesT = Record<CharacterResourceKeyT, number>\r\n\r\nexport type CharacterSkillCheckKeyT = CharacterAbilityKeyT | CharacterStatKeyT\r\n\r\nexport interface CharacterTraitT {\r\n  id: string\r\n  name: string\r\n  healthOffset: number\r\n  focusOffset: number\r\n  abilitiesModifiers: CharacterAbilitiesT\r\n  statsModifiers: CharacterStatsT\r\n  duration: number\r\n}\r\n\r\nexport interface CharacterT {\r\n  name: string\r\n  id: string\r\n  power: number\r\n  resources: CharacterResourcesT\r\n  abilities: CharacterAbilitiesT\r\n  damageResistances: DamageTypeRollsT\r\n  traits: CharacterTraitT[]\r\n  skills: SkillT[]\r\n\r\n  equippedItems: EquippableT[]\r\n  armor: ArmorT[]\r\n  weapon?: WeaponT\r\n\r\n  healthOffset: number\r\n  focusOffset: number\r\n  partyId?: string\r\n  dead: boolean\r\n  inspected: boolean\r\n}\r\nexport interface ProcessedCharacterT extends CharacterT {\r\n  stats: CharacterStatsT\r\n  weapon: ProcessedWeaponT\r\n  processed: true\r\n}\r\n\r\nexport const getTraits = (character: CharacterT): CharacterTraitT[] => {\r\n  const armorTraits: CharacterTraitT[] = reduce<ArmorT, CharacterTraitT[]>(\r\n    character.armor,\r\n    (result, item) => [...result, ...item.traits],\r\n    [],\r\n  )\r\n  const equippedItemTraits: CharacterTraitT[] = reduce<\r\n    EquippableT,\r\n    CharacterTraitT[]\r\n  >(character.equippedItems, (result, item) => [...result, ...item.traits], [])\r\n  return [\r\n    ...character.traits,\r\n    ...processWeapon(character.weapon || FISTS).traits,\r\n    ...equippedItemTraits,\r\n    ...armorTraits,\r\n  ]\r\n}\r\n\r\nexport const getAbilities = (character: CharacterT): CharacterAbilitiesT => {\r\n  return getTraits(character)\r\n    .map((trait) => trait.abilitiesModifiers)\r\n    .reduce(\r\n      (result, cur) => ({\r\n        strength: result.strength + cur.strength,\r\n        dexterity: result.dexterity + cur.dexterity,\r\n        intelligence: result.intelligence + cur.intelligence,\r\n        vigor: result.vigor + cur.vigor,\r\n      }),\r\n      character.abilities,\r\n    )\r\n}\r\n\r\nexport const getStats = (character: CharacterT): CharacterStatsT => {\r\n  const abilities = getAbilities(character)\r\n  return getTraits(character)\r\n    .map((trait) => trait.statsModifiers)\r\n    .reduce(\r\n      (result, cur) => ({\r\n        health: result.health + cur.health,\r\n        focus: result.focus + cur.focus,\r\n        will: result.will + cur.will,\r\n        perception: result.perception + cur.perception,\r\n        agility: result.agility + cur.agility,\r\n        accuracy: result.accuracy + cur.accuracy,\r\n        evade: result.evade + cur.evade,\r\n      }),\r\n      {\r\n        health: abilities.strength * 2 + abilities.vigor,\r\n        focus: abilities.intelligence + abilities.vigor,\r\n        will: abilities.intelligence,\r\n        perception: abilities.intelligence,\r\n        // lift: (abilities.strength * abilities.strength) / 5,\r\n        agility: (abilities.vigor + abilities.dexterity) / 4,\r\n        accuracy: abilities.dexterity - 2,\r\n        evade: abilities.dexterity - 8,\r\n      },\r\n    )\r\n}\r\n\r\nexport const getDamageResistances = (\r\n  character: CharacterT,\r\n): DamageTypeRollsT => {\r\n  const armor = character.armor\r\n  const keys = getDamageTypeKeys(character.damageResistances)\r\n  return reduce<DamageTypeKeyT, DamageTypeRollsT>(\r\n    keys,\r\n    (result, key) => {\r\n      return {\r\n        ...result,\r\n        [key]: combineCharacterRolls(\r\n          result[key] as CharacterRollT,\r\n          ...armor.map((a) => a.damageResistances[key] as CharacterRollT),\r\n        ),\r\n      }\r\n    },\r\n    character.damageResistances,\r\n  )\r\n}\r\n\r\nexport const processCharacter = (\r\n  character: CharacterT,\r\n  withWeapon: boolean = true,\r\n): ProcessedCharacterT => {\r\n  if ((character as ProcessedCharacterT).processed)\r\n    return character as ProcessedCharacterT\r\n  character = withWeapon\r\n    ? character\r\n    : {\r\n        ...character,\r\n        weapon: undefined,\r\n      }\r\n\r\n  const abilities = getAbilities(character)\r\n  const stats = getStats(character)\r\n  const traits = getTraits(character)\r\n  const damageResistances = getDamageResistances(character)\r\n  const healthOffset = noneg(\r\n    traits.reduce((p, c) => p - c.healthOffset, character.healthOffset),\r\n  )\r\n  return {\r\n    ...character,\r\n    healthOffset,\r\n    weapon: processWeapon(character.weapon || FISTS),\r\n    abilities,\r\n    stats,\r\n    traits,\r\n    damageResistances,\r\n    processed: true,\r\n    dead: healthOffset >= stats.health,\r\n  }\r\n}\r\n\r\n// TODO: Maybe add the rest, but healthOffset is the wonky one\r\nexport const commitTrait = (character: CharacterT) => (\r\n  trait: CharacterTraitT,\r\n): CharacterT => {\r\n  return {\r\n    ...character,\r\n    healthOffset: noneg(character.healthOffset - trait.healthOffset),\r\n    focusOffset: noneg(character.focusOffset - trait.focusOffset),\r\n  }\r\n}\r\n\r\nexport const getModifierValueFromKeys = (character: ProcessedCharacterT) => (\r\n  keys: CharacterSkillCheckKeyT[],\r\n) =>\r\n  (keys as any[]).reduce((total: number = 0, key: CharacterSkillCheckKeyT) => {\r\n    const a: number = character.abilities[key as CharacterAbilityKeyT]\r\n    const s: number = character.stats[key as CharacterStatKeyT]\r\n    if (a) total += a\r\n    if (s) total += s\r\n    return total\r\n  }, 0)\r\n\r\nexport const setCharacterAbilityScore = (character: CharacterT) => (\r\n  key: CharacterAbilityKeyT,\r\n  value: number,\r\n  characterPoints: number = character.resources.characterPoints,\r\n): [CharacterT, EquippableT[]] =>\r\n  validateCharacter({\r\n    ...character,\r\n    power:\r\n      character.power + (character.resources.characterPoints - characterPoints),\r\n    resources: {\r\n      ...character.resources,\r\n      characterPoints,\r\n    },\r\n    abilities: {\r\n      ...character.abilities,\r\n      [key]: value,\r\n    },\r\n  })\r\n\r\nexport const CharacterKeyMap3: Record<CharacterSkillCheckKeyT, string> = {\r\n  strength: 'STR',\r\n  dexterity: 'DEX',\r\n  intelligence: 'INT',\r\n  vigor: 'VIG',\r\n  health: 'HLT',\r\n  focus: 'FOC',\r\n  will: 'WIL',\r\n  perception: 'PER',\r\n  // lift: 'LFT',\r\n  agility: 'AGL',\r\n  accuracy: 'ACC',\r\n  evade: 'EVD',\r\n}\r\n\r\nexport const characterAbilityScoreCosts: Record<\r\n  CharacterAbilityKeyT,\r\n  number\r\n> = {\r\n  strength: 10,\r\n  dexterity: 20,\r\n  intelligence: 20,\r\n  vigor: 10,\r\n}\r\n\r\nexport const CharacterStatsCostsMap: Record<CharacterSkillCheckKeyT, number> = {\r\n  ...characterAbilityScoreCosts,\r\n  health: 5,\r\n  focus: 5,\r\n  will: 10,\r\n  perception: 10,\r\n  // lift: 1,\r\n  agility: 10,\r\n  accuracy: 10,\r\n  evade: 10,\r\n}\r\n\r\nexport const canEquip = (character: CharacterT) => (\r\n  item: EquippableT,\r\n  withWeapon?: boolean,\r\n): boolean => {\r\n  if (!item) return false\r\n  if (!item.equippable) return false\r\n  const equipable = item as EquippableT\r\n  const processedCharacter = processCharacter(character, withWeapon)\r\n  if (\r\n    !resolveCharacterCheck(equipable.requirementCheck, processedCharacter)\r\n      .result\r\n  )\r\n    return false\r\n  if (equipable.type === 'weapon' && character.weapon) {\r\n    return false\r\n  } else {\r\n    if (processedCharacter.resources[equipable.resource] < equipable.cost)\r\n      return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport const equipItem = (character: CharacterT) => (\r\n  item: EquippableT,\r\n): CharacterT => {\r\n  if (!canEquip(character)(item)) return character\r\n  if (item.type === 'armor') return equipArmor(character)(item as ArmorT)\r\n  if (item.type === 'weapon') return equipWeapon(character)(item as WeaponT)\r\n  return equipGenericItem(character)(item)\r\n}\r\n\r\nexport const unequipItem = (\r\n  character: CharacterT,\r\n  validate: boolean = true,\r\n) => (itemId: string): [EquippableT[], CharacterT] => {\r\n  let equippables: EquippableT[] = []\r\n  let c = { ...character }\r\n  if (character.weapon?.id === itemId) {\r\n    equippables = [{ ...character.weapon }]\r\n    c = unequipWeapon(c)\r\n  }\r\n  const armor = character.armor.find((i) => i.id === itemId)\r\n  if (armor) {\r\n    equippables = [{ ...armor }]\r\n    c = unequipArmor(character)(armor)\r\n  }\r\n  const item = character.equippedItems.find((i) => i.id === itemId)\r\n  if (item) {\r\n    equippables = [{ ...item }]\r\n    c = unequipGenericItem(character)(item)\r\n  }\r\n  if (validate) {\r\n    let vr = validateCharacter(c)\r\n    c = vr[0]\r\n    equippables = [...equippables, ...vr[1]]\r\n  }\r\n  return [equippables, c]\r\n}\r\n\r\nexport const equipGenericItem = (character: CharacterT) => (\r\n  item: EquippableT,\r\n): CharacterT => {\r\n  const resourceValue = character.resources[item.resource]\r\n  return {\r\n    ...character,\r\n    resources: {\r\n      ...character.resources,\r\n      [item.resource]: resourceValue - item.cost,\r\n    },\r\n    equippedItems: [...character.equippedItems, item],\r\n  }\r\n}\r\n\r\nexport const unequipGenericItem = (character: CharacterT) => (\r\n  item: EquippableT,\r\n): CharacterT => {\r\n  if (!item) return character\r\n  const resourceValue = character.resources[item.resource]\r\n  return {\r\n    ...character,\r\n    resources: {\r\n      ...character.resources,\r\n      [item.resource]: resourceValue + item.cost,\r\n    },\r\n    equippedItems: character.equippedItems.filter((i) => i.id !== item.id),\r\n  }\r\n}\r\n\r\nexport const equipArmor = (character: CharacterT) => (\r\n  item: ArmorT,\r\n): CharacterT => {\r\n  const resourceValue = character.resources[item.resource]\r\n  return {\r\n    ...character,\r\n    resources: {\r\n      ...character.resources,\r\n      [item.resource]: resourceValue - item.cost,\r\n    },\r\n    armor: [...character.armor, item],\r\n  }\r\n}\r\n\r\nexport const unequipArmor = (character: CharacterT) => (\r\n  item: ArmorT,\r\n): CharacterT => {\r\n  if (!item) return character\r\n  const resourceValue = character.resources[item.resource]\r\n  return {\r\n    ...character,\r\n    resources: {\r\n      ...character.resources,\r\n      [item.resource]: resourceValue + item.cost,\r\n    },\r\n    armor: character.armor.filter((i) => i.id !== item.id),\r\n  }\r\n}\r\n\r\nexport const equipWeapon = (character: CharacterT) => (\r\n  item: WeaponT,\r\n): CharacterT => {\r\n  if (item.type !== 'weapon') return character\r\n  let weapon = character.weapon\r\n  if (weapon?.id === FISTS.id) weapon = undefined\r\n  return {\r\n    ...character,\r\n    resources: {\r\n      ...character.resources,\r\n      weaponHands:\r\n        character.resources.weaponHands -\r\n        item.cost +\r\n        (weapon ? weapon.cost : 0),\r\n    },\r\n    weapon: item,\r\n  }\r\n}\r\n\r\nexport const unequipWeapon = (character: CharacterT): CharacterT => {\r\n  if (!character.weapon) return character\r\n  return {\r\n    ...character,\r\n    resources: {\r\n      ...character.resources,\r\n      weaponHands: character.resources.weaponHands + character.weapon.cost,\r\n    },\r\n    weapon: undefined,\r\n  }\r\n}\r\n\r\nexport const getTraitValue = (\r\n  trait: CharacterTraitT,\r\n  key: CharacterSkillCheckKeyT,\r\n) => {\r\n  const abilityValue = trait.abilitiesModifiers[key as CharacterAbilityKeyT]\r\n  const statValue = trait.statsModifiers[key as CharacterStatKeyT]\r\n  return abilityValue !== undefined ? abilityValue : statValue\r\n}\r\n\r\nexport const combineTraits = (traits: CharacterTraitT[]): CharacterTraitT => {\r\n  const id = v4()\r\n  const name = 'combine' + id\r\n  return traits.reduce((result, current) => {\r\n    const ar = result.abilitiesModifiers\r\n    const ac = current.abilitiesModifiers\r\n    const sr = result.statsModifiers\r\n    const sc = current.statsModifiers\r\n    return {\r\n      id,\r\n      name,\r\n      duration: current.duration,\r\n      healthOffset: result.healthOffset + current.healthOffset,\r\n      focusOffset: result.focusOffset + current.focusOffset,\r\n      abilitiesModifiers: {\r\n        strength: ar.strength + ac.strength,\r\n        dexterity: ar.dexterity + ac.dexterity,\r\n        intelligence: ar.intelligence + ac.intelligence,\r\n        vigor: ar.vigor + ac.vigor,\r\n      },\r\n      statsModifiers: {\r\n        health: sr.health + sc.health,\r\n        focus: sr.focus + sc.focus,\r\n        will: sr.will + sc.will,\r\n        perception: sr.perception + sc.perception,\r\n        agility: sr.agility + sc.agility,\r\n        accuracy: sr.accuracy + sc.accuracy,\r\n        evade: sr.evade + sc.evade,\r\n      },\r\n    }\r\n  }, makeTrait())\r\n}\r\n\r\nexport const validateCharacter = (\r\n  character: CharacterT,\r\n): [CharacterT, EquippableT[]] => {\r\n  let pc = processCharacter(character)\r\n  let result = { ...character }\r\n  let removedItems: EquippableT[] = []\r\n  const localUpdate = (c: CharacterT) => {\r\n    result = { ...c }\r\n    pc = processCharacter(c)\r\n  }\r\n  if (!resolveCharacterCheck(pc.weapon.requirementCheck, pc).result) {\r\n    const unequipResult = unequipItem(result, false)(pc.weapon.id)\r\n    localUpdate(unequipResult[1])\r\n    if (unequipResult[0]) removedItems = [...removedItems, ...unequipResult[0]]\r\n  }\r\n  pc.armor.forEach((i) => {\r\n    if (!resolveCharacterCheck(i.requirementCheck, pc).result) {\r\n      const unequipResult = unequipItem(result, false)(i.id)\r\n      localUpdate(unequipResult[1])\r\n      if (unequipResult[0])\r\n        removedItems = [...removedItems, ...unequipResult[0]]\r\n    }\r\n  })\r\n  pc.equippedItems.forEach((i) => {\r\n    if (!resolveCharacterCheck(i.requirementCheck, pc).result) {\r\n      if (!resolveCharacterCheck(i.requirementCheck, pc).result) {\r\n        const unequipResult = unequipItem(result, false)(i.id)\r\n        localUpdate(unequipResult[1])\r\n        if (unequipResult[0])\r\n          removedItems = [...removedItems, ...unequipResult[0]]\r\n      }\r\n    }\r\n  })\r\n\r\n  if (\r\n    result.weapon?.id !== character.weapon?.id ||\r\n    result.armor.length !== character.armor.length ||\r\n    result.equippedItems.length !== result.equippedItems.length\r\n  ) {\r\n    const [ret, items] = validateCharacter(result)\r\n    removedItems = [...removedItems, ...items]\r\n    localUpdate(ret)\r\n  }\r\n  return [result, removedItems]\r\n}\r\n","import { CharacterT } from '../types/Character'\r\nimport { v4 } from 'uuid'\r\nimport { makeCharacterRoll } from '../types/Roll2'\r\n/*\r\nimport { Config, adjectives, names } from 'unique-names-generator'\r\n\r\nconst config: Config = {\r\n  dictionaries: [adjectives, names],\r\n  length: 2,\r\n  separator: ' ',\r\n}\r\n*/\r\n\r\nexport const BASE_CHARACTER: CharacterT = {\r\n  name: '-- init --', //uniqueNamesGenerator(config),\r\n  id: v4(),\r\n  power: 0,\r\n  resources: {\r\n    characterPoints: 0,\r\n    weaponHands: 0,\r\n    heads: 0,\r\n    bodies: 0,\r\n    hands: 0,\r\n    fingers: 0,\r\n    feet: 0,\r\n  },\r\n  abilities: {\r\n    strength: 0,\r\n    dexterity: 0,\r\n    intelligence: 0,\r\n    vigor: 0,\r\n  },\r\n  damageResistances: {\r\n    slashing: makeCharacterRoll([]),\r\n    piercing: makeCharacterRoll([]),\r\n    fire: makeCharacterRoll([]),\r\n    blood: makeCharacterRoll([]),\r\n    light: makeCharacterRoll([]),\r\n    dark: makeCharacterRoll([]),\r\n  },\r\n\r\n  traits: [],\r\n  skills: [],\r\n\r\n  equippedItems: [],\r\n  armor: [],\r\n\r\n  healthOffset: 0,\r\n  focusOffset: 0,\r\n  dead: false,\r\n  inspected: false,\r\n}\r\n","import { CharacterT, ProcessedCharacterT, processCharacter } from './Character'\r\nimport { ItemT, EquippableT } from './Item'\r\nimport { SkillT } from './Skill'\r\nimport { WeaponModT } from './Weapon'\r\n\r\nexport interface PartyT {\r\n  id: string\r\n  items: EquippableT[]\r\n  characters: CharacterT[]\r\n  skills: SkillT[]\r\n  mods: WeaponModT[]\r\n}\r\nexport interface ProcessedPartyT {\r\n  id: string\r\n  items: EquippableT[]\r\n  characters: ProcessedCharacterT[]\r\n  skills: SkillT[]\r\n  mods: WeaponModT[]\r\n  processed: true\r\n}\r\n\r\nexport const processParty = (party: PartyT): ProcessedPartyT => ({\r\n  ...party,\r\n  characters: party.characters.map((c) => ({\r\n    ...processCharacter(c),\r\n    partyId: party.id,\r\n  })),\r\n  processed: true,\r\n})\r\n","import { StateCoreT, StateReducerT } from './types'\r\n\r\nexport const makeReducer = (\r\n  core: StateCoreT,\r\n  initialState: any,\r\n): StateReducerT => {\r\n  return (state = initialState, action) => {\r\n    const coreFn = core[action.type]\r\n    if (coreFn) return coreFn(state, action)\r\n    return state\r\n  }\r\n}\r\n","export interface IDT {\r\n  id: string\r\n}\r\nexport const upsertIn = <T extends IDT>(list: T[], item: T) => {\r\n  return [...list.filter((i) => i.id !== item.id), item]\r\n}\r\n\r\nexport const updateIn = <T extends IDT>(\r\n  list: T[],\r\n  id: string,\r\n  accessor: (i: T) => T,\r\n) => {\r\n  return list.map((i) => (i.id === id ? accessor(i) : i))\r\n}\r\n","export const getRandom = <T>(items: T[]) =>\r\n  items[Math.floor(Math.random() * items.length)]\r\n","import { EquippableT } from '../types/Item'\r\nimport { BASE_EQUIPPABLE, makeTrait, makeRequirementCheck } from './util'\r\nimport { makeCharacterRoll } from '../types/Roll2'\r\n\r\nexport const BASIC_SHIELD: EquippableT = {\r\n  ...BASE_EQUIPPABLE('shield'),\r\n  id: 'basic-shield',\r\n  equippable: true,\r\n  type: 'shield',\r\n  rarity: 'rare',\r\n  name: 'Basic Shield',\r\n  cost: 1,\r\n  resource: 'weaponHands',\r\n  requirementCheck: makeRequirementCheck(['strength'], 3),\r\n  traits: [\r\n    {\r\n      ...makeTrait(),\r\n      id: 'basic-shield--bonus',\r\n      abilitiesModifiers: {\r\n        strength: 1,\r\n        dexterity: 0,\r\n        intelligence: 0,\r\n        vigor: 2,\r\n      },\r\n      statsModifiers: {\r\n        health: 0,\r\n        focus: 0,\r\n        will: 0,\r\n        perception: 0,\r\n        agility: -2,\r\n        accuracy: 0,\r\n        evade: 0,\r\n      },\r\n    },\r\n  ],\r\n  damageResistances: {\r\n    slashing: makeCharacterRoll([], undefined, 3),\r\n    piercing: makeCharacterRoll([], undefined, 2),\r\n    fire: makeCharacterRoll([]),\r\n    blood: makeCharacterRoll([]),\r\n    light: makeCharacterRoll([]),\r\n    dark: makeCharacterRoll([]),\r\n  },\r\n}\r\n","import { EquippableT } from '../types/Item'\r\nimport { BASE_EQUIPPABLE, makeTrait, makeRequirementCheck } from './util'\r\nimport { makeCharacterRoll } from '../types/Roll2'\r\n\r\nexport const BASIC_TOME: EquippableT = {\r\n  ...BASE_EQUIPPABLE('tome'),\r\n  id: 'basic-tome',\r\n  equippable: true,\r\n  type: 'tome',\r\n  rarity: 'unique',\r\n  name: 'Basic Tome',\r\n  cost: 1,\r\n  resource: 'weaponHands',\r\n  requirementCheck: makeRequirementCheck(['intelligence'], 12),\r\n  traits: [\r\n    {\r\n      ...makeTrait(),\r\n      id: 'basic-tome--bonus',\r\n      abilitiesModifiers: {\r\n        strength: 0,\r\n        dexterity: 0,\r\n        intelligence: 4,\r\n        vigor: 0,\r\n      },\r\n    },\r\n  ],\r\n  damageResistances: {\r\n    slashing: makeCharacterRoll([]),\r\n    piercing: makeCharacterRoll([]),\r\n    fire: makeCharacterRoll([]),\r\n    blood: makeCharacterRoll([]),\r\n    light: makeCharacterRoll([]),\r\n    dark: makeCharacterRoll([]),\r\n  },\r\n}\r\n","import { ArmorTypeT } from '../../../types/Armor'\r\n\r\nexport const ArmorUniqueNames: Record<ArmorTypeT, string[]> = {\r\n  helmet: ['Helmet of Doom', 'Helmet of Dawn'],\r\n  cowl: ['Hood of the Night'],\r\n  chestplate: ['Armor of the King'],\r\n  robe: ['Robe of the Necromancer'],\r\n  gloves: ['Gloves of the Great War'],\r\n  ring: ['Ring of Green', 'Silver Serpant Ring'],\r\n  boots: ['Boots of the Gods'],\r\n}\r\n","import { ItemRarityT } from '../../types/Item'\r\nimport { CharacterSkillCheckKeyT } from '../../types/Character'\r\nimport { ItemModifierValuesT } from './makeItem'\r\nimport { getRandom } from '../../util/getRandom'\r\n\r\nexport const shuffleArray = <T>(a: T[]): T[] => {\r\n  let array = [...a]\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1))\r\n    ;[array[i], array[j]] = [array[j], array[i]]\r\n  }\r\n  return array\r\n}\r\n\r\nexport const Rarity3d6Map: Record<number, ItemRarityT> = {\r\n  3: 'set',\r\n  4: 'unique',\r\n  5: 'legendary',\r\n  6: 'rare',\r\n  7: 'uncommon',\r\n  8: 'common',\r\n  9: 'common',\r\n  10: 'common',\r\n  11: 'common',\r\n  12: 'common',\r\n  13: 'uncommon',\r\n  14: 'uncommon',\r\n  15: 'rare',\r\n  16: 'legendary',\r\n  17: 'unique',\r\n  18: 'mythic',\r\n}\r\n\r\nexport const getItemStatRolls = (\r\n  keys: CharacterSkillCheckKeyT[],\r\n  count: number,\r\n  requirementScore: number,\r\n): ItemModifierValuesT => {\r\n  let offset = requirementScore - 13\r\n  offset = offset > 0 ? offset : 0\r\n\r\n  let statCount = count + offset\r\n  statCount = statCount > 0 ? statCount : 0\r\n\r\n  let statRolls: ItemModifierValuesT = {}\r\n  for (let i = 0; i < statCount; ++i) {\r\n    let key = getRandom(shuffleArray(keys))\r\n    statRolls[key] = (statRolls[key] || 0) + 1\r\n  }\r\n  return statRolls\r\n}\r\n","import {\r\n  CharacterSkillCheckKeyT,\r\n  CharacterAbilityKeyT,\r\n  CharacterResourceKeyT,\r\n} from '../../../types/Character'\r\nimport { ItemRarityT } from '../../../types/Item'\r\nimport { ArmorTypeT } from '../../../types/Armor'\r\nimport { getRandom } from '../../../util/getRandom'\r\nimport { ItemModifierValuesT } from '../makeItem'\r\nimport { ArmorUniqueNames } from './names'\r\nimport { DamageTypeRollsT } from '../../../types/Damage'\r\nimport { shuffleArray, getItemStatRolls } from '../util'\r\nimport { quickRoll, makeCharacterRoll } from '../../../types/Roll2'\r\n\r\nexport const ArmorRequirementKeys: Record<\r\n  ArmorTypeT,\r\n  CharacterAbilityKeyT[]\r\n> = {\r\n  helmet: ['strength', 'dexterity'],\r\n  cowl: ['dexterity', 'intelligence'],\r\n  chestplate: ['strength', 'vigor'],\r\n  robe: ['dexterity', 'intelligence'],\r\n  gloves: ['strength', 'dexterity', 'intelligence'],\r\n  ring: ['strength', 'dexterity', 'intelligence'],\r\n  boots: ['strength', 'dexterity', 'intelligence'],\r\n}\r\n\r\nexport const ArmorCostsT: Record<ArmorTypeT, number> = {\r\n  helmet: 1,\r\n  cowl: 1,\r\n  chestplate: 1,\r\n  robe: 1,\r\n  gloves: 2,\r\n  ring: 1,\r\n  boots: 2,\r\n}\r\n\r\nexport const ArmorResourcesT: Record<ArmorTypeT, CharacterResourceKeyT> = {\r\n  helmet: 'heads',\r\n  cowl: 'heads',\r\n  chestplate: 'bodies',\r\n  robe: 'bodies',\r\n  gloves: 'hands',\r\n  ring: 'fingers',\r\n  boots: 'feet',\r\n}\r\n\r\nexport type ArmorStatKeyT = Record<ArmorTypeT, CharacterSkillCheckKeyT[]>\r\nconst armorStatKeysBase: ArmorStatKeyT = {\r\n  helmet: ['strength', 'intelligence', 'vigor', 'accuracy'],\r\n  cowl: ['dexterity', 'intelligence', 'agility', 'evade'],\r\n  chestplate: ['strength', 'intelligence', 'vigor'],\r\n  robe: ['dexterity', 'intelligence', 'agility', 'evade'],\r\n  gloves: [\r\n    'strength',\r\n    'dexterity',\r\n    'intelligence',\r\n    'vigor',\r\n    'health',\r\n    'focus',\r\n    'agility',\r\n    'accuracy',\r\n  ],\r\n  ring: [\r\n    'strength',\r\n    'dexterity',\r\n    'intelligence',\r\n    'vigor',\r\n    'health',\r\n    'focus',\r\n    'will',\r\n    'perception',\r\n    'agility',\r\n    'accuracy',\r\n    'evade',\r\n  ],\r\n  boots: [\r\n    'strength',\r\n    'dexterity',\r\n    'intelligence',\r\n    'vigor',\r\n    'health',\r\n    'focus',\r\n    'agility',\r\n    'evade',\r\n  ],\r\n}\r\nexport const ArmorRarityStatKeys: Record<ItemRarityT, ArmorStatKeyT> = {\r\n  common: armorStatKeysBase,\r\n  uncommon: armorStatKeysBase,\r\n  rare: armorStatKeysBase,\r\n  legendary: armorStatKeysBase,\r\n  unique: armorStatKeysBase,\r\n  mythic: armorStatKeysBase,\r\n  set: armorStatKeysBase,\r\n}\r\n\r\nexport type ArmorNameKeyT = Record<ArmorTypeT, string>\r\nexport const ArmorNameKeys = (): Record<ItemRarityT, ArmorNameKeyT> => ({\r\n  common: {\r\n    helmet: 'Common Helmet',\r\n    cowl: 'Common Hood',\r\n    chestplate: 'Common Chestplate',\r\n    robe: 'Common Robe',\r\n    gloves: 'Common Gloves',\r\n    ring: 'Common Ring',\r\n    boots: 'Common Boots',\r\n  },\r\n  uncommon: {\r\n    helmet: 'Uncommon Helmet',\r\n    cowl: 'Uncommon Hood',\r\n    chestplate: 'Uncommon Chestplate',\r\n    robe: 'Uncommon Robe',\r\n    gloves: 'Uncommon Gloves',\r\n    ring: 'Uncommon Ring',\r\n    boots: 'Uncommon Boots',\r\n  },\r\n  rare: {\r\n    helmet: 'Rare Helmet',\r\n    cowl: 'Rare Hood',\r\n    chestplate: 'Rare Chestplate',\r\n    robe: 'Rare Robe',\r\n    gloves: 'Rare Gloves',\r\n    ring: 'Rare Ring',\r\n    boots: 'Rare Boots',\r\n  },\r\n  legendary: {\r\n    helmet: 'Epic Helmet',\r\n    cowl: 'Epic Hood',\r\n    chestplate: 'Epic Chestplate',\r\n    robe: 'Epic Robe',\r\n    gloves: 'Epic Gloves',\r\n    ring: 'Epic Ring',\r\n    boots: 'Epic Boots',\r\n  },\r\n  unique: {\r\n    helmet: getRandom(ArmorUniqueNames.helmet),\r\n    cowl: getRandom(ArmorUniqueNames.cowl),\r\n    chestplate: getRandom(ArmorUniqueNames.chestplate),\r\n    robe: getRandom(ArmorUniqueNames.robe),\r\n    gloves: getRandom(ArmorUniqueNames.gloves),\r\n    ring: getRandom(ArmorUniqueNames.ring),\r\n    boots: getRandom(ArmorUniqueNames.boots),\r\n  },\r\n  mythic: {\r\n    helmet: 'Mythic Helmet',\r\n    cowl: 'Mythic Hood',\r\n    chestplate: 'Mythic Chestplate',\r\n    robe: 'Mythic Robe',\r\n    gloves: 'Mythic Gloves',\r\n    ring: 'Mythic Ring',\r\n    boots: 'Mythic Boots',\r\n  },\r\n  set: {\r\n    helmet: 'Set Helmet',\r\n    cowl: 'Set Hood',\r\n    chestplate: 'Set Chestplate',\r\n    robe: 'Set Robe',\r\n    gloves: 'Set Gloves',\r\n    ring: 'Set Ring',\r\n    boots: 'Set Boots',\r\n  },\r\n})\r\n\r\nexport type ArmorStatCountT = Record<ArmorTypeT, number[]>\r\nexport const ArmorRarityStatCounts: Record<ItemRarityT, number> = {\r\n  common: 0,\r\n  uncommon: 1,\r\n  rare: 2,\r\n  legendary: 3,\r\n  unique: 4,\r\n  mythic: 5,\r\n  set: 5,\r\n}\r\n\r\nexport const makeStaticRoll = (str: string) =>\r\n  makeCharacterRoll([], '', quickRoll(str))\r\nexport const makeRoll = (str: string) => makeCharacterRoll([], str)\r\nexport type ArmorResistanceT = Record<ArmorTypeT, DamageTypeRollsT>\r\nexport const ArmorResistances = (): Record<ItemRarityT, ArmorResistanceT> => ({\r\n  common: {\r\n    helmet: {\r\n      slashing: makeStaticRoll('1d2-1'),\r\n      piercing: makeStaticRoll('1d2-1'),\r\n    },\r\n    cowl: {\r\n      blood: makeStaticRoll('1d2-1'),\r\n      light: makeStaticRoll('1d2-1'),\r\n      dark: makeStaticRoll('1d2-1'),\r\n    },\r\n    chestplate: {\r\n      slashing: makeStaticRoll('1d2-1'),\r\n      piercing: makeStaticRoll('1d2-1'),\r\n      fire: makeStaticRoll('1d2-1'),\r\n    },\r\n    robe: {\r\n      fire: makeStaticRoll('1d2-1'),\r\n      blood: makeStaticRoll('1d2-1'),\r\n      light: makeStaticRoll('1d2-1'),\r\n      dark: makeStaticRoll('1d2-1'),\r\n    },\r\n    gloves: {\r\n      slashing: makeStaticRoll('1d2-1'),\r\n      piercing: makeStaticRoll('1d2-1'),\r\n    },\r\n    ring: {\r\n      blood: makeStaticRoll('1d2-1'),\r\n      light: makeStaticRoll('1d2-1'),\r\n      dark: makeStaticRoll('1d2-1'),\r\n    },\r\n    boots: {\r\n      slashing: makeStaticRoll('1d2-1'),\r\n      piercing: makeStaticRoll('1d2-1'),\r\n    },\r\n  },\r\n  uncommon: {\r\n    helmet: {\r\n      slashing: makeStaticRoll('1d3-1'),\r\n      piercing: makeStaticRoll('1d3-1'),\r\n    },\r\n    cowl: {\r\n      blood: makeStaticRoll('1d3-1'),\r\n      light: makeStaticRoll('1d3-1'),\r\n      dark: makeStaticRoll('1d3-1'),\r\n    },\r\n    chestplate: {\r\n      slashing: makeStaticRoll('1d3-1'),\r\n      piercing: makeStaticRoll('1d3-1'),\r\n      fire: makeStaticRoll('1d3-1'),\r\n    },\r\n    robe: {\r\n      fire: makeStaticRoll('1d3-1'),\r\n      blood: makeStaticRoll('1d3-1'),\r\n      light: makeStaticRoll('1d3-1'),\r\n      dark: makeStaticRoll('1d3-1'),\r\n    },\r\n    gloves: {\r\n      slashing: makeStaticRoll('1d3-1'),\r\n      piercing: makeStaticRoll('1d3-1'),\r\n    },\r\n    ring: {\r\n      blood: makeStaticRoll('1d3-1'),\r\n      light: makeStaticRoll('1d3-1'),\r\n      dark: makeStaticRoll('1d3-1'),\r\n    },\r\n    boots: {\r\n      slashing: makeStaticRoll('1d3-1'),\r\n      piercing: makeStaticRoll('1d3-1'),\r\n    },\r\n  },\r\n  rare: {\r\n    helmet: {\r\n      slashing: makeStaticRoll('1d4-1'),\r\n      piercing: makeStaticRoll('1d4-1'),\r\n    },\r\n    cowl: {\r\n      blood: makeStaticRoll('1d4-1'),\r\n      light: makeStaticRoll('1d4-1'),\r\n      dark: makeStaticRoll('1d4-1'),\r\n    },\r\n    chestplate: {\r\n      slashing: makeStaticRoll('1d4-1'),\r\n      piercing: makeStaticRoll('1d4-1'),\r\n      fire: makeStaticRoll('1d4-1'),\r\n    },\r\n    robe: {\r\n      fire: makeStaticRoll('1d4-1'),\r\n      blood: makeStaticRoll('1d4-1'),\r\n      light: makeStaticRoll('1d4-1'),\r\n      dark: makeStaticRoll('1d4-1'),\r\n    },\r\n    gloves: {\r\n      slashing: makeStaticRoll('1d4-1'),\r\n      piercing: makeStaticRoll('1d4-1'),\r\n    },\r\n    ring: {\r\n      blood: makeStaticRoll('1d4-1'),\r\n      light: makeStaticRoll('1d4-1'),\r\n      dark: makeStaticRoll('1d4-1'),\r\n    },\r\n    boots: {\r\n      slashing: makeStaticRoll('1d4-1'),\r\n      piercing: makeStaticRoll('1d4-1'),\r\n    },\r\n  },\r\n  legendary: {\r\n    helmet: {\r\n      slashing: makeStaticRoll('1d5-1'),\r\n      piercing: makeStaticRoll('1d5-1'),\r\n    },\r\n    cowl: {\r\n      blood: makeStaticRoll('1d5-1'),\r\n      light: makeStaticRoll('1d5-1'),\r\n      dark: makeStaticRoll('1d5-1'),\r\n    },\r\n    chestplate: {\r\n      slashing: makeStaticRoll('1d5-1'),\r\n      piercing: makeStaticRoll('1d5-1'),\r\n      fire: makeStaticRoll('1d5-1'),\r\n    },\r\n    robe: {\r\n      fire: makeStaticRoll('1d5-1'),\r\n      blood: makeStaticRoll('1d5-1'),\r\n      light: makeStaticRoll('1d5-1'),\r\n      dark: makeStaticRoll('1d5-1'),\r\n    },\r\n    gloves: {\r\n      slashing: makeStaticRoll('1d5-1'),\r\n      piercing: makeStaticRoll('1d5-1'),\r\n    },\r\n    ring: {\r\n      fire: makeStaticRoll('1d5-1'),\r\n      blood: makeStaticRoll('1d5-1'),\r\n      light: makeStaticRoll('1d5-1'),\r\n      dark: makeStaticRoll('1d5-1'),\r\n    },\r\n    boots: {\r\n      slashing: makeStaticRoll('1d5-1'),\r\n      piercing: makeStaticRoll('1d5-1'),\r\n    },\r\n  },\r\n  unique: {\r\n    helmet: {\r\n      slashing: makeRoll('1d6'),\r\n      piercing: makeRoll('1d6'),\r\n      fire: makeRoll('1d6'),\r\n      blood: makeRoll('1d6'),\r\n      light: makeRoll('1d6'),\r\n      dark: makeRoll('1d6'),\r\n    },\r\n    cowl: {\r\n      slashing: makeRoll('1d6'),\r\n      piercing: makeRoll('1d6'),\r\n      fire: makeRoll('1d6'),\r\n      blood: makeRoll('1d6'),\r\n      light: makeRoll('1d6'),\r\n      dark: makeRoll('1d6'),\r\n    },\r\n    chestplate: {\r\n      slashing: makeRoll('1d6'),\r\n      piercing: makeRoll('1d6'),\r\n      fire: makeRoll('1d6'),\r\n      blood: makeRoll('1d6'),\r\n      light: makeRoll('1d6'),\r\n      dark: makeRoll('1d6'),\r\n    },\r\n    robe: {\r\n      slashing: makeRoll('1d6'),\r\n      piercing: makeRoll('1d6'),\r\n      fire: makeRoll('1d6'),\r\n      blood: makeRoll('1d6'),\r\n      light: makeRoll('1d6'),\r\n      dark: makeRoll('1d6'),\r\n    },\r\n    gloves: {\r\n      slashing: makeStaticRoll('1d2-1'),\r\n      piercing: makeStaticRoll('1d2-1'),\r\n      fire: makeRoll('1d6'),\r\n      blood: makeRoll('1d6'),\r\n      light: makeRoll('1d6'),\r\n      dark: makeRoll('1d6'),\r\n    },\r\n    ring: {\r\n      slashing: makeRoll('1d6'),\r\n      piercing: makeRoll('1d6'),\r\n      fire: makeRoll('1d6'),\r\n      blood: makeRoll('1d6'),\r\n      light: makeRoll('1d6'),\r\n      dark: makeRoll('1d6'),\r\n    },\r\n    boots: {\r\n      slashing: makeRoll('1d6'),\r\n      piercing: makeRoll('1d6'),\r\n      fire: makeRoll('1d6'),\r\n      blood: makeRoll('1d6'),\r\n      light: makeRoll('1d6'),\r\n      dark: makeRoll('1d6'),\r\n    },\r\n  },\r\n  mythic: {\r\n    helmet: {\r\n      slashing: makeRoll('1d6'),\r\n      piercing: makeRoll('1d6'),\r\n      fire: makeRoll('1d6'),\r\n      blood: makeRoll('1d6'),\r\n      light: makeRoll('1d6'),\r\n      dark: makeRoll('1d6'),\r\n    },\r\n    cowl: {\r\n      slashing: makeRoll('1d6'),\r\n      piercing: makeRoll('1d6'),\r\n      fire: makeRoll('1d6'),\r\n      blood: makeRoll('1d6'),\r\n      light: makeRoll('1d6'),\r\n      dark: makeRoll('1d6'),\r\n    },\r\n    chestplate: {\r\n      slashing: makeRoll('1d6'),\r\n      piercing: makeRoll('1d6'),\r\n      fire: makeRoll('1d6'),\r\n      blood: makeRoll('1d6'),\r\n      light: makeRoll('1d6'),\r\n      dark: makeRoll('1d6'),\r\n    },\r\n    robe: {\r\n      slashing: makeRoll('1d6'),\r\n      piercing: makeRoll('1d6'),\r\n      fire: makeRoll('1d6'),\r\n      blood: makeRoll('1d6'),\r\n      light: makeRoll('1d6'),\r\n      dark: makeRoll('1d6'),\r\n    },\r\n    gloves: {\r\n      slashing: makeStaticRoll('1d2-1'),\r\n      piercing: makeStaticRoll('1d2-1'),\r\n      fire: makeRoll('1d6'),\r\n      blood: makeRoll('1d6'),\r\n      light: makeRoll('1d6'),\r\n      dark: makeRoll('1d6'),\r\n    },\r\n    ring: {\r\n      slashing: makeRoll('1d6'),\r\n      piercing: makeRoll('1d6'),\r\n      fire: makeRoll('1d6'),\r\n      blood: makeRoll('1d6'),\r\n      light: makeRoll('1d6'),\r\n      dark: makeRoll('1d6'),\r\n    },\r\n    boots: {\r\n      slashing: makeRoll('1d6'),\r\n      piercing: makeRoll('1d6'),\r\n      fire: makeRoll('1d6'),\r\n      blood: makeRoll('1d6'),\r\n      light: makeRoll('1d6'),\r\n      dark: makeRoll('1d6'),\r\n    },\r\n  },\r\n  set: {\r\n    helmet: {\r\n      slashing: makeRoll('1d6'),\r\n      piercing: makeRoll('1d6'),\r\n      fire: makeRoll('1d6'),\r\n      blood: makeRoll('1d6'),\r\n      light: makeRoll('1d6'),\r\n      dark: makeRoll('1d6'),\r\n    },\r\n    cowl: {\r\n      slashing: makeRoll('1d6'),\r\n      piercing: makeRoll('1d6'),\r\n      fire: makeRoll('1d6'),\r\n      blood: makeRoll('1d6'),\r\n      light: makeRoll('1d6'),\r\n      dark: makeRoll('1d6'),\r\n    },\r\n    chestplate: {\r\n      slashing: makeRoll('1d6'),\r\n      piercing: makeRoll('1d6'),\r\n      fire: makeRoll('1d6'),\r\n      blood: makeRoll('1d6'),\r\n      light: makeRoll('1d6'),\r\n      dark: makeRoll('1d6'),\r\n    },\r\n    robe: {\r\n      slashing: makeRoll('1d6'),\r\n      piercing: makeRoll('1d6'),\r\n      fire: makeRoll('1d6'),\r\n      blood: makeRoll('1d6'),\r\n      light: makeRoll('1d6'),\r\n      dark: makeRoll('1d6'),\r\n    },\r\n    gloves: {\r\n      slashing: makeStaticRoll('1d2-1'),\r\n      piercing: makeStaticRoll('1d2-1'),\r\n      fire: makeRoll('1d6'),\r\n      blood: makeRoll('1d6'),\r\n      light: makeRoll('1d6'),\r\n      dark: makeRoll('1d6'),\r\n    },\r\n    ring: {\r\n      slashing: makeRoll('1d6'),\r\n      piercing: makeRoll('1d6'),\r\n      fire: makeRoll('1d6'),\r\n      blood: makeRoll('1d6'),\r\n      light: makeRoll('1d6'),\r\n      dark: makeRoll('1d6'),\r\n    },\r\n    boots: {\r\n      slashing: makeRoll('1d6'),\r\n      piercing: makeRoll('1d6'),\r\n      fire: makeRoll('1d6'),\r\n      blood: makeRoll('1d6'),\r\n      light: makeRoll('1d6'),\r\n      dark: makeRoll('1d6'),\r\n    },\r\n  },\r\n})\r\n\r\nexport const getArmorStatRolls = (\r\n  type: ArmorTypeT,\r\n  rarity: ItemRarityT,\r\n  requirementScore: number,\r\n): ItemModifierValuesT => {\r\n  const keys = shuffleArray(ArmorRarityStatKeys[rarity][type])\r\n  let counts = ArmorRarityStatCounts[rarity]\r\n  return getItemStatRolls(keys, counts, requirementScore)\r\n}\r\n","import { ArmorT } from '../../../../types/Armor'\r\n\r\nexport const UNIQUE_ARMORS: ArmorT[] = []\r\n","import { ArmorT } from '../../../../types/Armor'\r\n\r\nexport const MYTHIC_ARMORS: ArmorT[] = []\r\n","import { ArmorT } from '../../../../types/Armor'\r\n\r\nexport const SET_ARMORS: ArmorT[] = []\r\n","import { BASE_EQUIPPABLE, makeRequirementCheck } from '../../util'\r\nimport { DamageTypeRollsT } from '../../../types/Damage'\r\nimport { ItemRarityT } from '../../../types/Item'\r\nimport { ItemModifierValuesT } from '../makeItem'\r\nimport { ArmorT, ArmorTypeT } from '../../../types/Armor'\r\nimport { CharacterResourceKeyT } from '../../../types/Character'\r\nimport { getRandom } from '../../../util/getRandom'\r\nimport {\r\n  ArmorRequirementKeys,\r\n  ArmorNameKeys,\r\n  ArmorCostsT,\r\n  ArmorResourcesT,\r\n  getArmorStatRolls,\r\n  ArmorResistances,\r\n} from './stats'\r\nimport { UNIQUE_ARMORS } from './uniques'\r\nimport { MYTHIC_ARMORS } from './mythics'\r\nimport { Rarity3d6Map } from '../util'\r\nimport { SET_ARMORS } from './sets'\r\nimport { CharacterCheckT, quickRoll } from '../../../types/Roll2'\r\n\r\nexport const buildArmor = (type: ArmorTypeT, rarity?: ItemRarityT): ArmorT => {\r\n  rarity = rarity || Rarity3d6Map[quickRoll('3d6')]\r\n  const requirementCheck = makeRequirementCheck(\r\n    [getRandom(ArmorRequirementKeys[type])],\r\n    10, //getRollValue('3d6'),\r\n  )\r\n  const unique = UNIQUE_ARMORS.find(\r\n    (a) => a.armorType === type || a.requirementCheck === requirementCheck,\r\n  )\r\n  const mythic = MYTHIC_ARMORS.find(\r\n    (a) => a.armorType === type || a.requirementCheck === requirementCheck,\r\n  )\r\n  const set = SET_ARMORS.find(\r\n    (a) => a.armorType === type || a.requirementCheck === requirementCheck,\r\n  )\r\n  if (rarity === 'unique' && unique) return unique\r\n  if (rarity === 'mythic' && mythic) return mythic\r\n  if (rarity === 'set' && set) return set\r\n  return createArmor(\r\n    type,\r\n    ArmorNameKeys()[rarity][type],\r\n    ArmorCostsT[type],\r\n    ArmorResourcesT[type],\r\n    requirementCheck,\r\n    getArmorStatRolls(type, rarity, requirementCheck.value),\r\n    ArmorResistances()[rarity][type],\r\n    rarity,\r\n  )\r\n}\r\n\r\nexport const createArmor = (\r\n  armorType: ArmorTypeT,\r\n  name: string,\r\n  cost: number,\r\n  resource: CharacterResourceKeyT,\r\n  requirementCheck: CharacterCheckT,\r\n  statRolls: ItemModifierValuesT,\r\n  damageRolls: DamageTypeRollsT,\r\n  rarity: ItemRarityT,\r\n): ArmorT => {\r\n  const base = BASE_EQUIPPABLE('armor')\r\n  return {\r\n    ...base,\r\n    type: 'armor',\r\n    armorType,\r\n    name,\r\n    cost,\r\n    resource,\r\n    requirementCheck,\r\n    rarity,\r\n    damageResistances: {\r\n      ...base.damageResistances,\r\n      ...damageRolls,\r\n    },\r\n    traits: [\r\n      {\r\n        id: `${base.id}--bonus`,\r\n        name: 'Armor Trait',\r\n        duration: -1,\r\n        healthOffset: 0,\r\n        focusOffset: 0,\r\n        abilitiesModifiers: {\r\n          strength: statRolls.strength || 0,\r\n          dexterity: statRolls.dexterity || 0,\r\n          intelligence: statRolls.intelligence || 0,\r\n          vigor: statRolls.vigor || 0,\r\n        },\r\n        statsModifiers: {\r\n          health: statRolls.health || 0,\r\n          focus: statRolls.focus || 0,\r\n          will: statRolls.will || 0,\r\n          perception: statRolls.perception || 0,\r\n          agility: statRolls.agility || 0,\r\n          accuracy: statRolls.accuracy || 0,\r\n          evade: statRolls.evade || 0,\r\n        },\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import {\r\n  CharacterSkillCheckKeyT,\r\n  CharacterAbilityKeyT,\r\n} from '../../../types/Character'\r\nimport { ItemRarityT } from '../../../types/Item'\r\nimport { ArmorTypeT } from '../../../types/Armor'\r\nimport { getRandom } from '../../../util/getRandom'\r\nimport { ItemModifierValuesT } from '../makeItem'\r\nimport { DamageTypeRollsT, DamageElementTypeT } from '../../../types/Damage'\r\nimport { shuffleArray, getItemStatRolls } from '../util'\r\nimport { WeaponTypeT } from '../../../types/Weapon'\r\nimport {\r\n  quickRoll,\r\n  CharacterRollT,\r\n  makeCharacterRoll,\r\n} from '../../../types/Roll2'\r\n\r\nexport const WeaponRequirementKeys: Record<\r\n  WeaponTypeT,\r\n  CharacterAbilityKeyT[]\r\n> = {\r\n  fists: ['strength'],\r\n  axe: ['strength'],\r\n  greataxe: ['strength'],\r\n  flail: ['strength'],\r\n  daggers: ['dexterity'],\r\n  katana: ['dexterity'],\r\n  rapier: ['dexterity'],\r\n  wand: ['intelligence'],\r\n  staff: ['intelligence'],\r\n  elementalSword: ['strength', 'intelligence'],\r\n  elementalGreatsword: ['strength', 'intelligence'],\r\n  sword: ['strength', 'dexterity'],\r\n  greatsword: ['strength', 'dexterity'],\r\n  pistol: ['dexterity', 'intelligence'],\r\n  crossbow: ['dexterity', 'intelligence'],\r\n}\r\n\r\nexport const WeaponCosts: Record<WeaponTypeT, number> = {\r\n  fists: 1,\r\n  axe: 1,\r\n  greataxe: 2,\r\n  flail: 1,\r\n  daggers: 2,\r\n  katana: 1,\r\n  rapier: 1,\r\n  wand: 1,\r\n  staff: 2,\r\n  elementalSword: 1,\r\n  elementalGreatsword: 2,\r\n  sword: 1,\r\n  greatsword: 2,\r\n  pistol: 1,\r\n  crossbow: 2,\r\n}\r\n\r\nexport type WeaponStatKeyT = Record<WeaponTypeT, CharacterSkillCheckKeyT[]>\r\nconst weaponStatKeysBase: WeaponStatKeyT = {\r\n  fists: ['strength', 'vigor'],\r\n  axe: ['strength', 'vigor', 'health', 'agility'],\r\n  greataxe: ['strength', 'vigor', 'health', 'agility'],\r\n  flail: ['strength', 'vigor', 'health', 'agility'],\r\n  daggers: ['dexterity', 'vigor', 'health', 'agility'],\r\n  katana: ['dexterity', 'vigor', 'health', 'agility'],\r\n  rapier: ['dexterity', 'vigor', 'health', 'agility'],\r\n  wand: ['intelligence', 'vigor', 'agility'],\r\n  staff: ['intelligence', 'vigor', 'perception', 'will'],\r\n  elementalSword: ['intelligence', 'vigor', 'strength', 'will'],\r\n  elementalGreatsword: ['intelligence', 'vigor', 'strength', 'will'],\r\n  sword: ['strength', 'intelligence', 'health', 'agility'],\r\n  greatsword: ['strength', 'intelligence', 'health', 'vigor'],\r\n  pistol: ['dexterity', 'intelligence', 'perception', 'vigor'],\r\n  crossbow: ['dexterity', 'intelligence', 'perception', 'vigor'],\r\n}\r\nexport const WeaponRarityStatKeys: Record<ItemRarityT, WeaponStatKeyT> = {\r\n  common: weaponStatKeysBase,\r\n  uncommon: weaponStatKeysBase,\r\n  rare: weaponStatKeysBase,\r\n  legendary: weaponStatKeysBase,\r\n  unique: weaponStatKeysBase,\r\n  mythic: weaponStatKeysBase,\r\n  set: weaponStatKeysBase,\r\n}\r\n\r\nexport type WeaponNameKeyT = Record<WeaponTypeT, string>\r\nexport const WeaponNameKeys = (): Record<ItemRarityT, WeaponNameKeyT> => ({\r\n  common: {\r\n    fists: 'Unarmed',\r\n    axe: 'Common Axe',\r\n    greataxe: 'Common Greataxe',\r\n    flail: 'Common Flail',\r\n    daggers: 'Common Daggers',\r\n    katana: 'Common Katana',\r\n    rapier: 'Common Rapier',\r\n    wand: 'Common Wand',\r\n    staff: 'Common Staff',\r\n    elementalSword: 'Elemental Sword',\r\n    elementalGreatsword: 'Elemental Greatsword',\r\n    sword: 'Common Sword',\r\n    greatsword: 'Common Greatsword',\r\n    pistol: 'Common Pistol',\r\n    crossbow: 'Common Crossbow',\r\n  },\r\n  uncommon: {\r\n    fists: 'Unarmed',\r\n    axe: 'Uncommon Axe',\r\n    greataxe: 'Uncommon Greataxe',\r\n    flail: 'Uncommon Flail',\r\n    daggers: 'Uncommon Daggers',\r\n    katana: 'Uncommon Katana',\r\n    rapier: 'Uncommon Rapier',\r\n    wand: 'Uncommon Wand',\r\n    staff: 'Uncommon Staff',\r\n    elementalSword: 'Elemental Sword',\r\n    elementalGreatsword: 'Elemental Greatsword',\r\n    sword: 'Uncommon Sword',\r\n    greatsword: 'Uncommon Greatsword',\r\n    pistol: 'Uncommon Pistol',\r\n    crossbow: 'Uncommon Crossbow',\r\n  },\r\n  rare: {\r\n    fists: 'Unarmed',\r\n    axe: 'Rare Axe',\r\n    greataxe: 'Rare Greataxe',\r\n    flail: 'Rare Flail',\r\n    daggers: 'Rare Daggers',\r\n    katana: 'Rare Katana',\r\n    rapier: 'Rare Rapier',\r\n    wand: 'Rare Wand',\r\n    staff: 'Rare Staff',\r\n    elementalSword: 'Elemental Sword',\r\n    elementalGreatsword: 'Elemental Greatsword',\r\n    sword: 'Rare Sword',\r\n    greatsword: 'Rare Greatsword',\r\n    pistol: 'Rare Pistol',\r\n    crossbow: 'Rare Crossbow',\r\n  },\r\n  legendary: {\r\n    fists: 'Unarmed',\r\n    axe: 'Epic Axe',\r\n    greataxe: 'Epic Greataxe',\r\n    flail: 'Epic Flail',\r\n    daggers: 'Epic Daggers',\r\n    katana: 'Epic Katana',\r\n    rapier: 'Epic Rapier',\r\n    wand: 'Epic Wand',\r\n    staff: 'Epic Staff',\r\n    elementalSword: 'Elemental Sword',\r\n    elementalGreatsword: 'Elemental Greatsword',\r\n    sword: 'Epic Sword',\r\n    greatsword: 'Epic Greatsword',\r\n    pistol: 'Epic Pistol',\r\n    crossbow: 'Epic Crossbow',\r\n  },\r\n  unique: {\r\n    fists: 'Unarmed',\r\n    axe: 'Unique Axe',\r\n    greataxe: 'Unique Greataxe',\r\n    flail: 'Unique Flail',\r\n    daggers: 'Unique Daggers',\r\n    katana: 'Unique Katana',\r\n    rapier: 'Unique Rapier',\r\n    wand: 'Unique Wand',\r\n    staff: 'Unique Staff',\r\n    elementalSword: 'Elemental Sword',\r\n    elementalGreatsword: 'Elemental Greatsword',\r\n    sword: 'Unique Sword',\r\n    greatsword: 'Unique Greatsword',\r\n    pistol: 'Unique Pistol',\r\n    crossbow: 'Unique Crossbow',\r\n  },\r\n  mythic: {\r\n    fists: 'Unarmed',\r\n    axe: 'Mythic Axe',\r\n    greataxe: 'Mythic Greataxe',\r\n    flail: 'Mythic Flail',\r\n    daggers: 'Mythic Daggers',\r\n    katana: 'Mythic Katana',\r\n    rapier: 'Mythic Rapier',\r\n    wand: 'Mythic Wand',\r\n    staff: 'Mythic Staff',\r\n    elementalSword: 'Elemental Sword',\r\n    elementalGreatsword: 'Elemental Greatsword',\r\n    sword: 'Mythic Sword',\r\n    greatsword: 'Mythic Greatsword',\r\n    pistol: 'Mythic Pistol',\r\n    crossbow: 'Mythic Crossbow',\r\n  },\r\n  set: {\r\n    fists: 'Unarmed',\r\n    axe: 'Set Axe',\r\n    greataxe: 'Set Greataxe',\r\n    flail: 'Set Flail',\r\n    daggers: 'Set Daggers',\r\n    katana: 'Set Katana',\r\n    rapier: 'Set Rapier',\r\n    wand: 'Set Wand',\r\n    staff: 'Set Staff',\r\n    elementalSword: 'Elemental Sword',\r\n    elementalGreatsword: 'Elemental Greatsword',\r\n    sword: 'Set Sword',\r\n    greatsword: 'Set Greatsword',\r\n    pistol: 'Set Pistol',\r\n    crossbow: 'Set Crossbow',\r\n  },\r\n})\r\n\r\nexport type ArmorStatCountT = Record<ArmorTypeT, number[]>\r\nexport const WeaponRarityStatCounts: Record<ItemRarityT, number> = {\r\n  common: 1,\r\n  uncommon: 2,\r\n  rare: 3,\r\n  legendary: 4,\r\n  unique: 5,\r\n  mythic: 6,\r\n  set: 6,\r\n}\r\n\r\nexport const makeDamageRoll = (\r\n  rollString: string,\r\n  modString: string,\r\n  keys: CharacterSkillCheckKeyT[] = [],\r\n  modCoef: number = -1,\r\n  mod: number = 0,\r\n): CharacterRollT => {\r\n  return makeCharacterRoll(\r\n    keys,\r\n    rollString,\r\n    quickRoll(modString) * modCoef + mod,\r\n  )\r\n}\r\n\r\nexport type WeaponDamagesT = Record<WeaponTypeT, DamageTypeRollsT>\r\nexport const WeaponDamages = (): Record<ItemRarityT, WeaponDamagesT> => {\r\n  const element: DamageElementTypeT = getRandom<DamageElementTypeT>([\r\n    'fire',\r\n    'blood',\r\n    'dark',\r\n    'light',\r\n  ])\r\n  return {\r\n    common: {\r\n      fists: {\r\n        slashing: makeDamageRoll('1d6', '3d4', ['strength']),\r\n      },\r\n      axe: {\r\n        slashing: makeDamageRoll('1d6', '3d4', ['strength']),\r\n      },\r\n      greataxe: {\r\n        slashing: makeDamageRoll('2d6', '1d6', ['strength']),\r\n      },\r\n      flail: {\r\n        piercing: makeDamageRoll('1d6', '3d4', ['strength']),\r\n      },\r\n      daggers: {\r\n        slashing: makeDamageRoll('2d6', '1d6', ['dexterity']),\r\n      },\r\n      katana: {\r\n        slashing: makeDamageRoll('1d6', '3d4', ['dexterity']),\r\n      },\r\n      rapier: {\r\n        piercing: makeDamageRoll('1d6', '3d4', ['dexterity']),\r\n      },\r\n      wand: {\r\n        [element]: makeDamageRoll('1d6', '3d4', ['intelligence']),\r\n      },\r\n      staff: {\r\n        [element]: makeDamageRoll('2d6', '1d6', ['intelligence']),\r\n      },\r\n      elementalSword: {\r\n        slashing: makeDamageRoll('1d6', '3d6', [\r\n          getRandom(['strength', 'dexterity']),\r\n        ]),\r\n        [element]: makeDamageRoll('1d4', '3d4', ['intelligence']),\r\n      },\r\n      elementalGreatsword: {\r\n        slashing: makeDamageRoll('1d6', '3d6', [\r\n          getRandom(['strength', 'dexterity']),\r\n        ]),\r\n        [element]: makeDamageRoll('1d4', '3d4', ['intelligence']),\r\n      },\r\n      sword: {\r\n        slashing: makeDamageRoll('1d6', '3d6', ['strength']),\r\n      },\r\n      greatsword: {\r\n        slashing: makeDamageRoll('1d6', '3d6', ['strength', 'dexterity']),\r\n      },\r\n      pistol: {\r\n        piercing: makeDamageRoll('1d4', '3d6', ['dexterity']),\r\n        fire: makeDamageRoll('1d4', '3d6', ['intelligence']),\r\n      },\r\n      crossbow: {\r\n        piercing: makeDamageRoll('1d4', '2d6', ['dexterity']),\r\n        fire: makeDamageRoll('1d4', '2d6', ['intelligence']),\r\n      },\r\n    },\r\n    uncommon: {\r\n      fists: {\r\n        slashing: makeDamageRoll('1d6', '3d4', ['strength']),\r\n      },\r\n      axe: {\r\n        slashing: makeDamageRoll('1d6', '3d4', ['strength']),\r\n      },\r\n      greataxe: {\r\n        slashing: makeDamageRoll('2d6', '1d6', ['strength']),\r\n      },\r\n      flail: {\r\n        piercing: makeDamageRoll('1d6', '3d4', ['strength']),\r\n      },\r\n      daggers: {\r\n        slashing: makeDamageRoll('2d6', '1d6', ['dexterity']),\r\n      },\r\n      katana: {\r\n        slashing: makeDamageRoll('1d6', '3d4', ['dexterity']),\r\n      },\r\n      rapier: {\r\n        piercing: makeDamageRoll('1d6', '3d4', ['dexterity']),\r\n      },\r\n      wand: {\r\n        [element]: makeDamageRoll('1d6', '3d4', ['intelligence']),\r\n      },\r\n      staff: {\r\n        [element]: makeDamageRoll('2d6', '1d6', ['intelligence']),\r\n      },\r\n      elementalSword: {\r\n        slashing: makeDamageRoll('1d6', '3d6', [\r\n          getRandom(['strength', 'dexterity']),\r\n        ]),\r\n        [element]: makeDamageRoll('1d4', '3d4', ['intelligence']),\r\n      },\r\n      elementalGreatsword: {\r\n        slashing: makeDamageRoll('1d6', '3d6', [\r\n          getRandom(['strength', 'dexterity']),\r\n        ]),\r\n        [element]: makeDamageRoll('1d4', '3d4', ['intelligence']),\r\n      },\r\n      sword: {\r\n        slashing: makeDamageRoll('1d6', '3d6', ['strength']),\r\n      },\r\n      greatsword: {\r\n        slashing: makeDamageRoll('1d6', '3d6', ['strength', 'dexterity']),\r\n      },\r\n      pistol: {\r\n        piercing: makeDamageRoll('1d4', '3d6', ['dexterity']),\r\n        fire: makeDamageRoll('1d4', '3d6', ['intelligence']),\r\n      },\r\n      crossbow: {\r\n        piercing: makeDamageRoll('1d4', '2d6', ['dexterity']),\r\n        fire: makeDamageRoll('1d4', '2d6', ['intelligence']),\r\n      },\r\n    },\r\n    rare: {\r\n      fists: {\r\n        slashing: makeDamageRoll('1d6', '3d4', ['strength']),\r\n      },\r\n      axe: {\r\n        slashing: makeDamageRoll('1d6', '3d4', ['strength']),\r\n      },\r\n      greataxe: {\r\n        slashing: makeDamageRoll('2d6', '1d6', ['strength']),\r\n      },\r\n      flail: {\r\n        piercing: makeDamageRoll('1d6', '3d4', ['strength']),\r\n      },\r\n      daggers: {\r\n        slashing: makeDamageRoll('2d6', '1d6', ['dexterity']),\r\n      },\r\n      katana: {\r\n        slashing: makeDamageRoll('1d6', '3d4', ['dexterity']),\r\n      },\r\n      rapier: {\r\n        piercing: makeDamageRoll('1d6', '3d4', ['dexterity']),\r\n      },\r\n      wand: {\r\n        [element]: makeDamageRoll('1d6', '3d4', ['intelligence']),\r\n      },\r\n      staff: {\r\n        [element]: makeDamageRoll('2d6', '1d6', ['intelligence']),\r\n      },\r\n      elementalSword: {\r\n        slashing: makeDamageRoll('1d6', '3d6', [\r\n          getRandom(['strength', 'dexterity']),\r\n        ]),\r\n        [element]: makeDamageRoll('1d4', '3d4', ['intelligence']),\r\n      },\r\n      elementalGreatsword: {\r\n        slashing: makeDamageRoll('1d6', '3d6', [\r\n          getRandom(['strength', 'dexterity']),\r\n        ]),\r\n        [element]: makeDamageRoll('1d4', '3d4', ['intelligence']),\r\n      },\r\n      sword: {\r\n        slashing: makeDamageRoll('1d6', '3d6', ['strength']),\r\n      },\r\n      greatsword: {\r\n        slashing: makeDamageRoll('1d6', '3d6', ['strength', 'dexterity']),\r\n      },\r\n      pistol: {\r\n        piercing: makeDamageRoll('1d4', '3d6', ['dexterity']),\r\n        fire: makeDamageRoll('1d4', '3d6', ['intelligence']),\r\n      },\r\n      crossbow: {\r\n        piercing: makeDamageRoll('1d4', '2d6', ['dexterity']),\r\n        fire: makeDamageRoll('1d4', '2d6', ['intelligence']),\r\n      },\r\n    },\r\n    legendary: {\r\n      fists: {\r\n        slashing: makeDamageRoll('1d6', '3d4', ['strength']),\r\n      },\r\n      axe: {\r\n        slashing: makeDamageRoll('1d6', '3d4', ['strength']),\r\n      },\r\n      greataxe: {\r\n        slashing: makeDamageRoll('2d6', '1d6', ['strength']),\r\n      },\r\n      flail: {\r\n        piercing: makeDamageRoll('1d6', '3d4', ['strength']),\r\n      },\r\n      daggers: {\r\n        slashing: makeDamageRoll('2d6', '1d6', ['dexterity']),\r\n      },\r\n      katana: {\r\n        slashing: makeDamageRoll('1d6', '3d4', ['dexterity']),\r\n      },\r\n      rapier: {\r\n        piercing: makeDamageRoll('1d6', '3d4', ['dexterity']),\r\n      },\r\n      wand: {\r\n        [element]: makeDamageRoll('1d6', '3d4', ['intelligence']),\r\n      },\r\n      staff: {\r\n        [element]: makeDamageRoll('2d6', '1d6', ['intelligence']),\r\n      },\r\n      elementalSword: {\r\n        slashing: makeDamageRoll('1d6', '3d6', [\r\n          getRandom(['strength', 'dexterity']),\r\n        ]),\r\n        [element]: makeDamageRoll('1d4', '3d4', ['intelligence']),\r\n      },\r\n      elementalGreatsword: {\r\n        slashing: makeDamageRoll('1d6', '3d6', [\r\n          getRandom(['strength', 'dexterity']),\r\n        ]),\r\n        [element]: makeDamageRoll('1d4', '3d4', ['intelligence']),\r\n      },\r\n      sword: {\r\n        slashing: makeDamageRoll('1d6', '3d6', ['strength']),\r\n      },\r\n      greatsword: {\r\n        slashing: makeDamageRoll('1d6', '3d6', ['strength', 'dexterity']),\r\n      },\r\n      pistol: {\r\n        piercing: makeDamageRoll('1d4', '3d6', ['dexterity']),\r\n        fire: makeDamageRoll('1d4', '3d6', ['intelligence']),\r\n      },\r\n      crossbow: {\r\n        piercing: makeDamageRoll('1d4', '2d6', ['dexterity']),\r\n        fire: makeDamageRoll('1d4', '2d6', ['intelligence']),\r\n      },\r\n    },\r\n    unique: {\r\n      fists: {\r\n        slashing: makeDamageRoll('1d6', '3d4', ['strength']),\r\n      },\r\n      axe: {\r\n        slashing: makeDamageRoll('1d6', '3d4', ['strength']),\r\n      },\r\n      greataxe: {\r\n        slashing: makeDamageRoll('2d6', '1d6', ['strength']),\r\n      },\r\n      flail: {\r\n        piercing: makeDamageRoll('1d6', '3d4', ['strength']),\r\n      },\r\n      daggers: {\r\n        slashing: makeDamageRoll('2d6', '1d6', ['dexterity']),\r\n      },\r\n      katana: {\r\n        slashing: makeDamageRoll('1d6', '3d4', ['dexterity']),\r\n      },\r\n      rapier: {\r\n        piercing: makeDamageRoll('1d6', '3d4', ['dexterity']),\r\n      },\r\n      wand: {\r\n        [element]: makeDamageRoll('1d6', '3d4', ['intelligence']),\r\n      },\r\n      staff: {\r\n        [element]: makeDamageRoll('2d6', '1d6', ['intelligence']),\r\n      },\r\n      elementalSword: {\r\n        slashing: makeDamageRoll('1d6', '3d6', [\r\n          getRandom(['strength', 'dexterity']),\r\n        ]),\r\n        [element]: makeDamageRoll('1d4', '3d4', ['intelligence']),\r\n      },\r\n      elementalGreatsword: {\r\n        slashing: makeDamageRoll('1d6', '3d6', [\r\n          getRandom(['strength', 'dexterity']),\r\n        ]),\r\n        [element]: makeDamageRoll('1d4', '3d4', ['intelligence']),\r\n      },\r\n      sword: {\r\n        slashing: makeDamageRoll('1d6', '3d6', ['strength']),\r\n      },\r\n      greatsword: {\r\n        slashing: makeDamageRoll('1d6', '3d6', ['strength', 'dexterity']),\r\n      },\r\n      pistol: {\r\n        piercing: makeDamageRoll('1d4', '3d6', ['dexterity']),\r\n        fire: makeDamageRoll('1d4', '3d6', ['intelligence']),\r\n      },\r\n      crossbow: {\r\n        piercing: makeDamageRoll('1d4', '2d6', ['dexterity']),\r\n        fire: makeDamageRoll('1d4', '2d6', ['intelligence']),\r\n      },\r\n    },\r\n    mythic: {\r\n      fists: {\r\n        slashing: makeDamageRoll('1d6', '3d4', ['strength']),\r\n      },\r\n      axe: {\r\n        slashing: makeDamageRoll('1d6', '3d4', ['strength']),\r\n      },\r\n      greataxe: {\r\n        slashing: makeDamageRoll('2d6', '1d6', ['strength']),\r\n      },\r\n      flail: {\r\n        piercing: makeDamageRoll('1d6', '3d4', ['strength']),\r\n      },\r\n      daggers: {\r\n        slashing: makeDamageRoll('2d6', '1d6', ['dexterity']),\r\n      },\r\n      katana: {\r\n        slashing: makeDamageRoll('1d6', '3d4', ['dexterity']),\r\n      },\r\n      rapier: {\r\n        piercing: makeDamageRoll('1d6', '3d4', ['dexterity']),\r\n      },\r\n      wand: {\r\n        [element]: makeDamageRoll('1d6', '3d4', ['intelligence']),\r\n      },\r\n      staff: {\r\n        [element]: makeDamageRoll('2d6', '1d6', ['intelligence']),\r\n      },\r\n      elementalSword: {\r\n        slashing: makeDamageRoll('1d6', '3d6', [\r\n          getRandom(['strength', 'dexterity']),\r\n        ]),\r\n        [element]: makeDamageRoll('1d4', '3d4', ['intelligence']),\r\n      },\r\n      elementalGreatsword: {\r\n        slashing: makeDamageRoll('1d6', '3d6', [\r\n          getRandom(['strength', 'dexterity']),\r\n        ]),\r\n        [element]: makeDamageRoll('1d4', '3d4', ['intelligence']),\r\n      },\r\n      sword: {\r\n        slashing: makeDamageRoll('1d6', '3d6', ['strength']),\r\n      },\r\n      greatsword: {\r\n        slashing: makeDamageRoll('1d6', '3d6', ['strength', 'dexterity']),\r\n      },\r\n      pistol: {\r\n        piercing: makeDamageRoll('1d4', '3d6', ['dexterity']),\r\n        fire: makeDamageRoll('1d4', '3d6', ['intelligence']),\r\n      },\r\n      crossbow: {\r\n        piercing: makeDamageRoll('1d4', '2d6', ['dexterity']),\r\n        fire: makeDamageRoll('1d4', '2d6', ['intelligence']),\r\n      },\r\n    },\r\n    set: {\r\n      fists: {},\r\n      axe: {},\r\n      greataxe: {},\r\n      flail: {},\r\n      daggers: {},\r\n      katana: {},\r\n      rapier: {},\r\n      wand: {},\r\n      staff: {},\r\n      elementalSword: {},\r\n      elementalGreatsword: {},\r\n      sword: {},\r\n      greatsword: {},\r\n      pistol: {},\r\n      crossbow: {},\r\n    },\r\n  }\r\n}\r\n\r\nexport const getWeaponStatRolls = (\r\n  type: WeaponTypeT,\r\n  rarity: ItemRarityT,\r\n  requirementScore: number,\r\n): ItemModifierValuesT => {\r\n  const keys = shuffleArray(WeaponRarityStatKeys[rarity][type])\r\n  const counts = WeaponRarityStatCounts[rarity]\r\n  return getItemStatRolls(keys, counts, requirementScore)\r\n}\r\n","import { BASE_EQUIPPABLE, makeRequirementCheck, makeTrait } from '../../util'\r\nimport { WeaponT, WeaponTypeT } from '../../../types/Weapon'\r\nimport { DamageTypeRollsT } from '../../../types/Damage'\r\nimport { ItemRarityT } from '../../../types/Item'\r\nimport { ItemModifierValuesT } from '../makeItem'\r\nimport { Rarity3d6Map } from '../util'\r\nimport { getRandom } from '../../../util/getRandom'\r\nimport {\r\n  WeaponRequirementKeys,\r\n  WeaponCosts,\r\n  getWeaponStatRolls,\r\n  WeaponNameKeys,\r\n  WeaponDamages,\r\n} from './stats'\r\nimport {\r\n  CharacterCheckT,\r\n  makeCharacterCheck,\r\n  quickRoll,\r\n} from '../../../types/Roll2'\r\n\r\nexport const buildWeapon = (\r\n  type: WeaponTypeT,\r\n  rarity?: ItemRarityT,\r\n): WeaponT => {\r\n  rarity = rarity || Rarity3d6Map[quickRoll('3d6')]\r\n  if (rarity === 'set') rarity = 'mythic'\r\n  const requirementCheck = makeRequirementCheck(\r\n    [getRandom(WeaponRequirementKeys[type])],\r\n    10, //getRollValue('3d6'),\r\n  )\r\n  return createWeapon(\r\n    type,\r\n    WeaponNameKeys()[rarity][type],\r\n    WeaponCosts[type],\r\n    requirementCheck,\r\n    0,\r\n    getWeaponStatRolls(type, rarity, requirementCheck.value),\r\n    WeaponDamages()[rarity][type],\r\n    rarity,\r\n  )\r\n}\r\n\r\nexport const createWeapon = (\r\n  weaponType: WeaponTypeT,\r\n  name: string,\r\n  cost: number,\r\n  requirementCheck: CharacterCheckT,\r\n  accuracyModifier: number,\r\n  statRolls: ItemModifierValuesT,\r\n  damageRolls: DamageTypeRollsT,\r\n  rarity: ItemRarityT,\r\n  rest: Partial<WeaponT> = {},\r\n): WeaponT => {\r\n  const base = BASE_EQUIPPABLE('weapon')\r\n  return {\r\n    ...base,\r\n    type: 'weapon',\r\n    weaponType,\r\n    name,\r\n    cost,\r\n    rarity,\r\n    requirementCheck,\r\n    accuracyCheck: makeCharacterCheck(\r\n      ['accuracy'],\r\n      undefined,\r\n      0,\r\n      accuracyModifier,\r\n    ),\r\n    damageRolls,\r\n    traits: [\r\n      {\r\n        ...makeTrait(),\r\n        id: `${base.id}--bonus`,\r\n        name: 'Weapon Trait',\r\n        abilitiesModifiers: {\r\n          strength: statRolls.strength || 0,\r\n          dexterity: statRolls.dexterity || 0,\r\n          intelligence: statRolls.intelligence || 0,\r\n          vigor: statRolls.vigor || 0,\r\n        },\r\n        statsModifiers: {\r\n          health: statRolls.health || 0,\r\n          focus: statRolls.focus || 0,\r\n          will: statRolls.will || 0,\r\n          perception: statRolls.perception || 0,\r\n          agility: statRolls.agility || 0,\r\n          accuracy: statRolls.accuracy || 0,\r\n          evade: statRolls.evade || 0,\r\n        },\r\n      },\r\n    ],\r\n    events: {},\r\n    slotCount: 0,\r\n    slots: [],\r\n    ...rest,\r\n  }\r\n}\r\n","import { EquippableT, ItemTypeT, ItemRarityT } from '../../types/Item'\r\nimport { getRandom } from '../../util/getRandom'\r\nimport { WeaponTypeT, WeaponT } from '../../types/Weapon'\r\nimport { getKeys } from '../../util/getKeys'\r\nimport { ArmorT, ArmorTypeT } from '../../types/Armor'\r\nimport { BASIC_SHIELD } from '../basicShield'\r\nimport { FISTS } from '../fists'\r\nimport { BASIC_TOME } from '../basicTome'\r\nimport { CharacterSkillCheckKeyT } from '../../types/Character'\r\n\r\nimport { buildArmor } from './armor/createArmor'\r\nimport { buildWeapon } from './weapons/createWeapon'\r\n\r\ntype _ItemModifierValuesT = Record<CharacterSkillCheckKeyT, number>\r\nexport type ItemModifierValuesT = Partial<_ItemModifierValuesT>\r\n\r\nexport const getTotal = (rollResults: ItemModifierValuesT): number => {\r\n  return getKeys(rollResults as _ItemModifierValuesT)\r\n    .map((key) => rollResults[key] as number)\r\n    .reduce((sum, current) => sum + current, 0)\r\n}\r\n\r\nconst ITEM_TYPES: ItemTypeT[] = [\r\n  'weapon',\r\n  'weapon',\r\n  'armor',\r\n  'armor',\r\n  'armor',\r\n  'armor',\r\n]\r\nexport type ItemMakerMapT = Record<ItemTypeT, () => EquippableT>\r\nexport const makeItem = (core: ItemMakerMapT): EquippableT => {\r\n  return core[getRandom<ItemTypeT>(ITEM_TYPES)]()\r\n}\r\n\r\nexport type WeaponMakerMapT = Partial<Record<WeaponTypeT, () => WeaponT>>\r\nexport const makeWeapon = (core: WeaponMakerMapT): WeaponT => {\r\n  const keys = getKeys(core)\r\n  const randomKey = getRandom<WeaponTypeT>(keys)\r\n  const maker = core[randomKey] || (() => FISTS)\r\n  return maker()\r\n}\r\n\r\nexport type ArmorMakerMapT = Partial<Record<ArmorTypeT, () => ArmorT>>\r\nexport const makeArmor = (core: ArmorMakerMapT): ArmorT => {\r\n  const keys = getKeys(core)\r\n  const randomKey = getRandom<ArmorTypeT>(keys)\r\n  const maker = core[randomKey] || (() => buildArmor('ring'))\r\n  return maker()\r\n}\r\n\r\nconst rarityArray: ItemRarityT[] = [\r\n  'common',\r\n  'uncommon',\r\n  'rare',\r\n  'legendary',\r\n  'unique',\r\n  'mythic',\r\n]\r\nexport const getRarity = (index: number): ItemRarityT => {\r\n  if (index < 0) return 'common'\r\n  if (index >= rarityArray.length) return 'mythic'\r\n  return rarityArray[index]\r\n}\r\n\r\nconst itemCore: ItemMakerMapT = {\r\n  weapon: () =>\r\n    makeWeapon({\r\n      // fists: () => FISTS,\r\n      // S\r\n      axe: () => buildWeapon('axe'),\r\n      greataxe: () => buildWeapon('greataxe'),\r\n      flail: () => buildWeapon('flail'),\r\n      // D\r\n      daggers: () => buildWeapon('daggers'),\r\n      katana: () => buildWeapon('katana'),\r\n      rapier: () => buildWeapon('rapier'),\r\n      // I\r\n      wand: () => buildWeapon('wand'),\r\n      staff: () => buildWeapon('staff'),\r\n      // S+I\r\n      elementalSword: () => buildWeapon('elementalSword'),\r\n      elementalGreatsword: () => buildWeapon('elementalGreatsword'),\r\n      // S+D\r\n      sword: () => buildWeapon('sword'),\r\n      greatsword: () => buildWeapon('greatsword'),\r\n      // D+I\r\n      pistol: () => buildWeapon('pistol'),\r\n      crossbow: () => buildWeapon('crossbow'),\r\n    }),\r\n  armor: () =>\r\n    makeArmor({\r\n      helmet: () => buildArmor('helmet'),\r\n      cowl: () => buildArmor('cowl'),\r\n      chestplate: () => buildArmor('chestplate'),\r\n      robe: () => buildArmor('robe'),\r\n      ring: () => buildArmor('ring'),\r\n      boots: () => buildArmor('boots'),\r\n      gloves: () => buildArmor('gloves'),\r\n    }),\r\n  shield: () => BASIC_SHIELD,\r\n  tome: () => BASIC_TOME,\r\n}\r\n\r\nexport default (): EquippableT => makeItem(itemCore)\r\n","import { SkillT } from '../types/Skill'\r\nimport { v4 } from 'uuid'\r\nimport {\r\n  makeCharacterCheck,\r\n  makeCharacterRoll,\r\n  makeStandardCharacterCheck,\r\n  makeRoll,\r\n} from '../types/Roll2'\r\nimport { makeRequirementCheck, makeTrait } from './util'\r\nimport Healing from '../assets/img/healing1.png'\r\nimport Fireball from '../assets/img/fireball.png'\r\nimport Thunderbolt from '../assets/img/thunderbolt.png'\r\nimport DarkBlast from '../assets/img/dark-blast.png'\r\nimport CripplingBlow from '../assets/img/crippling-blow.png'\r\nimport Wrath from '../assets/img/wrath.png'\r\nimport Charge from '../assets/img/charge.png'\r\nimport SkillShot from '../assets/img/headshot.png'\r\nimport ShadowStrike from '../assets/img/shadow-strike.png'\r\nimport Vanish from '../assets/img/vanish.png'\r\nimport Inspect from '../assets/img/inspect.png'\r\nimport WeaponAttack from '../assets/img/weapon-attack.png'\r\n\r\nexport const makeSkill = (name: string = 'Weapon Attack'): SkillT => {\r\n  return {\r\n    id: v4(),\r\n    name,\r\n    imgSrc: '',\r\n    requirementCheck: makeRequirementCheck(['intelligence'], 1),\r\n    damageRolls: {},\r\n    targetTraits: [],\r\n    sourceTraits: [],\r\n    events: {},\r\n    combineWeaponDamage: true,\r\n    checkDodgeForTraits: true,\r\n    focusCost: 0,\r\n    target: true,\r\n  }\r\n}\r\n\r\nexport const BASIC_ATTACK: SkillT = {\r\n  ...makeSkill(),\r\n  imgSrc: WeaponAttack,\r\n}\r\nexport const INSPECT: SkillT = {\r\n  ...makeSkill('Inspect'),\r\n  imgSrc: Inspect,\r\n  combineWeaponDamage: false,\r\n  damageRolls: {},\r\n  inspected: true,\r\n}\r\n\r\nexport const FIREBALL: SkillT = {\r\n  ...makeSkill('Fireball'),\r\n  imgSrc: Fireball,\r\n  check: makeCharacterCheck(['intelligence']),\r\n  combineWeaponDamage: false,\r\n  damageRolls: {\r\n    fire: makeCharacterRoll([], '4d10', -7),\r\n  },\r\n  focusCost: 10,\r\n}\r\nexport const CRIPPLING_BLOW: SkillT = {\r\n  ...makeSkill('Crippling Blow'),\r\n  imgSrc: CripplingBlow,\r\n  requirementCheck: makeRequirementCheck(['strength'], 10),\r\n  combineWeaponDamage: true,\r\n  checkDodgeForTraits: true,\r\n  damageRolls: {},\r\n  targetTraits: [\r\n    {\r\n      ...makeTrait(),\r\n      duration: 2,\r\n      abilitiesModifiers: {\r\n        strength: 0,\r\n        dexterity: 0,\r\n        intelligence: 0,\r\n        vigor: -5,\r\n      },\r\n    },\r\n    {\r\n      ...makeTrait(),\r\n      duration: -1,\r\n      focusOffset: -3,\r\n      abilitiesModifiers: {\r\n        strength: 0,\r\n        dexterity: 0,\r\n        intelligence: 0,\r\n        vigor: 0,\r\n      },\r\n    },\r\n  ],\r\n  focusCost: 1,\r\n}\r\nexport const THUNDERBOLT: SkillT = {\r\n  ...makeSkill('Thunderbolt'),\r\n  imgSrc: Thunderbolt,\r\n  check: makeStandardCharacterCheck(['intelligence'], -3),\r\n  combineWeaponDamage: false,\r\n  damageRolls: {\r\n    light: makeCharacterRoll(['intelligence']),\r\n  },\r\n  focusCost: 3,\r\n}\r\nexport const DARK_BLAST: SkillT = {\r\n  ...makeSkill('Dark Blast'),\r\n  imgSrc: DarkBlast,\r\n  check: makeCharacterCheck(['intelligence']),\r\n  combineWeaponDamage: false,\r\n  damageRolls: {\r\n    dark: makeCharacterRoll(['intelligence'], '2d6', -8),\r\n  },\r\n  focusCost: 5,\r\n}\r\nexport const HEALING: SkillT = {\r\n  ...makeSkill('Healing'),\r\n  target: false,\r\n  imgSrc: Healing,\r\n  check: makeCharacterCheck(['intelligence']),\r\n  combineWeaponDamage: false,\r\n  damageRolls: {},\r\n  focusCost: 5,\r\n  sourceTraits: [\r\n    {\r\n      ...makeTrait(),\r\n      healthOffset: 15,\r\n    },\r\n  ],\r\n}\r\nexport const WRATH: SkillT = {\r\n  ...makeSkill('Wrath'),\r\n  imgSrc: Wrath,\r\n  check: makeCharacterCheck(['strength']),\r\n  combineWeaponDamage: false,\r\n  damageRolls: { piercing: makeCharacterRoll([], '1d6') },\r\n  focusCost: 5,\r\n  sourceTraits: [\r\n    {\r\n      ...makeTrait(),\r\n      duration: 4,\r\n      abilitiesModifiers: {\r\n        strength: 2,\r\n        dexterity: 0,\r\n        intelligence: 0,\r\n        vigor: 0,\r\n      },\r\n    },\r\n  ],\r\n  targetTraits: [\r\n    {\r\n      ...makeTrait(),\r\n      duration: 4,\r\n      abilitiesModifiers: {\r\n        strength: -2,\r\n        dexterity: 0,\r\n        intelligence: 0,\r\n        vigor: 0,\r\n      },\r\n    },\r\n  ],\r\n}\r\nexport const CHARGE: SkillT = {\r\n  ...makeSkill('Charge'),\r\n  imgSrc: Charge,\r\n  focusCost: 5,\r\n  check: makeCharacterCheck(['strength']),\r\n  combineWeaponDamage: false,\r\n  damageRolls: {\r\n    slashing: makeCharacterRoll(['strength'], '3d6', -12),\r\n    piercing: makeCharacterRoll(['strength'], '3d6', -12),\r\n  },\r\n  sourceTraits: [\r\n    {\r\n      ...makeTrait(),\r\n      duration: 2,\r\n      statsModifiers: {\r\n        health: 0,\r\n        focus: 0,\r\n        will: 0,\r\n        perception: 0,\r\n        accuracy: 0,\r\n        evade: 0,\r\n        agility: 3,\r\n      },\r\n    },\r\n  ],\r\n  targetTraits: [\r\n    {\r\n      ...makeTrait(),\r\n      duration: 2,\r\n      abilitiesModifiers: {\r\n        strength: 0,\r\n        dexterity: 0,\r\n        intelligence: 0,\r\n        vigor: -3,\r\n      },\r\n    },\r\n  ],\r\n}\r\n\r\nexport const SKILL_SHOT: SkillT = {\r\n  ...makeSkill('Skill Shot'),\r\n  imgSrc: SkillShot,\r\n  focusCost: 12,\r\n  check: makeStandardCharacterCheck(['dexterity'], -4),\r\n  combineWeaponDamage: false,\r\n  damageRolls: {\r\n    piercing: makeCharacterRoll(['dexterity'], '1d20'),\r\n    fire: makeCharacterRoll([], '8d2', -8),\r\n  },\r\n  targetTraits: [\r\n    {\r\n      ...makeTrait(),\r\n      duration: 2,\r\n      abilitiesModifiers: {\r\n        strength: 0,\r\n        dexterity: 0,\r\n        intelligence: -2,\r\n        vigor: 0,\r\n      },\r\n    },\r\n  ],\r\n}\r\n\r\nexport const VANISH: SkillT = {\r\n  ...makeSkill('Vanish'),\r\n  imgSrc: Vanish,\r\n  focusCost: 8,\r\n  check: makeStandardCharacterCheck(['dexterity']),\r\n  combineWeaponDamage: false,\r\n  damageRolls: {},\r\n  target: false,\r\n  sourceTraits: [\r\n    {\r\n      ...makeTrait(),\r\n      duration: 2,\r\n      statsModifiers: {\r\n        health: 0,\r\n        focus: 0,\r\n        will: 0,\r\n        perception: 2,\r\n        agility: -2,\r\n        accuracy: 0,\r\n        evade: 20,\r\n      },\r\n    },\r\n  ],\r\n}\r\n\r\nexport const SHADOW_STRIKE: SkillT = {\r\n  ...makeSkill('Shadow Strike'),\r\n  imgSrc: ShadowStrike,\r\n  focusCost: 7,\r\n  check: makeStandardCharacterCheck(['evade'], -3),\r\n  combineWeaponDamage: false,\r\n  damageRolls: {\r\n    piercing: makeCharacterRoll(['evade'], '1d6', -6),\r\n  },\r\n}\r\n","import { CharacterT } from '../types/Character'\r\nimport { buildArmor } from './builders/armor/createArmor'\r\nimport { getRandom } from '../util/getRandom'\r\nimport { buildWeapon } from './builders/weapons/createWeapon'\r\nimport { v4 } from 'uuid'\r\nimport { makeSkill, BASIC_ATTACK, INSPECT } from './makeSkill'\r\nimport { makeCharacterRoll } from '../types/Roll2'\r\n/*\r\nimport { Config, adjectives, names } from 'unique-names-generator'\r\n\r\nconst config: Config = {\r\n  dictionaries: [adjectives, names],\r\n  length: 2,\r\n  separator: ' ',\r\n}\r\n*/\r\n\r\nexport const makeCharacter = (name?: string): CharacterT => ({\r\n  name: name || '-- init --', //uniqueNamesGenerator(config),\r\n  id: v4(),\r\n  power: 600,\r\n  resources: {\r\n    characterPoints: 250,\r\n    weaponHands: 1,\r\n    heads: 0,\r\n    bodies: 0,\r\n    hands: 0,\r\n    fingers: 10,\r\n    feet: 0,\r\n  },\r\n  abilities: {\r\n    strength: 10,\r\n    dexterity: 10,\r\n    intelligence: 10,\r\n    vigor: 10,\r\n  },\r\n  damageResistances: {\r\n    slashing: makeCharacterRoll([]),\r\n    piercing: makeCharacterRoll([]),\r\n    fire: makeCharacterRoll([]),\r\n    blood: makeCharacterRoll([]),\r\n    light: makeCharacterRoll([]),\r\n    dark: makeCharacterRoll([]),\r\n  },\r\n\r\n  traits: [],\r\n  skills: [BASIC_ATTACK, INSPECT],\r\n\r\n  equippedItems: [],\r\n  armor: [\r\n    buildArmor(getRandom(['cowl', 'helmet'])),\r\n    buildArmor(getRandom(['chestplate', 'robe'])),\r\n    buildArmor('gloves'),\r\n    buildArmor('boots'),\r\n  ],\r\n\r\n  weapon: buildWeapon(\r\n    getRandom([\r\n      'axe',\r\n      'greataxe',\r\n      'wand',\r\n      'staff',\r\n      'daggers',\r\n      'katana',\r\n      'sword',\r\n      'greatsword',\r\n      'flail',\r\n      'elementalGreatsword',\r\n      'elementalSword',\r\n    ]),\r\n  ),\r\n\r\n  healthOffset: 0,\r\n  focusOffset: 0,\r\n  dead: false,\r\n  inspected: false,\r\n})\r\n","import { WeaponT, ZERO_WEAPON_TRAIT } from '../../../../types/Weapon'\r\nimport { buildWeapon } from '../createWeapon'\r\nimport { makeTrait } from '../../../util'\r\nimport { makeCharacterRoll } from '../../../../types/Roll2'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const SWORD_OF_BLOOD_AND_FIRE: WeaponT = {\r\n  ...buildWeapon('elementalSword', 'mythic'),\r\n  name: 'Sword of Blood and Fire',\r\n  damageRolls: {\r\n    // getRollValue('2d6')\r\n    slashing: makeCharacterRoll(['strength'], '1d10', -3),\r\n    fire: makeCharacterRoll(['intelligence'], '1d4', -10),\r\n    blood: makeCharacterRoll(['intelligence'], '1d4', -10),\r\n  },\r\n  events: {\r\n    onHit: [\r\n      {\r\n        ...makeTrait(),\r\n        name: 'heal on hit',\r\n        healthOffset: 5,\r\n      },\r\n      {\r\n        ...makeTrait(),\r\n        name: 'restore fp on hit',\r\n        focusOffset: 5,\r\n      },\r\n    ],\r\n    onCrit: [\r\n      {\r\n        ...makeTrait(),\r\n        name: 'add strenth on crit',\r\n        abilitiesModifiers: {\r\n          strength: 2,\r\n          dexterity: 0,\r\n          intelligence: 0,\r\n          vigor: 0,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n}\r\n\r\nexport const SWORD_OF_THE_INFINITE: WeaponT = {\r\n  ...buildWeapon('elementalSword', 'mythic'),\r\n  name: 'Sword of the Infinite',\r\n  damageRolls: {\r\n    // getRollValue('2d6')\r\n    fire: makeCharacterRoll([], '3d6', -3),\r\n    blood: makeCharacterRoll([], '', 6),\r\n    light: makeCharacterRoll(['intelligence'], '', -7),\r\n    dark: makeCharacterRoll(['intelligence'], '1d6', -10),\r\n    slashing: makeCharacterRoll([]),\r\n  },\r\n  events: {\r\n    onHit: [\r\n      {\r\n        ...makeTrait(),\r\n        name: 'heal on hit',\r\n        healthOffset: 5,\r\n      },\r\n    ],\r\n    onCrit: [\r\n      {\r\n        ...makeTrait(),\r\n        name: 'add strenth on crit',\r\n        abilitiesModifiers: {\r\n          strength: 2,\r\n          dexterity: 0,\r\n          intelligence: 0,\r\n          vigor: 0,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  slotCount: 1,\r\n  slots: [\r\n    {\r\n      id: v4(),\r\n      name: 'Test Weapon Mod',\r\n      rarity: 'mythic',\r\n      traits: [\r\n        {\r\n          ...ZERO_WEAPON_TRAIT,\r\n          accuracyOffset: 2,\r\n          traits: [\r\n            {\r\n              ...makeTrait(),\r\n              statsModifiers: {\r\n                health: 0,\r\n                focus: 2,\r\n                will: 0,\r\n                perception: 0,\r\n                accuracy: 0,\r\n                agility: 0,\r\n                evade: 2,\r\n              },\r\n            },\r\n          ],\r\n          damageRolls: {\r\n            slashing: makeCharacterRoll([], '1d6'),\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n}\r\n\r\nexport const MYTHIC_WEAPONS: WeaponT[] = []\r\n","import { WeaponModT, ZERO_WEAPON_TRAIT } from '../../../types/Weapon'\r\nimport { v4 } from 'uuid'\r\nimport { makeCharacterRoll } from '../../../types/Roll2'\r\n\r\nexport const SLASHING_MOD: WeaponModT = {\r\n  id: v4(),\r\n  name: 'Slashing Mod',\r\n  rarity: 'mythic',\r\n  traits: [\r\n    {\r\n      ...ZERO_WEAPON_TRAIT,\r\n      damageRolls: {\r\n        slashing: makeCharacterRoll([], '1d6'),\r\n      },\r\n    },\r\n  ],\r\n}\r\n","import { PartyT } from '../../types/Party'\r\nimport { StateActionT, StateT, StateCoreT } from '../types'\r\nimport {\r\n  CharacterT,\r\n  canEquip,\r\n  equipItem,\r\n  unequipItem,\r\n} from '../../types/Character'\r\nimport { Dispatch } from 'redux'\r\nimport { v4 } from 'uuid'\r\nimport { makeReducer } from '../util'\r\nimport { useSelector } from 'react-redux'\r\nimport { useActions } from '../../hooks/useActions'\r\nimport { ItemT, EquippableT } from '../../types/Item'\r\nimport { upsertIn, updateIn } from '../../util/updateIn'\r\nimport { BASIC_SHIELD } from '../../objects/basicShield'\r\nimport { BASIC_TOME } from '../../objects/basicTome'\r\nimport makeItem from '../../objects/builders/makeItem'\r\nimport { makeCharacter } from '../../objects/makeCharacter'\r\nimport {\r\n  SWORD_OF_BLOOD_AND_FIRE,\r\n  SWORD_OF_THE_INFINITE,\r\n} from '../../objects/builders/weapons/mythics'\r\nimport {\r\n  makeSkill,\r\n  FIREBALL,\r\n  CRIPPLING_BLOW,\r\n  THUNDERBOLT,\r\n  DARK_BLAST,\r\n  HEALING,\r\n  WRATH,\r\n  CHARGE,\r\n  SKILL_SHOT,\r\n  VANISH,\r\n  SHADOW_STRIKE,\r\n} from '../../objects/makeSkill'\r\nimport { makeCharacterRoll, makeCharacterCheck } from '../../types/Roll2'\r\nimport { makeTrait, makeRequirementCheck } from '../../objects/util'\r\nimport { buildWeapon } from '../../objects/builders/weapons/createWeapon'\r\nimport { SLASHING_MOD } from '../../objects/builders/mods'\r\n\r\nexport const UPSERT_PARTY = '@actions/parties/upsert-party'\r\nexport const UPSERT_CHARACTER = '@actions/parties/upsert-character'\r\nexport const DELETE_CHARACTER = '@actions/parties/delete-character'\r\nexport const UPSERT_ITEM = '@actions/parties/upsert-item'\r\nexport const DELETE_ITEM = '@actions/parties/delete-item'\r\n\r\nexport const actionCreators = {\r\n  upsertParty: (party: PartyT): StateActionT => ({\r\n    type: UPSERT_PARTY,\r\n    payload: {\r\n      party,\r\n    },\r\n  }),\r\n  upsertCharacter: (partyId: string, character: CharacterT) => {\r\n    return {\r\n      type: UPSERT_CHARACTER,\r\n      payload: {\r\n        partyId,\r\n        character,\r\n      },\r\n    }\r\n  },\r\n  deleteCharacter: (partyId: string, characterId: string) => {\r\n    return {\r\n      type: DELETE_CHARACTER,\r\n      payload: {\r\n        partyId,\r\n        characterId,\r\n      },\r\n    }\r\n  },\r\n  upsertItem: (partyId: string, item: ItemT) => {\r\n    return {\r\n      type: UPSERT_ITEM,\r\n      payload: {\r\n        partyId,\r\n        item,\r\n      },\r\n    }\r\n  },\r\n  deleteItem: (partyId: string, itemId: string) => {\r\n    return {\r\n      type: DELETE_ITEM,\r\n      payload: {\r\n        partyId,\r\n        itemId,\r\n      },\r\n    }\r\n  },\r\n}\r\n\r\nexport const actions = {\r\n  upsertParty: (party: PartyT) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.upsertParty(party))\r\n  },\r\n  upsertCharacter: (partyId: string, character: CharacterT) => (\r\n    dispatch: Dispatch,\r\n  ) => {\r\n    dispatch(actionCreators.upsertCharacter(partyId, character))\r\n  },\r\n  deleteCharacter: (partyId: string, characterId: string) => (\r\n    dispatch: Dispatch,\r\n  ) => {\r\n    dispatch(actionCreators.deleteCharacter(partyId, characterId))\r\n  },\r\n  upsertItem: (partyId: string, item: ItemT) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.upsertItem(partyId, item))\r\n  },\r\n  removeItem: (partyId: string, itemId: string) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.deleteItem(partyId, itemId))\r\n  },\r\n  equipItem: (partyId: string, characterId: string, itemId: string) => (\r\n    dispatch: Dispatch,\r\n    getState: () => StateT,\r\n  ) => {\r\n    const party = getState().parties.find((p) => p.id === partyId)\r\n    if (!party) return\r\n    const character = party.characters.find((c) => c.id === characterId)\r\n    const item = party.items.find((i) => i.id === itemId) as EquippableT\r\n    if (!character || !item) return\r\n    if (!canEquip(character)(item)) return\r\n    dispatch(\r\n      actionCreators.upsertCharacter(partyId, equipItem(character)(item)),\r\n    )\r\n    dispatch(actionCreators.deleteItem(partyId, item.id))\r\n  },\r\n  unequipItem: (partyId: string, characterId: string, itemId: string) => (\r\n    dispatch: Dispatch,\r\n    getState: () => StateT,\r\n  ) => {\r\n    const party = getState().parties.find((p) => p.id === partyId)\r\n    if (!party) return\r\n    const _character = party.characters.find((c) => c.id === characterId)\r\n    if (!_character) return\r\n    const [items, character] = unequipItem(_character)(itemId)\r\n    dispatch(actionCreators.upsertCharacter(partyId, character))\r\n    items.forEach((item) => {\r\n      dispatch(actionCreators.upsertItem(partyId, item))\r\n    })\r\n  },\r\n}\r\n\r\nexport const core: StateCoreT<PartyT[]> = {\r\n  [UPSERT_PARTY]: (state, action) => {\r\n    return upsertIn(state, action.payload.party)\r\n  },\r\n  [UPSERT_CHARACTER]: (state, action) => {\r\n    return updateIn(state, action.payload.partyId, (party) => ({\r\n      ...party,\r\n      characters: upsertIn(party.characters, action.payload.character),\r\n    }))\r\n  },\r\n  [DELETE_CHARACTER]: (state, action) => {\r\n    return updateIn(state, action.payload.partyId, (party) => ({\r\n      ...party,\r\n      characters: party.characters.filter(\r\n        (c) => c.id !== action.payload.characterId,\r\n      ),\r\n    }))\r\n  },\r\n  [UPSERT_ITEM]: (state, action) => {\r\n    return updateIn(state, action.payload.partyId, (party) => ({\r\n      ...party,\r\n      items: upsertIn(party.items, action.payload.item),\r\n    }))\r\n  },\r\n  [DELETE_ITEM]: (state, action) => {\r\n    return updateIn(state, action.payload.partyId, (party) => ({\r\n      ...party,\r\n      items: party.items.filter((i) => i.id !== action.payload.itemId),\r\n    }))\r\n  },\r\n}\r\n\r\nconst max = makeCharacter('Max M')\r\nconst katie = makeCharacter('Katie C')\r\nconst milo = makeCharacter('Milo W')\r\nexport const PC_PARTY_ID = v4()\r\nexport const INITIAL_STATE: PartyT[] = [\r\n  {\r\n    id: PC_PARTY_ID,\r\n    items: [\r\n      ...Array(80)\r\n        .fill(null)\r\n        .map(() => makeItem()),\r\n    ],\r\n    skills: [\r\n      WRATH,\r\n      CHARGE,\r\n      CRIPPLING_BLOW,\r\n      VANISH,\r\n      SHADOW_STRIKE,\r\n      SKILL_SHOT,\r\n      THUNDERBOLT,\r\n      FIREBALL,\r\n      DARK_BLAST,\r\n      HEALING,\r\n    ],\r\n    mods: [SLASHING_MOD],\r\n    characters: [\r\n      {\r\n        ...max,\r\n        weapon: SWORD_OF_THE_INFINITE,\r\n        skills: [\r\n          ...max.skills,\r\n          WRATH,\r\n          CHARGE,\r\n          CRIPPLING_BLOW,\r\n          VANISH,\r\n          SHADOW_STRIKE,\r\n          SKILL_SHOT,\r\n          THUNDERBOLT,\r\n          FIREBALL,\r\n          DARK_BLAST,\r\n          HEALING,\r\n        ],\r\n      },\r\n      {\r\n        ...katie,\r\n        skills: [\r\n          ...katie.skills,\r\n          WRATH,\r\n          CHARGE,\r\n          CRIPPLING_BLOW,\r\n          VANISH,\r\n          SHADOW_STRIKE,\r\n          SKILL_SHOT,\r\n          THUNDERBOLT,\r\n          FIREBALL,\r\n          DARK_BLAST,\r\n          HEALING,\r\n        ],\r\n        weapon: SWORD_OF_BLOOD_AND_FIRE,\r\n      },\r\n      {\r\n        ...milo,\r\n        skills: [\r\n          ...milo.skills,\r\n          WRATH,\r\n          CHARGE,\r\n          CRIPPLING_BLOW,\r\n          VANISH,\r\n          SHADOW_STRIKE,\r\n          SKILL_SHOT,\r\n          THUNDERBOLT,\r\n          FIREBALL,\r\n          DARK_BLAST,\r\n          HEALING,\r\n        ],\r\n        weapon: buildWeapon('greataxe', 'mythic'),\r\n      },\r\n    ],\r\n  },\r\n]\r\nexport default makeReducer(core, INITIAL_STATE)\r\nexport const useParties = () => useSelector((state: StateT) => state.parties)\r\nexport const usePartiesActions = () =>\r\n  useActions(actions) as {\r\n    upsertParty: (party: PartyT) => void\r\n    upsertCharacter: (partyId: string, character: CharacterT) => void\r\n    deleteCharacter: (partyId: string, characterId: string) => void\r\n    upsertItem: (partyId: string, item: ItemT) => void\r\n    removeItem: (partyId: string, itemId: string) => void\r\n    equipItem: (partyId: string, characterId: string, itemId: string) => void\r\n    unequipItem: (partyId: string, characterId: string, itemId: string) => void\r\n  }\r\n","import { useMemo } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nexport const useActions = (actions: any, deps?: any[]) => {\r\n  const dispatch = useDispatch()\r\n  return useMemo(\r\n    () => bindActionCreators(actions, dispatch),\r\n    deps ? [dispatch, ...deps] : [dispatch],\r\n  )\r\n}\r\n","import React, { useMemo, useContext, useState } from 'react'\r\nimport { PartyT, ProcessedPartyT, processParty } from '../../types/Party'\r\nimport { CharacterT, ProcessedCharacterT } from '../../types/Character'\r\nimport { v4 } from 'uuid'\r\nimport { useParties, PC_PARTY_ID, usePartiesActions } from '../../state/parties'\r\nimport { actionCreators } from '../../state/rolls'\r\nimport { EquippableT } from '../../types/Item'\r\n\r\nexport interface PartyContextT {\r\n  parties: ProcessedPartyT[]\r\n  rawParties: PartyT[]\r\n  userParty: ProcessedPartyT\r\n  rawUserParty: PartyT\r\n  activeCharacterId: string | null\r\n\r\n  upsertParty: (party: PartyT) => void\r\n  upsertItem: (item: EquippableT) => void\r\n  upsertCharacter: (character: CharacterT, partyId?: string) => void\r\n  deleteCharacter: (characterId: string, partyId?: string) => void\r\n  findCharacter: (\r\n    characterId: string,\r\n    partyId?: string,\r\n  ) => ProcessedCharacterT | undefined\r\n  findRawCharacter: (\r\n    characterId: string,\r\n    partyId?: string,\r\n  ) => CharacterT | undefined\r\n  equipItem: (characterId: string, itemId: string, partyId?: string) => void\r\n  unequipItem: (characterId: string, itemId: string, partyId?: string) => void\r\n  setActiveCharacterId: (id: string | null) => void\r\n}\r\nconst defaultContextValue: PartyContextT = {\r\n  parties: [],\r\n  rawParties: [],\r\n  userParty: {\r\n    id: v4(),\r\n    characters: [],\r\n    processed: true,\r\n    items: [],\r\n    skills: [],\r\n    mods: [],\r\n  },\r\n  rawUserParty: { id: v4(), characters: [], items: [], skills: [], mods: [] },\r\n  activeCharacterId: null,\r\n  upsertParty: (party) => {},\r\n  upsertItem: (item) => {},\r\n  upsertCharacter: (character, partyId) => {},\r\n  deleteCharacter: (characterId, partyId) => {},\r\n  findCharacter: (characterId, partyId) => undefined,\r\n  findRawCharacter: (characterId, partyId) => undefined,\r\n  equipItem: (characterId, itemId, partyId) => {},\r\n  unequipItem: (characterId, itemId, partyId) => {},\r\n  setActiveCharacterId: (id) => {},\r\n}\r\nexport const PartyContext = React.createContext<PartyContextT>(\r\n  defaultContextValue,\r\n)\r\n\r\nexport interface PartyContextProviderPropsT {\r\n  children: React.ReactNode | React.ReactNode[]\r\n}\r\nexport const PartyContextProvider = (props: PartyContextProviderPropsT) => {\r\n  const { children } = props\r\n  const actions = usePartiesActions()\r\n  const rawParties = useParties()\r\n  const parties = useMemo(() => {\r\n    return rawParties.map((p) => processParty(p))\r\n  }, [rawParties])\r\n  const userParty = parties.find((p) => p.id === PC_PARTY_ID) as ProcessedPartyT\r\n  const rawUserParty = rawParties.find((p) => p.id === PC_PARTY_ID) as PartyT\r\n  const [activeCharacterId, setActiveCharacterId] = useState<string | null>(\r\n    null,\r\n  )\r\n  const upsertParty = (party: PartyT) => {\r\n    if (!party) return\r\n    if ((party as ProcessedPartyT).processed) {\r\n      throw new Error('No Processed Parties Allowed')\r\n    }\r\n    actions.upsertParty(party)\r\n  }\r\n  const upsertItem = (item: EquippableT, partyId: string = PC_PARTY_ID) => {\r\n    actions.upsertItem(partyId, item)\r\n  }\r\n  const upsertCharacter = (\r\n    character: CharacterT,\r\n    partyId: string = PC_PARTY_ID,\r\n  ) => {\r\n    if (!character) return\r\n    if ((character as ProcessedCharacterT).processed) {\r\n      throw new Error('No processed Characters Allowed')\r\n    }\r\n    actions.upsertCharacter(partyId, character)\r\n  }\r\n  const deleteCharacter = (\r\n    characterId: string,\r\n    partyId: string = PC_PARTY_ID,\r\n  ) => {\r\n    actions.deleteCharacter(partyId, characterId)\r\n  }\r\n  const equipItem = (\r\n    characterId: string,\r\n    itemId: string,\r\n    partyId: string = PC_PARTY_ID,\r\n  ) => {\r\n    actions.equipItem(partyId, characterId, itemId)\r\n  }\r\n  const unequipItem = (\r\n    characterId: string,\r\n    itemId: string,\r\n    partyId: string = PC_PARTY_ID,\r\n  ) => {\r\n    actions.unequipItem(partyId, characterId, itemId)\r\n  }\r\n  const findCharacter = (\r\n    characterId: string,\r\n    partyId: string = PC_PARTY_ID,\r\n  ) => {\r\n    const party = parties.find((p) => p.id === partyId) as ProcessedPartyT\r\n    return party.characters.find((c) => c.id === characterId)\r\n  }\r\n  const findRawCharacter = (\r\n    characterId: string,\r\n    partyId: string = PC_PARTY_ID,\r\n  ) => {\r\n    const party = rawParties.find((p) => p.id === partyId) as PartyT\r\n    return party.characters.find((c) => c.id === characterId)\r\n  }\r\n\r\n  return (\r\n    <PartyContext.Provider\r\n      value={{\r\n        parties,\r\n        rawParties,\r\n        userParty,\r\n        rawUserParty,\r\n        activeCharacterId,\r\n        upsertParty,\r\n        upsertItem,\r\n        upsertCharacter,\r\n        deleteCharacter,\r\n        equipItem,\r\n        unequipItem,\r\n        findCharacter,\r\n        findRawCharacter,\r\n        setActiveCharacterId,\r\n      }}\r\n    >\r\n      {children}\r\n    </PartyContext.Provider>\r\n  )\r\n}\r\n\r\nexport const usePartyContext = () => useContext(PartyContext)\r\n","import { Dispatch } from 'redux'\r\nimport { StateActionT, StateCoreT, StateT } from '../types'\r\nimport { useSelector } from 'react-redux'\r\nimport { makeReducer } from '../util'\r\nimport { Roll2ResultT, Check2ResultT } from '../../types/Roll2'\r\n\r\nexport const ADD_ROLL = '@state/rolls/ADD_ROLL'\r\n\r\nexport const actionCreators = {\r\n  addRoll: (rollResult: Roll2ResultT | Check2ResultT): StateActionT => ({\r\n    type: ADD_ROLL,\r\n    payload: {\r\n      rollResult,\r\n    },\r\n  }),\r\n}\r\n\r\nexport const actions = {\r\n  addRoll: (dispatch: Dispatch) => (\r\n    rollResult: Roll2ResultT | Check2ResultT,\r\n  ) => {\r\n    dispatch(actionCreators.addRoll(rollResult))\r\n  },\r\n}\r\n\r\nexport const core: StateCoreT<(Roll2ResultT | Check2ResultT)[]> = {\r\n  [ADD_ROLL]: (state, action) => {\r\n    return [...state, action.payload.rollResult]\r\n  },\r\n}\r\n\r\nexport const INITIAL_STATE = []\r\nexport default makeReducer(core, INITIAL_STATE)\r\nexport const useRolls = () => useSelector((state: StateT) => state.rolls)\r\n","import React, { useContext } from 'react'\r\nimport { ProcessedCharacterT, CharacterT } from '../../types/Character'\r\nimport { useCharacterContext } from '../CharacterContext'\r\nimport { useRolls, actionCreators } from '../../state/rolls'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  Roll2T,\r\n  Check2T,\r\n  Roll2ResultT,\r\n  resolveCharacterRoll,\r\n  CharacterRollT,\r\n  CharacterCheckT,\r\n  resolveCharacterCheck,\r\n  resolveRoll,\r\n  resolveCheck,\r\n  getCheckProbability,\r\n  reduceCharacterCheck,\r\n  Check2ResultT,\r\n} from '../../types/Roll2'\r\n\r\nexport type RollCheckerT<T, R> = (\r\n  roll: T,\r\n  log?: boolean,\r\n  allowNegatives?: boolean,\r\n  label?: string,\r\n) => R\r\nexport interface RollContextT {\r\n  history: Roll2ResultT[]\r\n  execRoll: RollCheckerT<Roll2T | CharacterRollT, Roll2ResultT>\r\n  execCheck: RollCheckerT<Check2T | CharacterCheckT, Check2ResultT>\r\n  rollCharacter: (\r\n    c: ProcessedCharacterT,\r\n  ) => RollCheckerT<CharacterRollT, Roll2ResultT>\r\n  checkCharacter: (\r\n    c: ProcessedCharacterT,\r\n  ) => RollCheckerT<CharacterCheckT, Check2ResultT>\r\n  getProbability: (check: CharacterCheckT, log?: boolean) => number\r\n}\r\nexport const RollContext = React.createContext<RollContextT>({\r\n  history: [],\r\n  execRoll: (roll) => ({} as Roll2ResultT),\r\n  execCheck: (roll) => ({} as Check2ResultT),\r\n  rollCharacter: (c) => (roll, log, allowNegatives) =>\r\n    resolveCharacterRoll(roll, c),\r\n  checkCharacter: (c) => (roll, log, allowNegatives) =>\r\n    resolveCharacterCheck(roll, c),\r\n  getProbability: (roll) => 0,\r\n})\r\nexport const useRollContext = () => useContext(RollContext)\r\n\r\nexport interface RollContextProviderPropsT {\r\n  children: any\r\n  rolls: (Roll2ResultT | Check2ResultT)[]\r\n  character?: ProcessedCharacterT\r\n  addRoll: (roll: Roll2ResultT | Check2ResultT, label?: string) => void\r\n}\r\nexport const RollContextProvider = (props: RollContextProviderPropsT) => {\r\n  const { children, rolls, addRoll } = props\r\n  const characterContext = useCharacterContext()\r\n  const character = props.character || characterContext.character\r\n  return (\r\n    <RollContext.Provider\r\n      value={{\r\n        history: rolls,\r\n        execRoll: (roll, log = true, allowNegatives, label) => {\r\n          const result: Roll2ResultT = (roll as CharacterRollT).keys\r\n            ? resolveCharacterRoll(\r\n                roll as CharacterRollT,\r\n                character,\r\n                allowNegatives,\r\n              )\r\n            : resolveRoll(roll, allowNegatives)\r\n          if (log) addRoll(result, label)\r\n          return result\r\n        },\r\n        execCheck: (check, log = true, allowNegatives, label) => {\r\n          const result: Check2ResultT = (check as CharacterCheckT).keys\r\n            ? resolveCharacterCheck(\r\n                check as CharacterCheckT,\r\n                character,\r\n                allowNegatives,\r\n              )\r\n            : resolveCheck(check, allowNegatives)\r\n          if (log) addRoll(result, label)\r\n          return result\r\n        },\r\n        rollCharacter: (\r\n          character,\r\n        ): RollCheckerT<CharacterRollT, Roll2ResultT> => {\r\n          return (\r\n            roll: CharacterRollT,\r\n            log = true,\r\n            allowNegatives = false,\r\n            label,\r\n          ) => {\r\n            const result = resolveCharacterRoll(roll, character, allowNegatives)\r\n            if (log) addRoll(result, label)\r\n            return result\r\n          }\r\n        },\r\n        checkCharacter: (character) => {\r\n          return (\r\n            check: CharacterCheckT,\r\n            log = true,\r\n            allowNegatives = false,\r\n            label,\r\n          ) => {\r\n            const result = resolveCharacterCheck(\r\n              check,\r\n              character,\r\n              allowNegatives,\r\n            )\r\n            if (log) addRoll(result, label)\r\n            return result\r\n          }\r\n        },\r\n        getProbability: (check, log: boolean = false) => {\r\n          return getCheckProbability(reduceCharacterCheck(check, character))\r\n        },\r\n      }}\r\n    >\r\n      {children}\r\n    </RollContext.Provider>\r\n  )\r\n}\r\n\r\nexport interface RollStateContextProviderPropsT {\r\n  children: any\r\n  character?: ProcessedCharacterT\r\n}\r\nexport const RollStateContextProvider = (\r\n  props: RollStateContextProviderPropsT,\r\n) => {\r\n  const { children, character } = props\r\n  const rolls = useRolls()\r\n  const dispatch = useDispatch()\r\n  const addRoll = (roll: Roll2ResultT, label?: string) => {\r\n    dispatch(actionCreators.addRoll({ ...roll, label }))\r\n  }\r\n  return (\r\n    <RollContextProvider rolls={rolls} addRoll={addRoll} character={character}>\r\n      {children}\r\n    </RollContextProvider>\r\n  )\r\n}\r\n","import React, { useContext, useMemo } from 'react'\r\nimport {\r\n  CharacterT,\r\n  ProcessedCharacterT,\r\n  processCharacter,\r\n} from '../../types/Character'\r\nimport { BASE_CHARACTER } from '../../objects/baseCharacter'\r\nimport { usePartyContext } from '../PartyContext'\r\nimport { RollStateContextProvider } from '../RollContext'\r\n\r\nexport interface CharacterContextT {\r\n  character: ProcessedCharacterT\r\n  rawCharacter: CharacterT\r\n  onChange: (character: CharacterT) => void\r\n}\r\nexport const CharacterContext = React.createContext<CharacterContextT>({\r\n  rawCharacter: BASE_CHARACTER,\r\n  character: processCharacter(BASE_CHARACTER),\r\n  onChange: (character) => {},\r\n})\r\nexport const useCharacterContext = () => useContext(CharacterContext)\r\n\r\nexport interface CharacterContextProviderT {\r\n  children: any\r\n  character: CharacterT\r\n  onChange: (character: CharacterT) => void\r\n}\r\nexport const CharacterContextProvider = (props: CharacterContextProviderT) => {\r\n  const { character, children, onChange } = props\r\n  const processedCharacter: ProcessedCharacterT = useMemo(\r\n    () => processCharacter(character),\r\n    [character],\r\n  )\r\n  return (\r\n    <CharacterContext.Provider\r\n      value={{\r\n        character: processedCharacter,\r\n        rawCharacter: character,\r\n        onChange,\r\n      }}\r\n    >\r\n      <RollStateContextProvider>{children}</RollStateContextProvider>\r\n    </CharacterContext.Provider>\r\n  )\r\n}\r\n\r\nexport interface CharacterStateContextProviderPropsT {\r\n  children: any\r\n  characterId?: string\r\n}\r\nexport const CharacterStateContextProvider = (\r\n  props: CharacterStateContextProviderPropsT,\r\n) => {\r\n  const { children, characterId } = props\r\n  const { activeCharacterId, rawUserParty, upsertCharacter } = usePartyContext()\r\n  const character =\r\n    rawUserParty.characters.find((c) => c.id === characterId) ||\r\n    rawUserParty.characters.find((c) => c.id === activeCharacterId) ||\r\n    BASE_CHARACTER\r\n  const onChange = (character: CharacterT) => {\r\n    if (!character) return\r\n    if ((character as ProcessedCharacterT).processed) {\r\n      throw new Error('no process characters allowed')\r\n    }\r\n    upsertCharacter(character)\r\n  }\r\n  return (\r\n    <CharacterContextProvider\r\n      character={character as CharacterT}\r\n      onChange={onChange}\r\n    >\r\n      {children}\r\n    </CharacterContextProvider>\r\n  )\r\n}\r\n","import { styled } from 'styletron-react'\r\n\r\nexport interface FlexContainerPropsT {\r\n  $direction?: 'row' | 'column' | 'column-reverse'\r\n  $full?: boolean\r\n}\r\nexport const FlexContainer = styled('div', (props: FlexContainerPropsT) => ({\r\n  display: 'flex',\r\n  flexDirection: props.$direction || 'row',\r\n  flex: props.$full ? 1 : 'default',\r\n}))\r\nexport const FullContainer = styled('div', () => ({\r\n  flex: 1,\r\n}))\r\n","import { CharacterResourceKeyT } from '../types/Character'\r\nimport WeaponHands from '../icons/svg/delapouite/sword-brandish.svg'\r\nimport CharacterPoints from '../icons/svg/lorc/aura.svg'\r\nimport Heads from '../icons/svg/lorc/barbute.svg'\r\nimport Bodies from '../icons/svg/delapouite/muscular-torso.svg'\r\nimport Hands from '../icons/svg/sbed/hand.svg'\r\nimport Finger from '../icons/svg/delapouite/ring.svg'\r\nimport Feet from '../icons/svg/lorc/footprint.svg'\r\nimport Slashing from '../icons/svg/lorc/quick-slash.svg'\r\nimport Piercing from '../icons/svg/lorc/barbed-arrow.svg'\r\nimport Fire from '../icons/svg/carl-olsen/flame.svg'\r\nimport Blood from '../icons/svg/lorc/bleeding-eye.svg'\r\nimport Light from '../icons/svg/lorc/moebius-trefoil.svg'\r\nimport Dark from '../icons/svg/lorc/triorb.svg'\r\nimport Shield from '../icons/svg/sbed/shield.svg'\r\nimport Tome from '../icons/svg/lorc/book-cover.svg'\r\nimport Fists from '../icons/svg/skoll/fist.svg'\r\nimport Axe from '../icons/svg/lorc/fire-axe.svg'\r\nimport GreatAxe from '../icons/svg/delapouite/war-axe.svg'\r\nimport Sword from '../icons/svg/lorc/stiletto.svg'\r\nimport Greatsword from '../icons/svg/lorc/croc-sword.svg'\r\nimport Flail from '../icons/svg/delapouite/flail.svg'\r\nimport Daggers from '../icons/svg/lorc/crossed-swords.svg'\r\nimport Katana from '../icons/svg/delapouite/katana.svg'\r\nimport Rapier from '../icons/svg/lorc/sword-hilt.svg'\r\nimport Wand from '../icons/svg/willdabeast/orb-wand.svg'\r\nimport Staff from '../icons/svg/lorc/wizard-staff.svg'\r\nimport Pistol from '../icons/svg/skoll/luger.svg'\r\nimport Crossbow from '../icons/svg/carl-olsen/crossbow.svg'\r\nimport FireSword from '../icons/svg/lorc/shard-sword.svg'\r\nimport BloodSword from '../icons/svg/lorc/bloody-sword.svg'\r\nimport LightSword from '../icons/svg/lorc/winged-sword.svg'\r\nimport DarkSword from '../icons/svg/lorc/spiral-thrust.svg'\r\nimport Helmet from '../icons/svg/delapouite/closed-barbute.svg'\r\nimport Cowl from '../icons/svg/lorc/hood.svg'\r\nimport Armor from '../icons/svg/delapouite/shoulder-armor.svg'\r\nimport Robe from '../icons/svg/lorc/robe.svg'\r\nimport Gloves from '../icons/svg/delapouite/gloves.svg'\r\nimport Ring from '../icons/svg/delapouite/power-ring.svg'\r\nimport Boots from '../icons/svg/lorc/boots.svg'\r\nimport { DamageTypeKeyT } from '../types/Damage'\r\nimport { WeaponTypeT, WeaponIconKeyT } from '../types/Weapon'\r\nimport { ArmorTypeT } from '../types/Armor'\r\nimport { ItemTypeT } from '../types/Item'\r\n\r\nexport const IconCharacterResourceMap: Record<CharacterResourceKeyT, string> = {\r\n  weaponHands: WeaponHands,\r\n  characterPoints: CharacterPoints,\r\n  heads: Heads,\r\n  bodies: Bodies,\r\n  hands: Hands,\r\n  fingers: Finger,\r\n  feet: Feet,\r\n}\r\n\r\nexport const IconDamageTypeMap: Record<DamageTypeKeyT, string> = {\r\n  slashing: Slashing,\r\n  piercing: Piercing,\r\n  fire: Fire,\r\n  blood: Blood,\r\n  light: Light,\r\n  dark: Dark,\r\n}\r\n\r\nexport const IconItemTypeMap: Record<ItemTypeT, string> = {\r\n  weapon: '',\r\n  armor: '',\r\n  shield: Shield,\r\n  tome: Tome,\r\n}\r\n\r\nexport const IconWeaponTypeMap: Record<WeaponTypeT, string> = {\r\n  fists: Fists,\r\n  axe: Axe,\r\n  greataxe: GreatAxe,\r\n  flail: Flail,\r\n  daggers: Daggers,\r\n  katana: Katana,\r\n  rapier: Rapier,\r\n  wand: Wand,\r\n  staff: Staff,\r\n  elementalSword: FireSword,\r\n  elementalGreatsword: DarkSword,\r\n  sword: Sword,\r\n  greatsword: Greatsword,\r\n  pistol: Pistol,\r\n  crossbow: Crossbow,\r\n}\r\n\r\nexport const IconUniqueWeaponMap: Record<WeaponIconKeyT, string> = {\r\n  'fire-sword': FireSword,\r\n  'blood-sword': BloodSword,\r\n  'light-sword': LightSword,\r\n  'dark-sword': DarkSword,\r\n}\r\n\r\nexport const IconArmorTypeMap: Record<ArmorTypeT, string> = {\r\n  helmet: Helmet,\r\n  cowl: Cowl,\r\n  chestplate: Armor,\r\n  robe: Robe,\r\n  gloves: Gloves,\r\n  ring: Ring,\r\n  boots: Boots,\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nexport interface IconPropsT {\r\n  src: string\r\n  size: number\r\n  fill?: string\r\n  style?: React.CSSProperties\r\n}\r\nexport const Icon = ({ src, size, style = {}, fill = 'white' }: IconPropsT) => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [svg, setSvg] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (src) {\r\n      fetch(src)\r\n        .then((res) => res.text())\r\n        .then((text) => setSvg(text))\r\n        .then(() => setLoading(false))\r\n    }\r\n  }, [src])\r\n\r\n  return !loading ? (\r\n    <div\r\n      style={{ ...style, height: size, width: size, fill }}\r\n      dangerouslySetInnerHTML={{ __html: svg }}\r\n    />\r\n  ) : (\r\n    <div />\r\n  )\r\n}\r\n","import React, { useState, useEffect, useLayoutEffect } from 'react'\r\nimport { timeout } from '../../util/wait'\r\nimport { v4 } from 'uuid'\r\n\r\nexport interface HoverChildrenT {\r\n  isHovering: boolean\r\n}\r\nexport interface HoverPropsT {\r\n  delay?: number\r\n  children: (props: HoverChildrenT) => JSX.Element\r\n}\r\nexport const Hover = (props: HoverPropsT) => {\r\n  const { delay = 500, children } = props\r\n  const [internalHovering, setInternalHovering] = useState<boolean>(false)\r\n  const [isHovering, setIsHovering] = useState<boolean>(false)\r\n  const [guid, setGuid] = useState<string>(v4())\r\n  useLayoutEffect(() => {\r\n    const action = async () => {\r\n      if (internalHovering) {\r\n        setTimeout(() => {\r\n          setGuid(v4())\r\n        }, delay)\r\n      }\r\n    }\r\n    action()\r\n  }, [internalHovering])\r\n  useLayoutEffect(() => {\r\n    if (internalHovering) {\r\n      setIsHovering(true)\r\n    }\r\n  }, [guid])\r\n  const onMouseEnter = (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    setInternalHovering(true)\r\n  }\r\n  const onMouseLeave = (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    setInternalHovering(false)\r\n    setIsHovering(false)\r\n  }\r\n  return (\r\n    <div onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\r\n      {children({ isHovering })}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Hover } from '../components/Hover'\r\n\r\nexport interface BoxContainerPropsT extends React.HTMLProps<HTMLDivElement> {\r\n  substyle?: React.CSSProperties\r\n  tag?: any\r\n  to?: string\r\n}\r\nexport const BoxContainer = (props: BoxContainerPropsT) => {\r\n  const {\r\n    style = {},\r\n    substyle = {},\r\n    children,\r\n    tag: Element = 'div',\r\n    ...rest\r\n  } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        border: '1px solid #000',\r\n        display: 'flex',\r\n        boxSizing: 'border-box',\r\n        ...style,\r\n      }}\r\n    >\r\n      <Element\r\n        style={{\r\n          border: substyle.border || '1px solid #555',\r\n          background: 'linear-gradient(0deg, #222222 0%, #2a2a2a 100%)',\r\n          padding: 10,\r\n          color: '#ccc',\r\n          flex: 1,\r\n          ...substyle,\r\n        }}\r\n        {...rest}\r\n      >\r\n        {children}\r\n      </Element>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const SmallBox = (props: BoxContainerPropsT) => (\r\n  <BoxContainer\r\n    {...props}\r\n    style={{\r\n      height: 40,\r\n      width: 40,\r\n      ...props.style,\r\n    }}\r\n    substyle={{\r\n      display: 'flex',\r\n      padding: 0,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      background: '#111',\r\n      ...props.substyle,\r\n    }}\r\n  >\r\n    {props.children}\r\n  </BoxContainer>\r\n)\r\n\r\nexport const BoxButton = (props: BoxContainerPropsT) => {\r\n  return (\r\n    <Hover delay={0}>\r\n      {({ isHovering }) => (\r\n        <BoxContainer\r\n          {...props}\r\n          tag='button'\r\n          style={{\r\n            margin: 0,\r\n            ...(props.style || {}),\r\n          }}\r\n          substyle={{\r\n            borderColor: isHovering ? '#999' : '#555',\r\n            padding: '4px',\r\n            cursor: props.disabled ? 'default' : 'pointer',\r\n            background: props.disabled ? '#444' : '#111',\r\n            ...(props.substyle || {}),\r\n          }}\r\n        />\r\n      )}\r\n    </Hover>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { CharacterResourceKeyT } from '../../types/Character'\r\nimport { useCharacterContext } from '../../contexts/CharacterContext'\r\nimport { IconCharacterResourceMap } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { BoxContainer } from '../../elements/box'\r\n\r\nexport interface ResourceScorePropsT {\r\n  id: CharacterResourceKeyT\r\n}\r\nexport const ResourceScore = (props: ResourceScorePropsT) => {\r\n  const { id } = props\r\n  const { character } = useCharacterContext()\r\n  const iconUrl = IconCharacterResourceMap[id]\r\n\r\n  return (\r\n    <BoxContainer\r\n      substyle={{\r\n        display: 'flex',\r\n        padding: 4,\r\n        fontFamily: 'monospace',\r\n        fontSize: 16,\r\n      }}\r\n    >\r\n      <div style={{ flex: 1, marginRight: 10 }}>\r\n        <Icon size={18} src={iconUrl} />\r\n      </div>\r\n      {character.resources[id]}\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useCharacterContext } from '../../contexts/CharacterContext'\r\nimport {\r\n  CharacterAbilityKeyT,\r\n  CharacterKeyMap3,\r\n  characterAbilityScoreCosts,\r\n  setCharacterAbilityScore,\r\n} from '../../types/Character'\r\nimport { useRollContext } from '../../contexts/RollContext'\r\nimport { BoxContainer, BoxButton } from '../../elements/box'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { makeCharacterCheck } from '../../types/Roll2'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\n\r\nexport interface AbilityScorePropsT {\r\n  id: CharacterAbilityKeyT\r\n  edit?: boolean\r\n}\r\nexport const AbilityScore = (props: AbilityScorePropsT) => {\r\n  const { id, edit = true } = props\r\n  const { character, rawCharacter, onChange } = useCharacterContext()\r\n  const { upsertItem } = usePartyContext()\r\n  const { execCheck } = useRollContext()\r\n  const keyName = CharacterKeyMap3[id]\r\n  const rawValue = rawCharacter.abilities[id]\r\n  const displayValue = character.abilities[id]\r\n  const cost = characterAbilityScoreCosts[id]\r\n  const points = character.resources.characterPoints\r\n\r\n  return (\r\n    <PureAbilityScore\r\n      name={keyName}\r\n      value={displayValue}\r\n      rawValue={rawValue}\r\n      points={points}\r\n      cost={cost}\r\n      edit={edit}\r\n      onClick={() => {\r\n        execCheck(makeCharacterCheck([id]))\r\n      }}\r\n      onIncrement={() => {\r\n        const [char, items] = setCharacterAbilityScore(rawCharacter)(\r\n          id,\r\n          rawValue + 1,\r\n          points - cost,\r\n        )\r\n        onChange(char)\r\n        items.forEach((item) => {\r\n          upsertItem(item)\r\n        })\r\n      }}\r\n      onDecrement={() => {\r\n        const [char, items] = setCharacterAbilityScore(rawCharacter)(\r\n          id,\r\n          rawValue - 1,\r\n          points + cost,\r\n        )\r\n        onChange(char)\r\n        items.forEach((item) => {\r\n          upsertItem(item)\r\n        })\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport const PureAbilityScore = (props: any) => {\r\n  const {\r\n    name,\r\n    edit,\r\n    rawValue,\r\n    value,\r\n    points,\r\n    cost,\r\n    onClick,\r\n    onIncrement,\r\n    onDecrement,\r\n  } = props\r\n  return (\r\n    <BoxContainer\r\n      substyle={{\r\n        padding: 0,\r\n        display: 'flex',\r\n        fontFamily: 'monospace',\r\n      }}\r\n    >\r\n      <FlexContainer\r\n        style={{ padding: 8, marginRight: 10, whiteSpace: 'nowrap' }}\r\n        $direction='column'\r\n        $full\r\n      >\r\n        <a href='#' onClick={onClick}>\r\n          {name} ({rawValue})\r\n        </a>\r\n        <span style={{ fontSize: 36, fontWeight: 'bolder' }}>{value}</span>\r\n      </FlexContainer>\r\n      {edit && (\r\n        <FlexContainer\r\n          $direction='column'\r\n          style={{\r\n            width: 30,\r\n          }}\r\n        >\r\n          <BoxButton\r\n            style={{ margin: 0 }}\r\n            disabled={points < cost || rawValue === 18}\r\n            onClick={onIncrement}\r\n          >\r\n            +\r\n          </BoxButton>\r\n          <FlexContainer\r\n            $full\r\n            style={{\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            <div>{cost}</div>\r\n          </FlexContainer>\r\n          <BoxButton\r\n            style={{ margin: 0 }}\r\n            disabled={rawValue === 3}\r\n            onClick={onDecrement}\r\n          >\r\n            -\r\n          </BoxButton>\r\n        </FlexContainer>\r\n      )}\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useCharacterContext } from '../../contexts/CharacterContext'\r\nimport { CharacterStatKeyT } from '../../types/Character'\r\nimport { useRollContext } from '../../contexts/RollContext'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { makeCharacterCheck } from '../../types/Roll2'\r\n\r\nexport interface StatScorePropsT {\r\n  id: CharacterStatKeyT\r\n}\r\nexport const StatScore = (props: StatScorePropsT) => {\r\n  const { id } = props\r\n  const { character } = useCharacterContext()\r\n  const { execCheck } = useRollContext()\r\n  const displayName = id //CharacterKeyMap3[id]\r\n  return (\r\n    <BoxContainer\r\n      style={{ flex: 1 }}\r\n      substyle={{\r\n        display: 'flex',\r\n        fontFamily: 'monospace',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <a\r\n        href='#'\r\n        style={{ display: 'inline-block', flex: 1, marginRight: 10 }}\r\n        onClick={() => execCheck(makeCharacterCheck([id]))}\r\n      >\r\n        {displayName}\r\n      </a>\r\n      <span>{character.stats[id]}</span>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { DamageTypeKeyT, DamageTypeKeyColors } from '../../types/Damage'\r\nimport { useCharacterContext } from '../../contexts/CharacterContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useRollContext } from '../../contexts/RollContext'\r\nimport { Icon } from '../Icon'\r\nimport { IconDamageTypeMap } from '../../icons/maps'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport {\r\n  CharacterRollT,\r\n  getRollRange,\r\n  reduceCharacterRoll,\r\n} from '../../types/Roll2'\r\n\r\nexport interface DamageResistanceScorePropsT {\r\n  id: DamageTypeKeyT\r\n}\r\nexport const DamageResistanceScore = (props: DamageResistanceScorePropsT) => {\r\n  const { id } = props\r\n  const { character } = useCharacterContext()\r\n  const { execRoll } = useRollContext()\r\n  const { damageResistances } = character\r\n  const roll = damageResistances[id] as CharacterRollT\r\n  const rollText = roll\r\n    ? `(${getRollRange(reduceCharacterRoll(roll, character))})`\r\n    : ''\r\n  const iconUrl = IconDamageTypeMap[id]\r\n  const fill = DamageTypeKeyColors[id]\r\n\r\n  return (\r\n    <BoxContainer\r\n      style={{ flex: 1 }}\r\n      substyle={{\r\n        display: 'flex',\r\n        whiteSpace: 'nowrap',\r\n        fontFamily: 'monospace',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <div style={{ flex: 1, marginRight: 20 }}>\r\n        <FlexContainer>\r\n          <Icon\r\n            size={18}\r\n            src={iconUrl}\r\n            fill={fill}\r\n            style={{ marginRight: 10 }}\r\n          />\r\n          <a href='#' onClick={() => (roll ? execRoll(roll) : null)}>\r\n            {id}\r\n          </a>\r\n        </FlexContainer>\r\n      </div>\r\n      <div>{rollText ? rollText : 0}</div>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","export type CompareResultT = -1 | 0 | 1\r\nexport type CompareResultFn<T = any> = (...args: [T, T, T]) => T\r\nexport const ZERO_COMPARE: CompareResultFn = (...args) => args[1]\r\nexport const ONE_COMPARE: CompareResultFn = (...args) => args[2]\r\nexport const BASE_ARGS: [string, string, string] = [\r\n  'lightcoral',\r\n  'inherit',\r\n  'lightgreen',\r\n]\r\nexport const compareResult = (result: CompareResultT): CompareResultFn => (\r\n  ...args: any[]\r\n) => {\r\n  return args[result + 1]\r\n}\r\nexport const toCompareResult = (n: number) => (n < 0 ? -1 : n > 0 ? 1 : 0)\r\nexport const getCompareFn = (valueA: number, valueB: number) => {\r\n  return compareResult(toCompareResult(valueA - valueB))\r\n}\r\n","import React from 'react'\r\nimport {\r\n  CharacterTraitT,\r\n  CharacterKeyMap3,\r\n  CharacterSkillCheckKeyT,\r\n  getTraitValue,\r\n} from '../../types/Character'\r\nimport { getSign } from '../../util/getSign'\r\nimport { getKeys } from '../../util/getKeys'\r\nimport { CompareResultFn, ZERO_COMPARE, BASE_ARGS } from '../../util/compare'\r\n\r\nexport interface TraitScorePropsT {\r\n  trait: CharacterTraitT\r\n  compareResult?: (keY: CharacterSkillCheckKeyT) => CompareResultFn\r\n}\r\nexport const TraitScore = (props: TraitScorePropsT) => {\r\n  const {\r\n    trait,\r\n    compareResult = (key: CharacterSkillCheckKeyT) => ZERO_COMPARE,\r\n  } = props\r\n  const { abilitiesModifiers, statsModifiers } = trait\r\n  const abilityKeys = getKeys(abilitiesModifiers).filter(\r\n    (key) => getTraitValue(trait, key) !== 0,\r\n  )\r\n  const statKeys = getKeys(statsModifiers).filter(\r\n    (key) => getTraitValue(trait, key) !== 0,\r\n  )\r\n\r\n  return (\r\n    <div style={{ fontFamily: 'monospace' }}>\r\n      {trait.focusOffset !== 0 && (\r\n        <span>\r\n          {getSign(trait.focusOffset)}\r\n          {Math.abs(trait.focusOffset)} FP\r\n          {trait.healthOffset !== 0 ||\r\n          abilityKeys.length > 0 ||\r\n          statKeys.length > 0\r\n            ? ', '\r\n            : ''}\r\n        </span>\r\n      )}\r\n      {trait.healthOffset !== 0 && (\r\n        <span>\r\n          {getSign(trait.healthOffset)}\r\n          {Math.abs(trait.healthOffset)} HP\r\n          {abilityKeys.length > 0 || statKeys.length > 0 ? ', ' : ''}\r\n        </span>\r\n      )}\r\n      {abilityKeys.map((key, i) => (\r\n        <span key={key}>\r\n          {i > 0 ? ', ' : ''}\r\n          <span\r\n            style={{\r\n              color: compareResult(key)(...BASE_ARGS),\r\n            }}\r\n          >\r\n            {getSign(getTraitValue(trait, key))}\r\n            {Math.abs(getTraitValue(trait, key))} {CharacterKeyMap3[key]}\r\n          </span>\r\n        </span>\r\n      ))}\r\n      {abilityKeys.length > 0 && statKeys.length > 0 && ', '}\r\n      {statKeys.map((key, i) => (\r\n        <span key={key}>\r\n          {i > 0 ? ', ' : ''}\r\n          <span\r\n            style={{\r\n              color: compareResult(key)(...BASE_ARGS),\r\n            }}\r\n          >\r\n            {getSign(getTraitValue(trait, key))}\r\n            {Math.abs(getTraitValue(trait, key))} {CharacterKeyMap3[key]}\r\n          </span>\r\n        </span>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n","import { notZero } from './notZero'\r\n\r\nexport const getValueString = (value: number): string =>\r\n  notZero(value, `${Math.abs(value)}`)\r\n","import React, { useMemo } from 'react'\r\nimport { useRollContext } from '../../contexts/RollContext'\r\nimport { CharacterKeyMap3 } from '../../types/Character'\r\nimport { getSign } from '../../util/getSign'\r\nimport { getValueString } from '../../util/getValueString'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Icon } from '../Icon'\r\nimport Dice6 from '../../icons/svg/delapouite/dice-six-faces-six.svg'\r\nimport { CompareResultFn, ZERO_COMPARE, BASE_ARGS } from '../../util/compare'\r\nimport { CharacterCheckT } from '../../types/Roll2'\r\n\r\nexport interface CheckPreviewPropsT {\r\n  check: CharacterCheckT\r\n  name?: string\r\n  showCheckButton?: boolean\r\n  compareResult?: CompareResultFn\r\n}\r\nexport const CheckPreview = (props: CheckPreviewPropsT) => {\r\n  const {\r\n    check,\r\n    name,\r\n    showCheckButton = true,\r\n    compareResult = ZERO_COMPARE,\r\n  } = props\r\n  const { execCheck, getProbability } = useRollContext()\r\n  const value = check.value || 0\r\n  const rollKeys = (check.keys || []).map((k) => CharacterKeyMap3[k])\r\n  const keyStr =\r\n    rollKeys.reduce((str, key, i) => `${str}${i !== 0 ? '+' : ''}${key}`, '') +\r\n    (rollKeys.length === 0 ? '' : getSign(value))\r\n  const rollStr = check.roll.string ? ` {${check.roll.string}} ` : ''\r\n  const probability = useMemo(() => getProbability(check, true), [\r\n    check,\r\n    getProbability,\r\n  ])\r\n\r\n  return (\r\n    <FlexContainer>\r\n      <div\r\n        style={{\r\n          marginRight: 10,\r\n          flex: 1,\r\n          color: compareResult(...BASE_ARGS),\r\n        }}\r\n      >\r\n        {name && <strong>{name}</strong>}\r\n        <div style={{ fontFamily: 'monospace', whiteSpace: 'nowrap' }}>\r\n          {rollStr}\r\n          {keyStr}\r\n          {rollStr && getValueString(value)}{' '}\r\n          {!rollStr && ' = ' + getValueString(check.roll.modifier)} (\r\n          {probability}%)\r\n        </div>\r\n      </div>\r\n      {showCheckButton && (\r\n        <div>\r\n          <button onClick={() => execCheck(check)}>\r\n            <Icon src={Dice6} size={18} fill='4bebc6' />\r\n          </button>\r\n        </div>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Icon } from '../Icon'\r\nimport { IconArmorTypeMap } from '../../icons/maps'\r\nimport { ArmorT } from '../../types/Armor'\r\n\r\nexport interface ArmorIconPropsT {\r\n  item: ArmorT\r\n  size: number\r\n  fill?: string\r\n  style?: React.CSSProperties\r\n}\r\nexport const ArmorIcon = (props: ArmorIconPropsT) => {\r\n  const { item, size, fill, style } = props\r\n  const src = IconArmorTypeMap[item.armorType]\r\n\r\n  return <Icon src={src} size={size} fill={fill} style={style} />\r\n}\r\n","import { CharacterTraitT, CharacterResourceKeyT } from './Character'\r\nimport { DamageTypeRollsT } from './Damage'\r\nimport { CharacterCheckT } from './Roll2'\r\n\r\nexport type ItemRarityT =\r\n  | 'common'\r\n  | 'uncommon'\r\n  | 'rare'\r\n  | 'legendary'\r\n  | 'unique'\r\n  | 'mythic'\r\n  | 'set'\r\nexport interface ItemT {\r\n  id: string\r\n  name: string\r\n  rarity: ItemRarityT\r\n  icon?: string\r\n}\r\nexport type ItemTypeT = 'weapon' | 'armor' | 'shield' | 'tome'\r\nexport interface EquippableT extends ItemT {\r\n  equippable: true\r\n  type: ItemTypeT\r\n  rarity: ItemRarityT\r\n  cost: number\r\n  resource: CharacterResourceKeyT\r\n  requirementCheck: CharacterCheckT\r\n  traits: CharacterTraitT[]\r\n  damageResistances: DamageTypeRollsT\r\n}\r\n\r\nexport const ItemRarityColorMap: Record<ItemRarityT, string> = {\r\n  common: '#fff',\r\n  uncommon: '#9fbd9f',\r\n  rare: '#91b4f2',\r\n  legendary: '#cda5f3',\r\n  unique: '#c2af6b',\r\n  mythic: 'lightsalmon',\r\n  set: '#38f5e2',\r\n}\r\n","import React from 'react'\r\nimport { Icon } from '../Icon'\r\nimport { IconItemTypeMap } from '../../icons/maps'\r\nimport { EquippableT } from '../../types/Item'\r\n\r\nexport interface ItemIconPropsT {\r\n  item: EquippableT\r\n  size: number\r\n  fill?: string\r\n  style?: React.CSSProperties\r\n}\r\nexport const ItemIcon = (props: ItemIconPropsT) => {\r\n  const { item, size, fill, style } = props\r\n  const src = IconItemTypeMap[item.type]\r\n\r\n  return <Icon src={src} size={size} fill={fill} style={style} />\r\n}\r\n","import React, { useState } from 'react'\r\nimport Color from 'color'\r\nimport { useCharacterContext } from '../../contexts/CharacterContext'\r\nimport {\r\n  getDamageTypeKeys,\r\n  DamageTypeKeyColors,\r\n  DamageTypeKeyT,\r\n} from '../../types/Damage'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { TraitScore } from '../TraitScore'\r\nimport { CheckPreview } from '../CheckPreview'\r\nimport { CharacterSkillCheckKeyT } from '../../types/Character'\r\nimport { BoxContainer, BoxButton } from '../../elements/box'\r\nimport { IconDamageTypeMap, IconCharacterResourceMap } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { ArmorIcon } from '../ArmorIcon'\r\nimport { ArmorT } from '../../types/Armor'\r\nimport { EquippableT, ItemRarityColorMap } from '../../types/Item'\r\nimport { ItemIcon } from '../ItemIcon'\r\nimport { CompareResultFn, ZERO_COMPARE, BASE_ARGS } from '../../util/compare'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { CharacterRollT, getRollText } from '../../types/Roll2'\r\n\r\nexport interface ItemPreviewPropsT {\r\n  item: EquippableT\r\n  showEquipButton?: boolean\r\n  showRequirementCheck?: boolean\r\n  showCollapseButton?: boolean\r\n  requirementCompare?: CompareResultFn\r\n  traitCompare?: (key: CharacterSkillCheckKeyT) => CompareResultFn\r\n  resistancesCompare?: (key: DamageTypeKeyT) => CompareResultFn\r\n  costComare?: CompareResultFn\r\n}\r\nexport const ItemPreview = (props: ItemPreviewPropsT) => {\r\n  const {\r\n    item,\r\n    showEquipButton = true,\r\n    showRequirementCheck = true,\r\n    showCollapseButton = false,\r\n  } = props\r\n  const { rawCharacter } = useCharacterContext()\r\n  const { unequipItem } = usePartyContext()\r\n  const [collapsed, setCollapsed] = useState(false)\r\n  const requirementCompare = props.requirementCompare || ZERO_COMPARE\r\n  const traitCompare = props.traitCompare || ((key) => ZERO_COMPARE)\r\n  const resistancesCompare = props.resistancesCompare || ((key) => ZERO_COMPARE)\r\n  const costComare = props.costComare || ZERO_COMPARE\r\n  const isArmor = item.type === 'armor'\r\n  const rarityColor = ItemRarityColorMap[item.rarity]\r\n  const borderColor = Color(rarityColor)\r\n    .desaturate(0.5)\r\n    .fade(0.5)\r\n    .rgb()\r\n    .string()\r\n  return (\r\n    <BoxContainer\r\n      style={{ width: 380 }}\r\n      substyle={{ borderColor: borderColor }}\r\n    >\r\n      <FlexContainer>\r\n        {isArmor ? (\r\n          <ArmorIcon\r\n            item={item as ArmorT}\r\n            size={24}\r\n            fill={rarityColor}\r\n            style={{ marginRight: 10 }}\r\n          />\r\n        ) : (\r\n          <ItemIcon\r\n            item={item}\r\n            size={24}\r\n            style={{ marginRight: 10 }}\r\n            fill={rarityColor}\r\n          />\r\n        )}\r\n        <h3\r\n          style={{\r\n            margin: '0 10px 0 0',\r\n            flex: 1,\r\n            whiteSpace: 'nowrap',\r\n            // color: rarityColor,\r\n          }}\r\n        >\r\n          {item.name}\r\n        </h3>\r\n        {showCollapseButton && (\r\n          <BoxButton\r\n            substyle={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}\r\n            onClick={() => {\r\n              setCollapsed((c) => !c)\r\n            }}\r\n          >\r\n            {collapsed ? 'more' : 'less'}\r\n          </BoxButton>\r\n        )}\r\n        {!showEquipButton && (\r\n          <FlexContainer\r\n            style={{\r\n              margin: '0 0 10px 0',\r\n              fontWeight: 'bold',\r\n              fontSize: 12,\r\n              color: costComare(...BASE_ARGS),\r\n            }}\r\n          >\r\n            <Icon\r\n              src={IconCharacterResourceMap[item.resource]}\r\n              size={12}\r\n              fill={costComare('lightcoral', 'white', 'lightgreen')}\r\n              style={{ margin: '0 8px' }}\r\n            />\r\n            {item.cost}\r\n          </FlexContainer>\r\n        )}\r\n        {showEquipButton && (\r\n          <BoxButton\r\n            substyle={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}\r\n            onClick={() => {\r\n              unequipItem(rawCharacter.id, item.id)\r\n            }}\r\n          >\r\n            <Icon\r\n              src={IconCharacterResourceMap[item.resource]}\r\n              size={12}\r\n              fill='rgba(255,255,255,0.8)'\r\n              style={{ marginRight: 10 }}\r\n            />\r\n            {item.cost}\r\n          </BoxButton>\r\n        )}\r\n      </FlexContainer>\r\n      {!collapsed && (\r\n        <>\r\n          {item.requirementCheck.roll.modifier !== 1 && showRequirementCheck && (\r\n            <div style={{ marginTop: 10 }}>\r\n              <CheckPreview\r\n                name='Requirement'\r\n                check={item.requirementCheck}\r\n                showCheckButton={false}\r\n                compareResult={requirementCompare}\r\n              />\r\n            </div>\r\n          )}\r\n          <FlexContainer $direction='column'>\r\n            {item.traits.map((trait) => (\r\n              <div key={trait.id} style={{ marginTop: 10 }}>\r\n                <TraitScore trait={trait} compareResult={traitCompare} />\r\n              </div>\r\n            ))}\r\n            {item.damageResistances && (\r\n              <FlexContainer\r\n                style={{\r\n                  fontFamily: 'monospace',\r\n                  flexWrap: 'wrap',\r\n                  marginTop: 15,\r\n                  justifyContent: 'space-evenly',\r\n                }}\r\n              >\r\n                {getDamageTypeKeys(item.damageResistances)\r\n                  .filter((k) => item.damageResistances[k])\r\n                  .map((key) => (\r\n                    <FlexContainer key={key}>\r\n                      <Icon\r\n                        src={IconDamageTypeMap[key]}\r\n                        size={14}\r\n                        fill={DamageTypeKeyColors[key]}\r\n                        style={{\r\n                          marginRight: 8,\r\n                        }}\r\n                      />\r\n                      <div\r\n                        style={{\r\n                          fontSize: 16,\r\n                          lineHeight: '16px',\r\n                          color: resistancesCompare(key)(...BASE_ARGS),\r\n                        }}\r\n                      >\r\n                        {getRollText(\r\n                          item.damageResistances[key] as CharacterRollT,\r\n                        ) || 0}\r\n                      </div>\r\n                    </FlexContainer>\r\n                  ))}\r\n              </FlexContainer>\r\n            )}\r\n          </FlexContainer>\r\n        </>\r\n      )}\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import { EquippableT } from './Item'\r\nimport { DamageTypeRollsT } from './Damage'\r\n\r\nexport type ArmorTypeT =\r\n  | 'helmet'\r\n  | 'cowl'\r\n  | 'chestplate'\r\n  | 'robe'\r\n  | 'gloves'\r\n  | 'ring'\r\n  | 'boots'\r\nexport interface ArmorT extends EquippableT {\r\n  type: 'armor'\r\n  armorType: ArmorTypeT\r\n  damageResistances: DamageTypeRollsT\r\n}\r\n\r\nexport const ArmorTypeSortKey: Record<ArmorTypeT, number> = {\r\n  helmet: 0,\r\n  cowl: 0,\r\n  chestplate: 1,\r\n  robe: 1,\r\n  gloves: 2,\r\n  ring: 3,\r\n  boots: 4,\r\n}\r\n","import React from 'react'\r\nimport { WeaponT, WeaponIconKeyT } from '../../types/Weapon'\r\nimport { Icon } from '../Icon'\r\nimport { IconUniqueWeaponMap, IconWeaponTypeMap } from '../../icons/maps'\r\n\r\nexport interface WeaponIconPropsT {\r\n  weapon: WeaponT\r\n  size: number\r\n  fill?: string\r\n  style?: React.CSSProperties\r\n}\r\nexport const WeaponIcon = (props: WeaponIconPropsT) => {\r\n  const { weapon, size, fill, style } = props\r\n  const src = weapon.icon\r\n    ? IconUniqueWeaponMap[weapon.icon as WeaponIconKeyT]\r\n    : IconWeaponTypeMap[weapon.weaponType]\r\n\r\n  return <Icon src={src} size={size} fill={fill} style={style} />\r\n}\r\n","import React from 'react'\r\nimport { WeaponT } from '../../types/Weapon'\r\nimport {\r\n  DamageTypeKeyT,\r\n  DamageTypeKeyColors,\r\n  DamageTypeRollsT,\r\n} from '../../types/Damage'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Icon } from '../Icon'\r\nimport { IconDamageTypeMap } from '../../icons/maps'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { getKeys } from '../../util/getKeys'\r\nimport { CompareResultFn, ZERO_COMPARE, BASE_ARGS } from '../../util/compare'\r\nimport {\r\n  CharacterRollT,\r\n  getRollText,\r\n  getRollRange,\r\n  reduceCharacterRoll,\r\n  combineCharacterRolls,\r\n} from '../../types/Roll2'\r\nimport { useCharacterContext } from '../../contexts/CharacterContext'\r\n\r\nexport interface HasDamageRollsT {\r\n  damageRolls: DamageTypeRollsT\r\n}\r\nexport interface DamageRollScoresPropsT {\r\n  parent: HasDamageRollsT\r\n  children: (\r\n    values: DamageRollScorePropsT[],\r\n    combinedRoll: CharacterRollT,\r\n  ) => any\r\n}\r\nexport const DamageRollScores = (props: DamageRollScoresPropsT) => {\r\n  const { parent, children } = props\r\n  const { character } = useCharacterContext()\r\n  const { damageRolls } = parent\r\n  const keys: DamageTypeKeyT[] = getKeys(damageRolls).filter(\r\n    (key) => damageRolls[key],\r\n  )\r\n  const rolls = keys\r\n    .map((key) => damageRolls[key])\r\n    .filter((roll) => roll) as CharacterRollT[]\r\n\r\n  const getDamageRange = (roll: CharacterRollT) => {\r\n    return getRollRange(reduceCharacterRoll(roll, character))\r\n  }\r\n\r\n  return (\r\n    <BoxContainer\r\n      style={{ whiteSpace: 'nowrap' }}\r\n      substyle={{ padding: '4px 10px', background: '#111' }}\r\n    >\r\n      {children(\r\n        keys.map((key) => ({\r\n          id: key,\r\n          key,\r\n          damageRangeText: getDamageRange(damageRolls[key] as CharacterRollT),\r\n          damageRollText: getRollText(damageRolls[key] as CharacterRollT),\r\n        })),\r\n        combineCharacterRolls(...rolls),\r\n      )}\r\n    </BoxContainer>\r\n  )\r\n}\r\n\r\nexport interface DamageRollScorePropsT {\r\n  id: DamageTypeKeyT\r\n  damageRangeText: string\r\n  damageRollText: string\r\n  compareResult?: CompareResultFn\r\n}\r\nexport const DamageRollScore = (props: DamageRollScorePropsT) => {\r\n  const {\r\n    id,\r\n    damageRangeText,\r\n    damageRollText,\r\n    compareResult = ZERO_COMPARE,\r\n  } = props\r\n  if (!damageRollText) return null\r\n  return (\r\n    <FlexContainer\r\n      key={id}\r\n      style={{\r\n        alignItems: 'flex-end',\r\n        padding: '4px 0',\r\n        height: 24,\r\n        lineHeight: '24px',\r\n      }}\r\n    >\r\n      <h3 style={{ margin: '0 8px 0 0' }}>\r\n        <span\r\n          style={{\r\n            color: compareResult(...BASE_ARGS),\r\n          }}\r\n        >\r\n          ({damageRangeText})\r\n        </span>{' '}\r\n        <span style={{ color: 'rgba(255,255,255, 0.5)' }}>\r\n          {damageRollText}\r\n        </span>\r\n      </h3>\r\n      <Icon\r\n        src={IconDamageTypeMap[id]}\r\n        size={20}\r\n        fill={DamageTypeKeyColors[id]}\r\n        style={{ marginBottom: 2 }}\r\n      />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Color from 'color'\r\nimport { useCharacterContext } from '../../contexts/CharacterContext'\r\nimport { CheckPreview } from '../CheckPreview'\r\nimport { TraitScore } from '../TraitScore'\r\nimport { WeaponT } from '../../types/Weapon'\r\nimport { DamageRollScores, DamageRollScore } from '../DamageRollScores'\r\nimport { BoxContainer, BoxButton } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { WeaponIcon } from '../WeaponIcon'\r\nimport {\r\n  combineTraits,\r\n  CharacterSkillCheckKeyT,\r\n  CharacterTraitT,\r\n} from '../../types/Character'\r\nimport { CompareResultFn, ZERO_COMPARE, BASE_ARGS } from '../../util/compare'\r\nimport { DamageTypeKeyT } from '../../types/Damage'\r\nimport { Icon } from '../Icon'\r\nimport { IconCharacterResourceMap } from '../../icons/maps'\r\nimport { FISTS } from '../../objects/fists'\r\nimport { ItemRarityColorMap } from '../../types/Item'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { getKeys } from '../../util/getKeys'\r\nimport {\r\n  getRollText,\r\n  getRollRange,\r\n  reduceCharacterRoll,\r\n} from '../../types/Roll2'\r\nimport { EventsTypeMap } from '../../types/Events'\r\n\r\nexport interface WeaponPreviewPropsT {\r\n  weapon?: WeaponT\r\n  showEquipButton?: boolean\r\n  showRequirement?: boolean\r\n  requirementCompare?: CompareResultFn\r\n  accuracyCompare?: CompareResultFn\r\n  traitCompare?: (key: CharacterSkillCheckKeyT) => CompareResultFn\r\n  damageCompare?: (key: DamageTypeKeyT) => CompareResultFn\r\n  costComare?: CompareResultFn\r\n}\r\nexport const WeaponPreview = (props: WeaponPreviewPropsT) => {\r\n  const { character, rawCharacter, onChange } = useCharacterContext()\r\n  const { unequipItem } = usePartyContext()\r\n  const { showEquipButton = true, showRequirement = true } = props\r\n  const weapon = props.weapon || character.weapon\r\n  const rarityColor = ItemRarityColorMap[weapon.rarity]\r\n  const borderColor = Color(rarityColor)\r\n    .desaturate(0.5)\r\n    .fade(0.5)\r\n    .rgb()\r\n    .string()\r\n  const requirementCompare = props.requirementCompare || ZERO_COMPARE\r\n  const accuracyCompare = props.accuracyCompare || ZERO_COMPARE\r\n  const traitCompare = props.traitCompare || ((key) => ZERO_COMPARE)\r\n  const damageCompare = props.damageCompare || ((key) => ZERO_COMPARE)\r\n  const costComare = props.costComare || ZERO_COMPARE\r\n  const trait = combineTraits(weapon.traits)\r\n  return (\r\n    <BoxContainer\r\n      style={{ width: 380 }}\r\n      substyle={{ borderColor: borderColor }}\r\n    >\r\n      <FlexContainer style={{ marginBottom: 10 }}>\r\n        <WeaponIcon weapon={weapon} size={24} fill={rarityColor} />\r\n        <h3 style={{ margin: '0 0 0 10px', flex: 1 }}>{weapon.name}</h3>\r\n        {weapon.id !== FISTS.id && showEquipButton ? (\r\n          <BoxButton\r\n            substyle={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}\r\n            onClick={() => unequipItem(rawCharacter.id, weapon.id)}\r\n          >\r\n            <Icon\r\n              src={IconCharacterResourceMap[weapon.resource]}\r\n              size={12}\r\n              fill='rgba(255,255,255,0.8)'\r\n              style={{ marginRight: 10 }}\r\n            />\r\n            {weapon.cost}\r\n          </BoxButton>\r\n        ) : (\r\n          <FlexContainer\r\n            style={{\r\n              margin: '0 0 10px 0',\r\n              fontWeight: 'bold',\r\n              fontSize: 12,\r\n              color: costComare(...BASE_ARGS),\r\n            }}\r\n          >\r\n            <Icon\r\n              src={IconCharacterResourceMap.weaponHands}\r\n              size={12}\r\n              style={{ margin: '0 8px' }}\r\n              fill={costComare('lightcoral', 'white', 'lightgreen')}\r\n            />\r\n            {weapon.cost}\r\n          </FlexContainer>\r\n        )}\r\n      </FlexContainer>\r\n\r\n      <FlexContainer style={{ marginBottom: 10 }}>\r\n        {showRequirement && (\r\n          <FullContainer>\r\n            <CheckPreview\r\n              name='Requirement'\r\n              showCheckButton={false}\r\n              check={weapon.requirementCheck}\r\n              compareResult={requirementCompare}\r\n            />\r\n          </FullContainer>\r\n        )}\r\n        <FullContainer>\r\n          <CheckPreview\r\n            name='Accuracy'\r\n            showCheckButton={false}\r\n            check={weapon.accuracyCheck}\r\n            compareResult={accuracyCompare}\r\n          />\r\n        </FullContainer>\r\n      </FlexContainer>\r\n      <div style={{ marginBottom: 10 }}>\r\n        <TraitScore trait={trait} compareResult={traitCompare} />\r\n      </div>\r\n      <div style={{ marginBottom: 10 }}>\r\n        {getKeys(weapon.events).map((key) => (\r\n          <FlexContainer key={key} style={{ alignItems: 'center' }}>\r\n            <strong\r\n              style={{\r\n                fontFamily: 'monospace',\r\n                marginRight: 10,\r\n                color: 'rgba(255,255,255,0.5)',\r\n              }}\r\n            >\r\n              {EventsTypeMap[key]}:\r\n            </strong>\r\n            <TraitScore\r\n              trait={combineTraits(weapon.events[key] as CharacterTraitT[])}\r\n            />\r\n          </FlexContainer>\r\n        ))}\r\n      </div>\r\n      <DamageRollScores parent={weapon}>\r\n        {(values, combinedRoll) => (\r\n          <>\r\n            <span\r\n              style={{\r\n                fontFamily: 'monospace',\r\n                color: 'rgba(255,255,255,0.25)',\r\n              }}\r\n            >\r\n              ({getRollRange(reduceCharacterRoll(combinedRoll, character))}){' '}\r\n              {getRollText(combinedRoll)}\r\n            </span>\r\n            {values.map((value) => (\r\n              <DamageRollScore\r\n                key={value.id}\r\n                id={value.id}\r\n                damageRangeText={value.damageRangeText}\r\n                damageRollText={value.damageRollText}\r\n                compareResult={damageCompare(value.id)}\r\n              />\r\n            ))}\r\n          </>\r\n        )}\r\n      </DamageRollScores>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React, { useState, useMemo } from 'react'\r\nimport Color from 'color'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { EquippableT, ItemRarityColorMap } from '../../types/Item'\r\nimport { ArmorIcon } from '../ArmorIcon'\r\nimport { ArmorT } from '../../types/Armor'\r\nimport { ItemPreview } from '../ItemPreview'\r\nimport Tooltip from 'react-tooltip-lite'\r\nimport { WeaponIcon } from '../WeaponIcon'\r\nimport { WeaponT } from '../../types/Weapon'\r\nimport { WeaponPreview } from '../WeaponPreview'\r\nimport { BASE_EQUIPPABLE } from '../../objects/util'\r\nimport { Hover } from '../Hover'\r\n\r\nexport interface ItemPreviewSmallPropsT {\r\n  item: EquippableT\r\n  size?: number\r\n  onClick?: (item: EquippableT) => void\r\n}\r\nexport const ItemPreviewSmall = (props: ItemPreviewSmallPropsT) => {\r\n  const { item = {} as EquippableT, size = 38, onClick } = props\r\n  const isEmpty = item.type === undefined\r\n  const rarityColor = ItemRarityColorMap[item ? item.rarity : 'common']\r\n  const borderColor = Color(rarityColor)\r\n    .desaturate(0.5)\r\n    .fade(0.5)\r\n    .rgb()\r\n    .string()\r\n\r\n  const isArmor = item.type === 'armor'\r\n  const isWeapon = item.type === 'weapon'\r\n  const icon = useMemo(() => {\r\n    if (!item) return null\r\n    if (isWeapon) {\r\n      return (\r\n        <WeaponIcon\r\n          weapon={item as WeaponT}\r\n          size={size - 16}\r\n          fill={rarityColor}\r\n        />\r\n      )\r\n    }\r\n    if (isArmor) {\r\n      return (\r\n        <ArmorIcon item={item as ArmorT} size={size - 16} fill={rarityColor} />\r\n      )\r\n    }\r\n  }, [item, isArmor, isWeapon, rarityColor])\r\n  if (!item) return null\r\n  return (\r\n    <Hover>\r\n      {({ isHovering }) => (\r\n        <Tooltip\r\n          isOpen={isHovering}\r\n          direction='bottom'\r\n          tagName='div'\r\n          padding='0'\r\n          arrow={false}\r\n          content={\r\n            item.type === 'armor' ? (\r\n              <ItemPreview\r\n                item={item}\r\n                showEquipButton={false}\r\n                showCollapseButton={false}\r\n              />\r\n            ) : (\r\n              <WeaponPreview weapon={item as WeaponT} showEquipButton={false} />\r\n            )\r\n          }\r\n        >\r\n          <BoxContainer\r\n            style={{\r\n              height: size,\r\n              width: size,\r\n              cursor: item && onClick ? 'pointer' : 'default',\r\n            }}\r\n            substyle={{\r\n              background: isEmpty ? '#111' : '#222',\r\n              boxShadow: 'inset 0 0 3px black',\r\n              border: `1px solid ${!isEmpty ? borderColor : '#555'}`,\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              padding: 0,\r\n            }}\r\n            onClick={() => onClick && onClick(item)}\r\n          >\r\n            {icon}\r\n          </BoxContainer>\r\n        </Tooltip>\r\n      )}\r\n    </Hover>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useCharacterContext } from '../../contexts/CharacterContext'\r\nimport { ItemPreview } from '../ItemPreview'\r\nimport { ArmorTypeSortKey } from '../../types/Armor'\r\nimport { ItemPreviewSmall } from '../ItemPreviewSmall'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { v4 } from 'uuid'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\n\r\nexport interface ArmorScoreListPropsT {}\r\nexport const ArmorScoreList = (props: ArmorScoreListPropsT) => {\r\n  const { character, rawCharacter } = useCharacterContext()\r\n  const { unequipItem } = usePartyContext()\r\n  const { armor } = character\r\n  const rings = armor.filter((i) => i.armorType === 'ring')\r\n  const arr = Array(10 - rings.length).fill(undefined)\r\n  return (\r\n    <div>\r\n      <FlexContainer>\r\n        {[...arr, ...rings].map((item) => (\r\n          <ItemPreviewSmall\r\n            key={item ? item.id : v4()}\r\n            item={item}\r\n            onClick={(item) => unequipItem(rawCharacter.id, item.id)}\r\n          />\r\n        ))}\r\n      </FlexContainer>\r\n      {armor\r\n        .filter((i) => i.armorType !== 'ring')\r\n        .sort(\r\n          (a, b) =>\r\n            ArmorTypeSortKey[a.armorType] - ArmorTypeSortKey[b.armorType],\r\n        )\r\n        .map((item) => (\r\n          <ItemPreview\r\n            key={item.id}\r\n            item={item}\r\n            showRequirementCheck={false}\r\n            showCollapseButton={false}\r\n          />\r\n        ))}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport Color from 'color'\r\nimport Tooltip from 'react-tooltip-lite'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\n\r\nexport interface GaugePropsT {\r\n  name?: string\r\n  color: string\r\n  height?: number\r\n  max: number\r\n  value: number\r\n  children?: React.ReactNode | React.ReactNode[]\r\n}\r\nexport const Gauge = (props: GaugePropsT) => {\r\n  const { name = '', value, max, color, height = 30, children } = props\r\n  const [hovering, setHovering] = useState(false)\r\n  const p = (value / max) * 100\r\n  const percentage = p > 100 ? 100 : p\r\n  return (\r\n    <Tooltip\r\n      isOpen={hovering}\r\n      direction='right'\r\n      tagName='div'\r\n      padding='0'\r\n      content={<BoxContainer>{`${name} (${value} / ${max})`}</BoxContainer>}\r\n    >\r\n      <BoxContainer\r\n        substyle={{\r\n          padding: 0,\r\n          background: '#555',\r\n          height: height - 2,\r\n          position: 'relative',\r\n        }}\r\n        onMouseEnter={() => setHovering(true)}\r\n        onMouseLeave={() => setHovering(false)}\r\n      >\r\n        <FlexContainer\r\n          style={{\r\n            position: 'absolute',\r\n            left: 0,\r\n            boxSizing: 'border-box',\r\n            height: height - 2,\r\n            maxWidth: `${percentage}%`,\r\n            minWidth: `${percentage}%`,\r\n            border:\r\n              percentage > 0\r\n                ? `1px solid ${Color(color).lighten(0.5)}`\r\n                : 'none',\r\n            boxShadow: 'inset 1px 1px 0px rgba(0,0,0,0.5)',\r\n            textShadow: '1px 1px 1px black',\r\n            backgroundColor: color,\r\n            color: 'white',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            transition: 'all 0.5s',\r\n          }}\r\n        ></FlexContainer>\r\n        <FullContainer\r\n          style={{\r\n            position: 'absolute',\r\n            height,\r\n            lineHeight: `${height - 2}px`,\r\n            right: 4,\r\n            top: 0,\r\n            fontFamily: 'monospace',\r\n            fontWeight: 'bold',\r\n            overflow: 'hidden',\r\n            textShadow: '0px 0px 3px black',\r\n          }}\r\n        >\r\n          {children}\r\n        </FullContainer>\r\n      </BoxContainer>\r\n    </Tooltip>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { AbilityScore } from '../AbilityScore'\r\nimport { StatScore } from '../StatScore'\r\nimport { DamageResistanceScore } from '../DamageResistanceScore'\r\nimport { WeaponPreview } from '../WeaponPreview'\r\nimport { useCharacterContext } from '../../contexts/CharacterContext'\r\n\r\nexport const CharacterInspect = () => {\r\n  const { character } = useCharacterContext()\r\n  return (\r\n    <FlexContainer>\r\n      <FlexContainer $direction='column'>\r\n        <AbilityScore id='strength' edit={false} />\r\n        <AbilityScore id='dexterity' edit={false} />\r\n        <AbilityScore id='intelligence' edit={false} />\r\n        <AbilityScore id='vigor' edit={false} />\r\n      </FlexContainer>\r\n      <FlexContainer $direction='column'>\r\n        <StatScore id='health' />\r\n        <StatScore id='focus' />\r\n        <StatScore id='will' />\r\n        <StatScore id='perception' />\r\n        <StatScore id='agility' />\r\n        <StatScore id='accuracy' />\r\n        <StatScore id='evade' />\r\n      </FlexContainer>\r\n      <FlexContainer $direction='column'>\r\n        <DamageResistanceScore id='slashing' />\r\n        <DamageResistanceScore id='piercing' />\r\n        <DamageResistanceScore id='fire' />\r\n        <DamageResistanceScore id='blood' />\r\n        <DamageResistanceScore id='light' />\r\n        <DamageResistanceScore id='dark' />\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { SkillT } from '../../types/Skill'\r\nimport { useCharacterContext } from '../../contexts/CharacterContext'\r\nimport { makeSkill } from '../../objects/makeSkill'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { CheckPreview } from '../CheckPreview'\r\nimport { getKeys } from '../../util/getKeys'\r\nimport { EventsTypeMap } from '../../types/Events'\r\nimport { TraitScore } from '../TraitScore'\r\nimport { combineTraits, CharacterTraitT } from '../../types/Character'\r\nimport { DamageRollScores, DamageRollScore } from '../DamageRollScores'\r\nimport {\r\n  getRollRange,\r\n  reduceCharacterRoll,\r\n  getRollText,\r\n} from '../../types/Roll2'\r\n\r\nexport interface SkillPreviewPropsT {\r\n  skillId: string\r\n  skill?: SkillT\r\n}\r\nexport const SkillPreview = (props: SkillPreviewPropsT) => {\r\n  const { skillId } = props\r\n  const { character } = useCharacterContext()\r\n  const skill =\r\n    props.skill || character.skills.find((s) => s.id === skillId) || makeSkill()\r\n\r\n  return (\r\n    <BoxContainer\r\n      style={{\r\n        width: 380,\r\n        background: `url(${skill.imgSrc}) no-repeat center center`,\r\n        backgroundSize: 'cover',\r\n      }}\r\n      substyle={{\r\n        background: 'rgba(0,0,0,0.8)',\r\n        borderColor: 'rgba(255,255,255,0.5)',\r\n      }}\r\n    >\r\n      <FlexContainer style={{ marginBottom: 10 }}>\r\n        <h3 style={{ margin: '0 10px 0 0', flex: 1 }}>{skill.name}</h3>\r\n      </FlexContainer>\r\n\r\n      <FlexContainer style={{ marginBottom: 10 }}>\r\n        <strong style={{ marginRight: 10 }}>Cost</strong>\r\n        <span>{skill.focusCost}</span>\r\n      </FlexContainer>\r\n      <FlexContainer style={{ marginBottom: 10 }}>\r\n        <FullContainer>\r\n          <CheckPreview\r\n            name='Requirement'\r\n            showCheckButton={false}\r\n            check={skill.requirementCheck}\r\n          />\r\n        </FullContainer>\r\n        {skill.check && (\r\n          <FullContainer>\r\n            <CheckPreview\r\n              name='Skill Check'\r\n              showCheckButton={false}\r\n              check={skill.check}\r\n            />\r\n          </FullContainer>\r\n        )}\r\n        {skill.combineWeaponDamage && (\r\n          <FullContainer>\r\n            <CheckPreview\r\n              name='Accuracy'\r\n              showCheckButton={false}\r\n              check={character.weapon.accuracyCheck}\r\n            />\r\n          </FullContainer>\r\n        )}\r\n      </FlexContainer>\r\n      {skill.targetTraits.length > 0 && (\r\n        <FlexContainer style={{ marginBottom: 10 }}>\r\n          <strong\r\n            style={{\r\n              fontFamily: 'monospace',\r\n              marginRight: 10,\r\n              color: 'rgba(255,255,255,0.5)',\r\n            }}\r\n          >\r\n            target:\r\n          </strong>\r\n          <TraitScore trait={combineTraits(skill.targetTraits)} />\r\n        </FlexContainer>\r\n      )}\r\n      {skill.sourceTraits.length > 0 && (\r\n        <FlexContainer style={{ marginBottom: 10 }}>\r\n          <strong\r\n            style={{\r\n              fontFamily: 'monospace',\r\n              marginRight: 10,\r\n              color: 'rgba(255,255,255,0.5)',\r\n            }}\r\n          >\r\n            self:\r\n          </strong>\r\n          <TraitScore trait={combineTraits(skill.sourceTraits)} />\r\n        </FlexContainer>\r\n      )}\r\n      <div style={{ marginBottom: 10 }}>\r\n        {getKeys(skill.events).map((key) => (\r\n          <FlexContainer key={key} style={{ alignItems: 'center' }}>\r\n            <strong\r\n              style={{\r\n                fontFamily: 'monospace',\r\n                marginRight: 10,\r\n                color: 'rgba(255,255,255,0.5)',\r\n              }}\r\n            >\r\n              {EventsTypeMap[key]}:\r\n            </strong>\r\n            <TraitScore\r\n              trait={combineTraits(skill.events[key] as CharacterTraitT[])}\r\n            />\r\n          </FlexContainer>\r\n        ))}\r\n      </div>\r\n      {skill.combineWeaponDamage && (\r\n        <div style={{ marginBottom: 10 }}>\r\n          {getKeys(character.weapon.events).map((key) => (\r\n            <FlexContainer key={key} style={{ alignItems: 'center' }}>\r\n              <strong\r\n                style={{\r\n                  fontFamily: 'monospace',\r\n                  marginRight: 10,\r\n                  color: 'rgba(255,255,255,0.5)',\r\n                }}\r\n              >\r\n                {EventsTypeMap[key]}:\r\n              </strong>\r\n              <TraitScore\r\n                trait={combineTraits(\r\n                  character.weapon.events[key] as CharacterTraitT[],\r\n                )}\r\n              />\r\n            </FlexContainer>\r\n          ))}\r\n        </div>\r\n      )}\r\n      {skill.combineWeaponDamage ||\r\n        (Object.keys(skill.damageRolls).length > 0 && (\r\n          <DamageRollScores\r\n            parent={skill.combineWeaponDamage ? character.weapon : skill}\r\n          >\r\n            {(values, combinedRoll) => (\r\n              <>\r\n                <span\r\n                  style={{\r\n                    fontFamily: 'monospace',\r\n                    color: 'rgba(255,255,255,0.25)',\r\n                  }}\r\n                >\r\n                  ({getRollRange(reduceCharacterRoll(combinedRoll, character))}){' '}\r\n                  {getRollText(combinedRoll)}\r\n                </span>\r\n                {values.map((value) => (\r\n                  <DamageRollScore\r\n                    key={value.id}\r\n                    id={value.id}\r\n                    damageRangeText={value.damageRangeText}\r\n                    damageRollText={value.damageRollText}\r\n                  />\r\n                ))}\r\n              </>\r\n            )}\r\n          </DamageRollScores>\r\n        ))}\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React, { CSSProperties, useState } from 'react'\r\nimport Tooltip from 'react-tooltip-lite'\r\nimport { SkillT } from '../../types/Skill'\r\nimport { BoxContainer, BoxButton } from '../../elements/box'\r\nimport { useCharacterContext } from '../../contexts/CharacterContext'\r\nimport { BASIC_ATTACK, INSPECT } from '../../objects/makeSkill'\r\nimport { SkillPreview } from '../SkillPreview'\r\nimport { Hover } from '../Hover'\r\nimport { FlexContainer } from '../../elements/flex'\r\n\r\nconst size = 34\r\nexport interface CombatCharacterSkillsPropsT {\r\n  activeSkillId?: string\r\n  skills: SkillT[]\r\n  onClick: (skillId: string) => void\r\n}\r\nexport const CombatCharacterSkills = (props: CombatCharacterSkillsPropsT) => {\r\n  const { activeSkillId = BASIC_ATTACK.id, skills, onClick } = props\r\n  const { character } = useCharacterContext()\r\n  const active = (skillId: string) => activeSkillId === skillId\r\n\r\n  return (\r\n    <FlexContainer style={{ marginBottom: 2 }}>\r\n      {skills.map((skill) => (\r\n        <CombatCharacterSkill\r\n          key={skill.id}\r\n          skill={skill}\r\n          disabled={\r\n            character.dead ||\r\n            character.stats.focus - character.focusOffset < skill.focusCost\r\n          }\r\n          onClick={() => onClick(skill.id)}\r\n          style={{\r\n            padding: 0,\r\n            height: size + 2,\r\n            maxWidth: size + 2,\r\n            margin: 0,\r\n            borderColor: 'transparent',\r\n            opacity:\r\n              character.dead ||\r\n              character.stats.focus - character.focusOffset < skill.focusCost\r\n                ? 0.2\r\n                : active(skill.id)\r\n                ? 1\r\n                : 0.7,\r\n            ...(active(skill.id) ? { borderColor: 'turquoise' } : {}),\r\n          }}\r\n        />\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface CombatCharacterSkillPropsT {\r\n  skill: SkillT\r\n  disabled: boolean\r\n  style: CSSProperties\r\n  onClick: (skillId: string) => void\r\n}\r\nexport const CombatCharacterSkill = (props: CombatCharacterSkillPropsT) => {\r\n  const { skill, disabled, style, onClick } = props\r\n  const isDefault = skill.id === BASIC_ATTACK.id || skill.id === INSPECT.id\r\n  return (\r\n    <Hover>\r\n      {({ isHovering }) => (\r\n        <Tooltip\r\n          isOpen={isHovering}\r\n          direction='down'\r\n          tagName='div'\r\n          padding='0'\r\n          arrow={false}\r\n          content={\r\n            isDefault ? (\r\n              <BoxContainer>{skill.name}</BoxContainer>\r\n            ) : (\r\n              <SkillPreview skillId={skill.id} skill={skill} />\r\n            )\r\n          }\r\n        >\r\n          <BoxContainer\r\n            onClick={() => !disabled && onClick(skill.id)}\r\n            substyle={{\r\n              borderColor: isHovering ? '#999' : '#555',\r\n              padding: '4px',\r\n              cursor: disabled ? 'default' : 'pointer',\r\n              background: disabled ? '#444' : '#111',\r\n              ...style,\r\n            }}\r\n            style={{ border: 'none' }}\r\n          >\r\n            {skill.imgSrc && (\r\n              <img\r\n                src={skill.imgSrc}\r\n                height={size}\r\n                width={size}\r\n                style={{\r\n                  height: size,\r\n                  maxWidth: size,\r\n                  boxSizing: 'border-box',\r\n                  border: '1px solid black',\r\n                }}\r\n              />\r\n            )}\r\n          </BoxContainer>\r\n        </Tooltip>\r\n      )}\r\n    </Hover>\r\n  )\r\n}\r\n","import { NpcT } from '../types/Npc'\r\nimport { v4 } from 'uuid'\r\n\r\nimport {\r\n  uniqueNamesGenerator,\r\n  Config,\r\n  names,\r\n  adjectives,\r\n  animals,\r\n  colors,\r\n} from 'unique-names-generator'\r\nimport { CharacterResourcesT, CharacterAbilitiesT } from '../types/Character'\r\nimport { DamageTypeRollsT } from '../types/Damage'\r\nimport { buildWeapon } from './builders/weapons/createWeapon'\r\nimport { getRandom } from '../util/getRandom'\r\nimport { buildArmor } from './builders/armor/createArmor'\r\nimport { makeSkill, BASIC_ATTACK } from './makeSkill'\r\nimport { makeCharacterRoll } from '../types/Roll2'\r\n\r\nconst randomNameConfig: Config = {\r\n  dictionaries: [adjectives, animals],\r\n  length: 2,\r\n  separator: ' ',\r\n}\r\n\r\nexport const makeNpc = (\r\n  abilities: Partial<CharacterAbilitiesT> = {},\r\n  damageResistances: Partial<DamageTypeRollsT> = {},\r\n  resources: Partial<CharacterResourcesT> = {},\r\n): NpcT => {\r\n  return {\r\n    id: v4(),\r\n    npc: true,\r\n    name: uniqueNamesGenerator(randomNameConfig),\r\n    power: 600,\r\n    resources: {\r\n      characterPoints: 250,\r\n      weaponHands: 2,\r\n      heads: 1,\r\n      bodies: 1,\r\n      hands: 2,\r\n      fingers: 10,\r\n      feet: 2,\r\n      ...resources,\r\n    },\r\n    abilities: {\r\n      strength: 10,\r\n      dexterity: 10,\r\n      intelligence: 10,\r\n      vigor: 10,\r\n      ...abilities,\r\n    },\r\n    damageResistances: {\r\n      slashing: makeCharacterRoll([]),\r\n      piercing: makeCharacterRoll([]),\r\n      fire: makeCharacterRoll([]),\r\n      blood: makeCharacterRoll([]),\r\n      light: makeCharacterRoll([]),\r\n      dark: makeCharacterRoll([]),\r\n      ...damageResistances,\r\n    },\r\n\r\n    weapon: buildWeapon(\r\n      getRandom([\r\n        'axe',\r\n        'greataxe',\r\n        'wand',\r\n        'staff',\r\n        'daggers',\r\n        'katana',\r\n        'sword',\r\n        'greatsword',\r\n        'flail',\r\n        'elementalGreatsword',\r\n        'elementalSword',\r\n      ]),\r\n    ),\r\n\r\n    traits: [],\r\n    skills: [BASIC_ATTACK],\r\n    equippedItems: [],\r\n    armor: [\r\n      buildArmor('cowl'),\r\n      buildArmor('chestplate'),\r\n      buildArmor('gloves'),\r\n      buildArmor('boots'),\r\n    ],\r\n\r\n    healthOffset: 0,\r\n    focusOffset: 0,\r\n    dead: false,\r\n    inspected: false,\r\n  }\r\n}\r\n","import { PartyT } from '../types/Party'\r\nimport { v4 } from 'uuid'\r\nimport { makeNpc } from './makeNpc'\r\n\r\nexport const makeParty = (id: string = v4()): PartyT => {\r\n  return {\r\n    id,\r\n    items: [],\r\n    skills: [],\r\n    mods: [],\r\n    characters: [makeNpc(), makeNpc(), makeNpc(), makeNpc(), makeNpc()].map(\r\n      (c) => ({\r\n        ...c,\r\n        partyId: id,\r\n      }),\r\n    ),\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { AttackResultT, isUser, isEnemy } from './util'\r\nimport { ProcessedCharacterT, CharacterT } from '../../types/Character'\r\nimport { BASIC_ATTACK } from '../../objects/makeSkill'\r\nimport { getKeys } from '../../util/getKeys'\r\n\r\nexport const Span = (color: string, text: string, bold: boolean = true) => (\r\n  <span style={{ color, fontWeight: bold ? 'bold' : 'normal' }}>{text}</span>\r\n)\r\nexport const NameSpan = (character: CharacterT) =>\r\n  isUser(character)\r\n    ? Span('lightgreen', character.name)\r\n    : Span('lightsalmon', character.name)\r\n\r\nexport const logResult = (\r\n  attackResult: AttackResultT,\r\n  source: ProcessedCharacterT,\r\n  target: ProcessedCharacterT,\r\n  addLine: (line: React.ReactNode) => void,\r\n) => {\r\n  if (attackResult.skill.id !== BASIC_ATTACK.id) {\r\n    addLine(\r\n      <span>\r\n        {NameSpan(source)} casts {Span('#cda5f3', attackResult.skill.name)}\r\n        {attackResult.skill.target && <span> on {NameSpan(target)}.</span>}\r\n      </span>,\r\n    )\r\n  }\r\n  if (attackResult.hitSuccess) {\r\n    if (attackResult.skill.id === BASIC_ATTACK.id) {\r\n      addLine(\r\n        <span>\r\n          {NameSpan(source)} attacks {NameSpan(target)} for{' '}\r\n          {Span('white', `${attackResult.totalDamage} damage`)}.\r\n        </span>,\r\n      )\r\n    } else {\r\n      if (attackResult.rawDamage > 0) {\r\n        addLine(\r\n          <span>\r\n            {Span('#cda5f3', attackResult.skill.name)} deals{' '}\r\n            {Span('white', `${attackResult.totalDamage} damage`)}.\r\n          </span>,\r\n        )\r\n      }\r\n      if (\r\n        attackResult.targetTraits.length > 0 ||\r\n        attackResult.sourceTraits.length > 0\r\n      ) {\r\n        LogAddedTraits(attackResult, source, target, addLine)\r\n      }\r\n    }\r\n    if (attackResult.criticalSuccess) {\r\n      addLine(<span style={{ color: 'khaki' }}>Critical hit!</span>)\r\n    }\r\n  } else {\r\n    if (attackResult.skill.id === BASIC_ATTACK.id) {\r\n      addLine(<span>{NameSpan(source)}'s attack missed.</span>)\r\n    } else {\r\n      addLine(\r\n        <span>\r\n          {Span('#cda5f3', attackResult.skill.name)}{' '}\r\n          {attackResult.skill.target ? 'missed' : 'failed'}.\r\n        </span>,\r\n      )\r\n    }\r\n  }\r\n  if (attackResult.dodgeSuccess) {\r\n    addLine(\r\n      <span>\r\n        {NameSpan(target)} dodged {NameSpan(source)}'s attack\r\n      </span>,\r\n    )\r\n  }\r\n  if (target.stats.health <= target.healthOffset + attackResult.totalDamage) {\r\n    addLine(Span('lightcoral', `${target.name} died`))\r\n  }\r\n}\r\n\r\nexport const cz = (v: number) => v !== 0\r\nexport const gv = (v: number) => (v > 0 ? 'gained' : 'lost')\r\nexport const LogAddedTraits = (\r\n  attackResult: AttackResultT,\r\n  source: ProcessedCharacterT,\r\n  target: ProcessedCharacterT,\r\n  addLine: (line: React.ReactNode) => void,\r\n) => {\r\n  attackResult.targetTraits.forEach((trait) => {\r\n    const gfo = target.focusOffset - trait.focusOffset\r\n    const focusOffset = gfo < 0 ? trait.focusOffset + gfo : trait.focusOffset\r\n    if (cz(focusOffset)) {\r\n      addLine(\r\n        <span>\r\n          {NameSpan(target)} {gv(focusOffset)} {focusOffset} FP.\r\n        </span>,\r\n      )\r\n    }\r\n    getKeys(trait.abilitiesModifiers).forEach((key) => {\r\n      if (cz(trait.abilitiesModifiers[key])) {\r\n        addLine(\r\n          <span>\r\n            {NameSpan(target)} {gv(trait.abilitiesModifiers[key])}{' '}\r\n            {trait.abilitiesModifiers[key]} {key}.{' '}\r\n            {trait.duration > 1 && `(${trait.duration - 1}`}\r\n          </span>,\r\n        )\r\n      }\r\n    })\r\n    getKeys(trait.statsModifiers).forEach((key) => {\r\n      if (cz(trait.statsModifiers[key])) {\r\n        addLine(\r\n          <span>\r\n            {NameSpan(target)} {gv(trait.statsModifiers[key])}{' '}\r\n            {trait.statsModifiers[key]} {key}.{' '}\r\n            {trait.duration > 1 && `(${trait.duration - 1})`}\r\n          </span>,\r\n        )\r\n      }\r\n    })\r\n  })\r\n  attackResult.sourceTraits.forEach((trait) => {\r\n    const gfo = source.focusOffset - trait.focusOffset\r\n    const focusOffset = gfo < 0 ? trait.focusOffset + gfo : trait.focusOffset\r\n    if (cz(focusOffset)) {\r\n      addLine(\r\n        <span>\r\n          {NameSpan(source)} {gv(focusOffset)} {focusOffset} FP.\r\n        </span>,\r\n      )\r\n    }\r\n    const gho = source.healthOffset - trait.healthOffset\r\n    const healthOffset = gho < 0 ? trait.healthOffset + gho : trait.healthOffset\r\n    if (cz(healthOffset)) {\r\n      addLine(\r\n        <span>\r\n          {NameSpan(source)} {gv(healthOffset)} {healthOffset} HP.\r\n        </span>,\r\n      )\r\n    }\r\n    getKeys(trait.abilitiesModifiers).forEach((key) => {\r\n      if (cz(trait.abilitiesModifiers[key])) {\r\n        addLine(\r\n          <span>\r\n            {NameSpan(source)} {gv(trait.abilitiesModifiers[key])}{' '}\r\n            {trait.abilitiesModifiers[key]} {key}.{' '}\r\n            {trait.duration > 1 && `(${trait.duration - 1})`}\r\n          </span>,\r\n        )\r\n      }\r\n    })\r\n    getKeys(trait.statsModifiers).forEach((key) => {\r\n      if (cz(trait.statsModifiers[key])) {\r\n        addLine(\r\n          <span>\r\n            {NameSpan(source)} {gv(trait.statsModifiers[key])}{' '}\r\n            {trait.statsModifiers[key]} {key}.{' '}\r\n            {trait.duration > 1 && `(${trait.duration - 1})`}\r\n          </span>,\r\n        )\r\n      }\r\n    })\r\n  })\r\n}\r\n","import React from 'react'\r\nimport { ProcessedPartyT, PartyT, processParty } from '../../types/Party'\r\nimport { getRandom } from '../../util/getRandom'\r\nimport {\r\n  ProcessedCharacterT,\r\n  CharacterT,\r\n  processCharacter,\r\n  combineTraits,\r\n  commitTrait,\r\n  CharacterTraitT,\r\n} from '../../types/Character'\r\nimport { RollCheckerT } from '../RollContext'\r\nimport {\r\n  rollDamage,\r\n  getDamageTypeKeys,\r\n  DamageTypeRollsT,\r\n} from '../../types/Damage'\r\nimport { noneg } from '../../util/noneg'\r\nimport { v4 } from 'uuid'\r\nimport { PC_PARTY_ID } from '../../state/parties'\r\nimport { WeaponT } from '../../types/Weapon'\r\nimport { getKeys } from '../../util/getKeys'\r\nimport { BASIC_ATTACK } from '../../objects/makeSkill'\r\nimport { NameSpan, logResult, gv } from './log'\r\nimport {\r\n  combineCharacterRolls,\r\n  ZERO_ROLL,\r\n  CharacterRollT,\r\n  CharacterCheckT,\r\n  makeCharacterCheck,\r\n  Check2ResultT,\r\n  Roll2ResultT,\r\n} from '../../types/Roll2'\r\nimport { SkillT } from '../../types/Skill'\r\nimport { EventTypeT, checkEvent } from '../../types/Events'\r\n\r\nexport interface AttackResultT {\r\n  id: string\r\n  sourceId: string\r\n  targetId: string\r\n  skill: SkillT\r\n  index: number\r\n  hitSuccess: boolean\r\n  criticalSuccess: boolean\r\n  dodgeSuccess: boolean\r\n  rawDamage: number\r\n  blockedDamage: number\r\n  totalDamage: number\r\n  targetTraits: CharacterTraitT[]\r\n  sourceTraits: CharacterTraitT[]\r\n}\r\nexport const ZERO_RESULT: AttackResultT = {\r\n  id: 'zero',\r\n  sourceId: '',\r\n  targetId: '',\r\n  skill: BASIC_ATTACK,\r\n  index: 0,\r\n  hitSuccess: false,\r\n  criticalSuccess: false,\r\n  dodgeSuccess: false,\r\n  rawDamage: 0,\r\n  blockedDamage: 0,\r\n  totalDamage: 0,\r\n  targetTraits: [],\r\n  sourceTraits: [],\r\n}\r\n\r\nexport type CombatRoundT = Record<string, AttackResultT>\r\n\r\nexport const getCombatRecordBuilder = (\r\n  characterSkills: { [characterId: string]: string | undefined },\r\n  characterTargets: { [characterId: string]: string | undefined },\r\n  checkCharacter: (\r\n    c: ProcessedCharacterT,\r\n  ) => RollCheckerT<CharacterCheckT, Check2ResultT>,\r\n  rollCharacter: (\r\n    c: ProcessedCharacterT,\r\n  ) => RollCheckerT<CharacterRollT, Roll2ResultT>,\r\n) => (\r\n  userParty: ProcessedPartyT,\r\n  enemyParty: ProcessedPartyT,\r\n  rawParties: PartyT[],\r\n): CombatRoundT => {\r\n  const characters = [...userParty.characters, ...enemyParty.characters]\r\n  let result: CombatRoundT = {}\r\n  characters\r\n    .filter((c) => !c.dead)\r\n    .sort((a, b) => b.stats.agility - a.stats.agility)\r\n    .forEach((source, index) => {\r\n      const partyA = rawParties.find((p) => p.id === source.partyId)\r\n      // this line is volitile\r\n      const partyB = rawParties.find((p) => p.id !== source.partyId)\r\n      if (!partyA || !partyB) return\r\n      const bCharacters = processParty(partyB).characters.filter((c) => !c.dead)\r\n      const target =\r\n        bCharacters.find((c) => c.id === characterTargets[source.id]) ||\r\n        getRandom(bCharacters)\r\n      if (target) {\r\n        result = {\r\n          ...result,\r\n          [source.name]: {\r\n            ...execSkill(\r\n              characterSkills,\r\n              checkCharacter,\r\n              rollCharacter,\r\n            )(target, source),\r\n            index,\r\n          },\r\n        }\r\n      }\r\n    })\r\n  return result\r\n}\r\n\r\nconst cr = (roll?: CharacterRollT): CharacterRollT =>\r\n  roll || { ...ZERO_ROLL, keys: [] }\r\nexport const getSkillDamageRolls = (\r\n  skill: SkillT,\r\n  weapon: WeaponT,\r\n): DamageTypeRollsT => {\r\n  if (skill.combineWeaponDamage) {\r\n    return {\r\n      slashing: combineCharacterRolls(\r\n        cr(skill.damageRolls.slashing),\r\n        cr(weapon.damageRolls.slashing),\r\n      ),\r\n      piercing: combineCharacterRolls(\r\n        cr(skill.damageRolls.piercing),\r\n        cr(weapon.damageRolls.piercing),\r\n      ),\r\n      fire: combineCharacterRolls(\r\n        cr(skill.damageRolls.fire),\r\n        cr(weapon.damageRolls.fire),\r\n      ),\r\n      blood: combineCharacterRolls(\r\n        cr(skill.damageRolls.blood),\r\n        cr(weapon.damageRolls.blood),\r\n      ),\r\n      light: combineCharacterRolls(\r\n        cr(skill.damageRolls.light),\r\n        cr(weapon.damageRolls.light),\r\n      ),\r\n      dark: combineCharacterRolls(\r\n        cr(skill.damageRolls.dark),\r\n        cr(weapon.damageRolls.dark),\r\n      ),\r\n    }\r\n  } else {\r\n    return skill.damageRolls\r\n  }\r\n}\r\n\r\nexport const getSkillCheck = (\r\n  skill: SkillT,\r\n  weapon: WeaponT,\r\n): CharacterCheckT => {\r\n  if (skill.combineWeaponDamage) {\r\n    return weapon.accuracyCheck\r\n  } else {\r\n    return skill.check || makeCharacterCheck([], undefined, 0, 18)\r\n  }\r\n}\r\n\r\nexport const execSkill = (\r\n  characterSkills: { [characterId: string]: string | undefined },\r\n  checkCharacter: (\r\n    c: ProcessedCharacterT,\r\n  ) => RollCheckerT<CharacterCheckT, Check2ResultT>,\r\n  rollCharacter: (\r\n    c: ProcessedCharacterT,\r\n  ) => RollCheckerT<CharacterRollT, Roll2ResultT>,\r\n) => (\r\n  target: ProcessedCharacterT,\r\n  source: ProcessedCharacterT,\r\n): AttackResultT => {\r\n  let attackResult = {\r\n    ...ZERO_RESULT,\r\n    id: v4(),\r\n    targetId: target.id,\r\n    sourceId: source.id,\r\n  }\r\n  const skill =\r\n    source.skills.find((skill) => skill.id === characterSkills[source.id]) ||\r\n    BASIC_ATTACK\r\n\r\n  attackResult.skill = skill\r\n  const { weapon } = source\r\n  const damageRolls = getSkillDamageRolls(skill, weapon)\r\n  const skillCheck = getSkillCheck(skill, weapon)\r\n  const skillCheckResult = checkCharacter(source)(skillCheck)\r\n  if (skillCheckResult.result) {\r\n    const criticalSuccess = skillCheckResult.criticalSuccess\r\n    attackResult.hitSuccess = true\r\n    attackResult.criticalSuccess = criticalSuccess\r\n    const rr = rollCharacter(source)\r\n    const damageRollsResult = rollDamage(rr)(\r\n      damageRolls,\r\n      criticalSuccess,\r\n      `${source.name} damage`,\r\n    )\r\n    attackResult.rawDamage = damageRollsResult.total\r\n    const dodgeRoll = checkCharacter(target)(\r\n      makeCharacterCheck(['evade'], undefined),\r\n    )\r\n    attackResult.dodgeSuccess = dodgeRoll.result || false\r\n    if (!dodgeRoll.result) {\r\n      const { damageResistances } = target\r\n      const damageKeys = getDamageTypeKeys(\r\n        damageRollsResult.rollResults,\r\n      ).filter((k) => damageRollsResult.rollResults[k])\r\n      damageKeys.forEach((key) => {\r\n        const damageResult = damageRollsResult.rollResults[key] as Roll2ResultT\r\n        const resistanceCheck = damageResistances[key] as CharacterRollT\r\n        const resistanceRoll = rollCharacter(source)(resistanceCheck, true)\r\n        const blockedDamage = criticalSuccess ? 0 : resistanceRoll.total\r\n        const damageTotal = damageResult.total - blockedDamage\r\n        attackResult.blockedDamage += damageResult.total > 0 ? blockedDamage : 0\r\n        attackResult.totalDamage += noneg(damageTotal)\r\n      })\r\n    }\r\n    if (skill.checkDodgeForTraits) {\r\n      if (!dodgeRoll.result) {\r\n        attackResult.targetTraits = skill.targetTraits\r\n        attackResult.sourceTraits = skill.sourceTraits\r\n      }\r\n    } else {\r\n      attackResult.targetTraits = skill.targetTraits\r\n      attackResult.sourceTraits = skill.sourceTraits\r\n    }\r\n  }\r\n\r\n  return attackResult\r\n}\r\n\r\nexport const resolveRound = (\r\n  rounds: CombatRoundT[],\r\n  rawUserParty: PartyT,\r\n  rawEnemyParty: PartyT,\r\n  addLine: (line: React.ReactNode) => void,\r\n  updateCharacter: (character: CharacterT, partyId?: string) => void,\r\n): ProcessedCharacterT[] => {\r\n  if (rounds.length === 0) return []\r\n  if (!rawUserParty || !rawEnemyParty) return []\r\n  let rawCharacters = [...rawUserParty.characters, ...rawEnemyParty.characters]\r\n  const getCharacters = () => rawCharacters.map((c) => processCharacter(c))\r\n  const localUpdate = (\r\n    id: string,\r\n    updater: (character: CharacterT) => CharacterT,\r\n  ) => {\r\n    rawCharacters = rawCharacters.map((c) => (c.id === id ? updater(c) : c))\r\n  }\r\n  const round = rounds[rounds.length - 1]\r\n  addLine(\r\n    <strong\r\n      style={{\r\n        color: 'lightblue',\r\n        fontSize: 20,\r\n        display: 'inline-block',\r\n        marginTop: 4,\r\n      }}\r\n    >{`ROUND ${rounds.length}`}</strong>,\r\n  )\r\n  Object.values(round)\r\n    .sort((a, b) => a.index - b.index)\r\n    .forEach((attackResult) => {\r\n      const characters = getCharacters()\r\n      const source = characters.find((c) => c.id === attackResult.sourceId)\r\n      const target = characters.find((c) => c.id === attackResult.targetId)\r\n      const rawSource = rawCharacters.find(\r\n        (c) => c.id === attackResult.sourceId,\r\n      )\r\n      const rawTarget = rawCharacters.find(\r\n        (c) => c.id === attackResult.targetId,\r\n      )\r\n      if (!rawSource || !source || !rawTarget || !target) return\r\n      if (!source.dead && !target.dead) {\r\n        logResult(attackResult, source, target, addLine)\r\n        const skill = attackResult.skill\r\n        const healthOffset = rawTarget.healthOffset + attackResult.totalDamage\r\n        const focusOffset = rawSource.focusOffset + skill.focusCost\r\n        const getTraitUpdates = (\r\n          c: CharacterT,\r\n          traits: CharacterTraitT[],\r\n        ): CharacterT => {\r\n          if (attackResult.hitSuccess) {\r\n            return {\r\n              ...commitTrait(c)(combineTraits(traits)),\r\n              traits: [\r\n                ...c.traits,\r\n                ...traits.map((t) => ({\r\n                  ...t,\r\n                  healthOffset: 0,\r\n                  focusOffset: 0,\r\n                })),\r\n              ],\r\n            }\r\n          }\r\n          return c\r\n        }\r\n        localUpdate(target.id, (c) => ({\r\n          ...c,\r\n          ...getTraitUpdates(c, skill.targetTraits),\r\n          inspected: skill.inspected || c.inspected,\r\n          healthOffset,\r\n        }))\r\n        localUpdate(source.id, (c) => ({\r\n          ...c,\r\n          ...getTraitUpdates(c, skill.sourceTraits),\r\n          focusOffset,\r\n        }))\r\n\r\n        if (skill.combineWeaponDamage && attackResult.hitSuccess) {\r\n          processEvent('onHit', source, rawSource, skill, addLine, localUpdate)\r\n        }\r\n        if (skill.combineWeaponDamage && attackResult.criticalSuccess) {\r\n          processEvent('onCrit', source, rawSource, skill, addLine, localUpdate)\r\n        }\r\n      }\r\n    })\r\n  rawCharacters.forEach((c) => {\r\n    const pc = processCharacter(c)\r\n    updateCharacter(\r\n      {\r\n        ...c,\r\n        traits: pc.dead\r\n          ? c.traits\r\n          : c.traits\r\n              .map((t) => ({ ...t, duration: t.duration - 1 }))\r\n              .filter((t) => t.duration !== 0),\r\n      },\r\n      c.partyId,\r\n    )\r\n  })\r\n  return rawCharacters.map((c) => processCharacter(c))\r\n}\r\n\r\nexport const processEvent = (\r\n  event: EventTypeT,\r\n  source: ProcessedCharacterT,\r\n  rawSource: CharacterT,\r\n  skill: SkillT,\r\n  addLine: (line: React.ReactNode) => void,\r\n  localUpdate: (\r\n    id: string,\r\n    updater: (character: CharacterT) => CharacterT,\r\n  ) => void,\r\n) => {\r\n  const addedTraits = checkEvent(rawSource, skill)(event)\r\n  const name =\r\n    skill.combineWeaponDamage && !skill.events[event]\r\n      ? source.weapon.name\r\n      : skill.name\r\n  if (addedTraits) {\r\n    const combinedTrait = combineTraits(addedTraits)\r\n    const gho = source.healthOffset - combinedTrait.healthOffset\r\n    const healthOffset =\r\n      gho <= 0 ? combinedTrait.healthOffset + gho : combinedTrait.healthOffset\r\n    if (healthOffset !== 0) {\r\n      addLine(\r\n        <span>\r\n          {NameSpan(source)} {gv(healthOffset)} {healthOffset} HP from {name}.\r\n        </span>,\r\n      )\r\n    }\r\n    const gfo = source.focusOffset - combinedTrait.focusOffset\r\n    const focusOffset =\r\n      gfo < 0 ? combinedTrait.focusOffset + gfo : combinedTrait.focusOffset\r\n    if (focusOffset !== 0) {\r\n      addLine(\r\n        <span>\r\n          {NameSpan(source)} {gv(focusOffset)} {focusOffset} FP from {name}.\r\n        </span>,\r\n      )\r\n    }\r\n    getKeys(combinedTrait.abilitiesModifiers).forEach((key) => {\r\n      const value = combinedTrait.abilitiesModifiers[key]\r\n      if (value !== 0) {\r\n        addLine(\r\n          <span>\r\n            {NameSpan(source)} {gv(value)} {value} {key} from {name}.\r\n          </span>,\r\n        )\r\n      }\r\n    })\r\n    localUpdate(rawSource.id, (c) => ({\r\n      ...commitTrait(c)(combinedTrait),\r\n      traits: [\r\n        ...c.traits,\r\n        ...addedTraits.map((t) => ({ ...t, healthOffset: 0 })),\r\n      ],\r\n    }))\r\n  }\r\n}\r\n\r\nexport const checkParty = (party: ProcessedPartyT) => {\r\n  return (\r\n    party &&\r\n    party.characters.filter((c) => c.healthOffset < c.stats.health).length === 0\r\n  )\r\n}\r\n\r\nexport const checkCharacterActiveSkills = (\r\n  characters: ProcessedCharacterT[],\r\n  characterSkills: { [characterId: string]: string | undefined },\r\n  setCharacterSkill: (characterId: string, skillId?: string) => void,\r\n) => {\r\n  characters.forEach((character) => {\r\n    const activeSkill =\r\n      character.skills.find((s) => s.id === characterSkills[character.id]) ||\r\n      BASIC_ATTACK\r\n    const focus = character.stats.focus - character.focusOffset\r\n    if (activeSkill.focusCost > focus) {\r\n      setCharacterSkill(character.id, BASIC_ATTACK.id)\r\n    }\r\n  })\r\n}\r\n\r\nexport const checkCharacterActiveTargets = (\r\n  characters: ProcessedCharacterT[],\r\n  characterTargets: { [characterId: string]: string | undefined },\r\n  setCharacterTarget: (characterId: string, targetId?: string) => void,\r\n) => {\r\n  characters.forEach((character) => {\r\n    const activeTarget = characters.find(\r\n      (c) => c.id === characterTargets[character.id],\r\n    )\r\n    if (activeTarget) {\r\n      if (activeTarget.dead) {\r\n        setCharacterTarget(character.id, undefined)\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport const ENEMY_PARTY_ID = v4()\r\nexport const isUser = (character: CharacterT) =>\r\n  character.partyId === PC_PARTY_ID\r\nexport const isEnemy = (character: CharacterT) =>\r\n  character.partyId === ENEMY_PARTY_ID\r\n","import React, { useContext, useState } from 'react'\r\n\r\nexport interface CombatLogContextT {\r\n  lines: React.ReactNode[]\r\n  addLine: (line: React.ReactNode) => void\r\n  clear: () => void\r\n}\r\nexport const CombatLogContext = React.createContext<CombatLogContextT>({\r\n  lines: [],\r\n  addLine: (line: React.ReactNode) => {},\r\n  clear: () => {},\r\n})\r\nexport const useCombatLogContext = () => useContext(CombatLogContext)\r\n\r\nexport interface CombatLogContextProviderPropsT {\r\n  children: React.ReactNode | React.ReactNode[]\r\n}\r\nexport const CombatLogContextProvider = (\r\n  props: CombatLogContextProviderPropsT,\r\n) => {\r\n  const { children } = props\r\n  const [lines, setLines] = useState<React.ReactNode[]>([])\r\n  const clear = () => setLines([])\r\n\r\n  return (\r\n    <CombatLogContext.Provider\r\n      value={{\r\n        lines,\r\n        addLine: (line) => setLines((log) => [...log, line]),\r\n        clear,\r\n      }}\r\n    >\r\n      {children}\r\n    </CombatLogContext.Provider>\r\n  )\r\n}\r\n","import { CSSProperties } from 'react'\r\n\r\nexport interface ModalContextStateT {\r\n  isOpen: boolean\r\n  contents: React.FC | null\r\n  callback: ((payload?: any) => void) | null\r\n  payload: any | null\r\n  blocking: boolean\r\n  style: CSSProperties\r\n}\r\nexport const initialState: ModalContextStateT = {\r\n  isOpen: false,\r\n  contents: null,\r\n  callback: null,\r\n  payload: null,\r\n  blocking: false,\r\n  style: {},\r\n}\r\n\r\nexport const OPEN = 'modalContext/OPEN'\r\nexport const CLOSE = 'modalContext/CLOSE'\r\nexport const SET_CONTENTS = 'modalContext/SET_CONTENTS'\r\nexport const SET_CALLBACK = 'modalContext/SET_CALLBACK'\r\nexport const SET_PAYLOAD = 'modalContext/SET_PAYLOAD'\r\nexport const SET_BLOCKING = 'modalContext/SET_BLOCKING'\r\nexport const SET_STYLE = 'modalContext/SET_STYLE'\r\n\r\nexport const actions = {\r\n  open: (contents?: React.FC, style?: CSSProperties, blocking?: boolean) => ({\r\n    type: OPEN,\r\n    contents,\r\n    style,\r\n    blocking,\r\n  }),\r\n  close: () => ({ type: CLOSE }),\r\n  setPayload: (payload: any) => ({ type: SET_PAYLOAD, payload }),\r\n  setContents: (contents: React.FC | null) => ({\r\n    type: SET_CONTENTS,\r\n    contents,\r\n  }),\r\n  setCallback: (callback: (() => void) | null) => ({\r\n    type: SET_CALLBACK,\r\n    callback,\r\n  }),\r\n  setBlocking: (blocking: boolean) => ({ type: SET_BLOCKING, blocking }),\r\n  setStyle: (style: CSSProperties) => ({ type: SET_STYLE, style }),\r\n}\r\n\r\nconst core: Record<\r\n  string,\r\n  (state: ModalContextStateT, action: any) => ModalContextStateT\r\n> = {\r\n  [OPEN]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    isOpen: true,\r\n    contents: action.contents ? action.contents : state.contents,\r\n    style: action.style ? action.style : state.style || {},\r\n    blocking: action.blocking || false,\r\n  }),\r\n  [CLOSE]: (state: ModalContextStateT) => ({\r\n    ...state,\r\n    isOpen: false,\r\n  }),\r\n  [SET_PAYLOAD]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    payload: action.payload,\r\n  }),\r\n  [SET_CONTENTS]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    callback: null,\r\n    payload: null,\r\n    contents: action.contents,\r\n    blocking: false,\r\n    style: {},\r\n  }),\r\n  [SET_CALLBACK]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    callback: action.callback,\r\n  }),\r\n  [SET_BLOCKING]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    blocking: action.blocking,\r\n  }),\r\n  [SET_STYLE]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    style: action.style,\r\n  }),\r\n}\r\n\r\nexport const reducer = (\r\n  state: ModalContextStateT = initialState,\r\n  action: any,\r\n) => {\r\n  const coreFunction = core[action.type]\r\n  return coreFunction ? coreFunction(state, action) : state\r\n}\r\n","import React, { useContext, useReducer, useMemo, CSSProperties } from 'react'\r\nimport Modal from 'react-modal'\r\nimport { actions, reducer, initialState, ModalContextStateT } from './reducer'\r\n\r\nconst overlayStyles = () => ({\r\n  zIndex: 700,\r\n})\r\nconst contentStyles = (styles: CSSProperties): CSSProperties => ({\r\n  width: '50vw',\r\n  maxHeight: 'calc(100vh - 128px)',\r\n  marginLeft: 'auto',\r\n  marginRight: 'auto',\r\n  ...styles,\r\n})\r\n\r\nexport interface ModalContextT {\r\n  open: (contents?: React.FC, style?: CSSProperties, blocking?: boolean) => void\r\n  close: (payload?: any) => void\r\n  setPayload: (payload: any) => void\r\n  setBlocking: (blocking: boolean) => void\r\n  setContents: (contents: React.FC) => void\r\n  setCallback: (callback: (payload?: any) => void) => void\r\n  setStyle: (style: CSSProperties) => void\r\n}\r\nconst defaultContext: ModalContextT = {\r\n  open: () => null,\r\n  close: () => null,\r\n  setBlocking: () => null,\r\n  setPayload: () => null,\r\n  setContents: () => null,\r\n  setCallback: () => null,\r\n  setStyle: () => null,\r\n}\r\nexport const ModalContext = React.createContext<ModalContextT>(defaultContext)\r\nexport const useModalContext = () => useContext(ModalContext)\r\n\r\nconst getContextValue = (\r\n  state: ModalContextStateT,\r\n  dispatch: React.Dispatch<any>,\r\n) => ({\r\n  isOpen: state.isOpen,\r\n  open: (contents?: React.FC, style?: CSSProperties, blocking?: boolean) =>\r\n    dispatch(actions.open(contents, style, blocking)),\r\n  close: (payload?: any) => {\r\n    if (state.callback) state.callback(payload || state.payload)\r\n    dispatch(actions.close())\r\n  },\r\n  setPayload: (payload: any) => dispatch(actions.setPayload(payload)),\r\n  setContents: (contents: React.FC) => dispatch(actions.setContents(contents)),\r\n  setCallback: (callback: (payload?: any) => void) =>\r\n    dispatch(actions.setCallback(callback)),\r\n  setBlocking: (blocking: boolean) => dispatch(actions.setBlocking(blocking)),\r\n  setStyle: (style: CSSProperties) => dispatch(actions.setStyle(style)),\r\n})\r\n\r\nModal.setAppElement('#root')\r\nexport interface ModalContextProviderPropsT {\r\n  children: React.ReactNode | React.ReactNode[]\r\n}\r\nexport const ModalContextProvider = (props: ModalContextProviderPropsT) => {\r\n  const { children } = props\r\n  const reducerValue = useReducer(reducer, initialState)\r\n  const [state] = reducerValue\r\n  const context = useMemo(() => getContextValue(...reducerValue), [\r\n    reducerValue,\r\n  ])\r\n\r\n  return (\r\n    <ModalContext.Provider value={context}>\r\n      {children}\r\n      <Modal\r\n        parentSelector={() =>\r\n          document.querySelector('#content-root') as HTMLElement\r\n        }\r\n        isOpen={state.isOpen}\r\n        onRequestClose={() => {\r\n          if (!state.blocking) context.close()\r\n        }}\r\n        style={{\r\n          content: {\r\n            backgroundColor: '#111',\r\n            color: 'white',\r\n            width: 400,\r\n            margin: '0 auto',\r\n            bottom: 'unset',\r\n            borderColor: '#555',\r\n          },\r\n          overlay: {\r\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n          },\r\n        }}\r\n      >\r\n        {state.contents && <state.contents />}\r\n      </Modal>\r\n    </ModalContext.Provider>\r\n  )\r\n}\r\n","import React, { useMemo, useState } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { BoxButton } from '../../elements/box'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport makeItem from '../../objects/builders/makeItem'\r\nimport { ItemPreviewSmall } from '../ItemPreviewSmall'\r\nimport { EquippableT } from '../../types/Item'\r\n\r\nexport interface CombatVictoryModalPropsT {\r\n  reset: () => void\r\n}\r\nexport const CombatVictoryModal = (props: CombatVictoryModalPropsT) => {\r\n  const { reset } = props\r\n  const { close } = useModalContext()\r\n\r\n  const [chosenItemId, setChosenItemId] = useState<string | undefined>()\r\n  const rewardChoices = useMemo(() => {\r\n    return [makeItem(), makeItem(), makeItem(), makeItem(), makeItem()]\r\n  }, [])\r\n\r\n  const onNextClick = () => {\r\n    reset()\r\n    close(rewardChoices.find((i) => i.id === chosenItemId))\r\n  }\r\n\r\n  console.log(rewardChoices)\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <h1 style={{ textAlign: 'center', marginTop: 0 }}>Victory!</h1>\r\n      <FlexContainer $direction='column' style={{ alignItems: 'center' }}>\r\n        <span>Choose a Reward</span>\r\n        <FlexContainer>\r\n          {rewardChoices.map((item) => (\r\n            <div\r\n              style={{\r\n                border: '2px solid transparent',\r\n                borderColor: chosenItemId === item.id ? 'white' : 'transparent',\r\n              }}\r\n            >\r\n              <ItemPreviewSmall\r\n                item={item}\r\n                size={60}\r\n                onClick={() => setChosenItemId(item.id)}\r\n              />\r\n            </div>\r\n          ))}\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n      <FlexContainer style={{ marginTop: 20, alignItems: 'center' }}>\r\n        <BoxButton disabled={chosenItemId === undefined} onClick={onNextClick}>\r\n          Next Battle\r\n        </BoxButton>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { BoxButton } from '../../elements/box'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { useHistory } from 'react-router'\r\n\r\nexport interface CombatLossModalPropsT {\r\n  wins: number\r\n}\r\nexport const CombatLossModal = (props: CombatLossModalPropsT) => {\r\n  const { wins } = props\r\n  const history = useHistory()\r\n  const { close } = useModalContext()\r\n\r\n  const onNextClick = () => {\r\n    close()\r\n    history.push('/characters/')\r\n  }\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <h1 style={{ textAlign: 'center', marginTop: 0 }}>You Died...</h1>\r\n      <span>But you won {wins} times.</span>\r\n      <FlexContainer>\r\n        <BoxButton onClick={onNextClick}>Back to Characters</BoxButton>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { createContext, useContext, useEffect, useState } from 'react'\r\nimport { ProcessedPartyT, PartyT } from '../../types/Party'\r\nimport { usePartyContext } from '../PartyContext'\r\nimport { makeParty } from '../../objects/makeParty'\r\nimport { v4 } from 'uuid'\r\nimport { PC_PARTY_ID } from '../../state/parties'\r\nimport { useRollContext } from '../RollContext'\r\nimport {\r\n  getCombatRecordBuilder,\r\n  CombatRoundT,\r\n  ENEMY_PARTY_ID,\r\n  checkParty,\r\n  resolveRound,\r\n  checkCharacterActiveSkills,\r\n  checkCharacterActiveTargets,\r\n} from './util'\r\nimport { useCombatLogContext } from '../CombatLogContext'\r\nimport { useInterval } from '../../hooks/useInterval'\r\nimport { useModalContext } from '../ModalContext'\r\nimport { useHistory } from 'react-router'\r\nimport { CombatVictoryModal } from '../../components/CombatVictoryModal'\r\nimport { CombatLossModal } from '../../components/CombatLossModal'\r\n\r\nexport interface CombatContextT {\r\n  rounds: any[]\r\n  userParty: ProcessedPartyT\r\n  rawUserParty: PartyT\r\n  enemyParty: ProcessedPartyT\r\n  rawEnemyParty: PartyT\r\n  parties: ProcessedPartyT[]\r\n  running: boolean\r\n  done: boolean\r\n  characterSkills: { [characterId: string]: string | undefined }\r\n  characterTargets: { [characterId: string]: string | undefined }\r\n  setCharacterSkill: (characterId: string, skillId?: string) => void\r\n  setCharacterTarget: (characterId: string, targetId?: string) => void\r\n  next: () => void\r\n  start: () => void\r\n  stop: () => void\r\n  reset: () => void\r\n}\r\nconst defaultContextValue: CombatContextT = {\r\n  rounds: [],\r\n  userParty: {\r\n    id: v4(),\r\n    characters: [],\r\n    processed: true,\r\n    items: [],\r\n    skills: [],\r\n    mods: [],\r\n  },\r\n  rawUserParty: { id: v4(), characters: [], items: [], skills: [], mods: [] },\r\n  enemyParty: {\r\n    id: v4(),\r\n    characters: [],\r\n    processed: true,\r\n    items: [],\r\n    skills: [],\r\n    mods: [],\r\n  },\r\n  rawEnemyParty: { id: v4(), characters: [], items: [], skills: [], mods: [] },\r\n  parties: [],\r\n  running: false,\r\n  done: false,\r\n  characterSkills: {},\r\n  characterTargets: {},\r\n  setCharacterSkill: (characterId, skillId) => {},\r\n  setCharacterTarget: (characterId, targetId) => {},\r\n  next: () => {},\r\n  start: () => {},\r\n  stop: () => {},\r\n  reset: () => {},\r\n}\r\nexport const CombatContext = createContext<CombatContextT>(defaultContextValue)\r\nexport const useCombatContext = () => useContext(CombatContext)\r\n\r\nexport interface CombatContextProviderPropsT {\r\n  children: React.ReactNode | React.ReactNode[]\r\n}\r\nexport const CombatContextProvider = (props: CombatContextProviderPropsT) => {\r\n  const { children } = props\r\n  const {\r\n    parties,\r\n    rawParties,\r\n    userParty,\r\n    rawUserParty,\r\n    upsertParty,\r\n    upsertCharacter,\r\n    upsertItem,\r\n  } = usePartyContext()\r\n  const { checkCharacter, rollCharacter } = useRollContext()\r\n  const { addLine, clear } = useCombatLogContext()\r\n  const [rounds, setRounds] = useState<CombatRoundT[]>([])\r\n  const [wins, setWins] = useState<number>(0)\r\n  const [characterSkills, setCharacterSkills] = useState<{\r\n    [characterId: string]: string | undefined\r\n  }>({})\r\n  const [characterTargets, setCharacterTargets] = useState<{\r\n    [characterId: string]: string | undefined\r\n  }>({})\r\n  const setCharacterSkill = (\r\n    characterId: string,\r\n    skillId: string | undefined,\r\n  ) => setCharacterSkills((skills) => ({ ...skills, [characterId]: skillId }))\r\n  const setCharacterTarget = (characterId: string, targetId?: string) =>\r\n    setCharacterTargets((targets) => ({ ...targets, [characterId]: targetId }))\r\n  const [done, setDone] = useState(false)\r\n  const rawEnemyParty = rawParties.filter((p) => p.id === ENEMY_PARTY_ID)[0]\r\n  const enemyParty = parties.filter((p) => p.id === ENEMY_PARTY_ID)[0]\r\n  const { open, setCallback } = useModalContext()\r\n  const history = useHistory()\r\n\r\n  const next = () => {\r\n    if (!enemyParty || !userParty) return\r\n    const builder = getCombatRecordBuilder(\r\n      characterSkills,\r\n      characterTargets,\r\n      checkCharacter,\r\n      rollCharacter,\r\n    )\r\n    const round = builder(userParty, enemyParty, rawParties)\r\n    setRounds((r) => [...r, round])\r\n  }\r\n\r\n  const { start, stop, running } = useInterval(next)\r\n\r\n  const reset = (log: boolean = true) => {\r\n    clear()\r\n    setDone(false)\r\n    setRounds([])\r\n    upsertParty(makeParty(ENEMY_PARTY_ID))\r\n    upsertParty({\r\n      ...rawUserParty,\r\n      characters: rawUserParty.characters.map((c) => ({\r\n        ...c,\r\n        traits: [],\r\n        partyId: PC_PARTY_ID,\r\n        //dead: false,\r\n        //healthOffset: 0,\r\n        //focusOffset: 0,\r\n      })),\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    upsertParty(makeParty(ENEMY_PARTY_ID))\r\n    upsertParty({\r\n      ...rawUserParty,\r\n      characters: rawUserParty.characters.map((c) => ({\r\n        ...c,\r\n        partyId: PC_PARTY_ID,\r\n      })),\r\n    })\r\n    return () => {\r\n      stop()\r\n      reset(false)\r\n    }\r\n  }, [])\r\n\r\n  const finish = (didWin: boolean) => {\r\n    stop()\r\n    setDone(true)\r\n    if (didWin) {\r\n      open(() => <CombatVictoryModal reset={reset} />, {}, true)\r\n      setCallback((item) => {\r\n        upsertItem(item)\r\n      })\r\n    } else {\r\n      open(() => <CombatLossModal wins={wins} />, {}, true)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (checkParty(userParty) && !done) {\r\n      setCallback(() => {\r\n        history.push('/characters')\r\n      })\r\n      finish(false)\r\n    } else {\r\n      if (checkParty(enemyParty) && !done) {\r\n        setCallback(() => {})\r\n        finish(true)\r\n        setWins((w) => w + 1)\r\n      } else {\r\n        if (running) {\r\n          start()\r\n        }\r\n      }\r\n    }\r\n  }, [userParty, enemyParty])\r\n\r\n  useEffect(() => {\r\n    if (rounds.length > 0) {\r\n      const characters = resolveRound(\r\n        rounds,\r\n        rawUserParty,\r\n        rawEnemyParty,\r\n        addLine,\r\n        upsertCharacter,\r\n      )\r\n      checkCharacterActiveSkills(characters, characterSkills, setCharacterSkill)\r\n      checkCharacterActiveTargets(\r\n        characters,\r\n        characterTargets,\r\n        setCharacterTarget,\r\n      )\r\n    }\r\n  }, [rounds])\r\n\r\n  return (\r\n    <CombatContext.Provider\r\n      value={{\r\n        rounds,\r\n        userParty,\r\n        rawUserParty,\r\n        enemyParty,\r\n        rawEnemyParty,\r\n        parties,\r\n        running,\r\n        done,\r\n        characterSkills,\r\n        characterTargets,\r\n        setCharacterSkill,\r\n        setCharacterTarget,\r\n        start,\r\n        stop,\r\n        reset,\r\n        next,\r\n      }}\r\n    >\r\n      {children}\r\n    </CombatContext.Provider>\r\n  )\r\n}\r\n","import { useRef, useState } from 'react'\r\n\r\nexport const useInterval = (\r\n  onTick: (...args: any[]) => void,\r\n  delay: number = 1000,\r\n) => {\r\n  const [running, setRunning] = useState<boolean>(false)\r\n  const ref = useRef<NodeJS.Timeout | undefined>()\r\n  const start = (...args: any[]) => {\r\n    if (ref.current === undefined) {\r\n      setRunning(true)\r\n      ref.current = setInterval(() => onTick(...args), delay)\r\n    } else {\r\n      clearInterval(ref.current)\r\n      ref.current = setInterval(() => onTick(...args), delay)\r\n    }\r\n  }\r\n  const stop = () => {\r\n    if (ref.current !== undefined) {\r\n      setRunning(false)\r\n      clearInterval(ref.current)\r\n      ref.current = undefined\r\n    }\r\n  }\r\n\r\n  return { start, stop, running }\r\n}\r\n","import React, { CSSProperties, useState } from 'react'\r\nimport Tooltip from 'react-tooltip-lite'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { BoxContainer, BoxButton } from '../../elements/box'\r\nimport Dice6 from '../../icons/svg/delapouite/dice-six-faces-six.svg'\r\nimport { Icon } from '../Icon'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useCharacterContext } from '../../contexts/CharacterContext'\r\nimport Roll from '../../assets/img/roll.png'\r\nimport { Hover } from '../Hover'\r\n\r\nconst size = 34\r\nexport interface CombatCharacterTargetsPropsT {\r\n  activeTargetId?: string\r\n  onClick: (targetId?: string) => void\r\n}\r\nexport const CombatCharacterTargets = (props: CombatCharacterTargetsPropsT) => {\r\n  const { activeTargetId, onClick } = props\r\n  const { enemyParty } = useCombatContext()\r\n  const cc = useCharacterContext()\r\n  const active = (targetId?: string) => activeTargetId === targetId\r\n  const characters = enemyParty ? enemyParty.characters : []\r\n  return (\r\n    <FlexContainer>\r\n      <BoxButton\r\n        disabled={cc.character.dead}\r\n        onClick={() => !cc.character.dead && onClick(undefined)}\r\n        style={{ border: 'none' }}\r\n        substyle={{\r\n          cursor: cc.character.dead ? 'default' : 'pointer',\r\n          background: cc.character.dead ? '#444' : '#111',\r\n          padding: 0,\r\n          height: size + 2,\r\n          width: size + 2,\r\n          boxSizing: 'border-box',\r\n          borderColor: 'transparent',\r\n          opacity: activeTargetId === undefined ? 1 : 0.5,\r\n          margin: 0,\r\n          ...(active(undefined) ? { borderColor: 'turquoise' } : {}),\r\n        }}\r\n        // style={{ marginRight: 16 }}\r\n      >\r\n        <img\r\n          alt='random'\r\n          src={Roll}\r\n          height={size}\r\n          width={size}\r\n          style={{\r\n            height: size,\r\n            width: size,\r\n            boxSizing: 'border-box',\r\n            border: '1px solid black',\r\n          }}\r\n        />\r\n      </BoxButton>\r\n      {characters.map((character) => (\r\n        <CombatCharacterTarget\r\n          key={character.id}\r\n          name={character.name}\r\n          onClick={() => onClick(character.id)}\r\n          disabled={cc.character.dead || character.dead}\r\n          style={{\r\n            padding: 0,\r\n            height: size + 2,\r\n            width: size + 2,\r\n            boxSizing: 'border-box',\r\n            margin: 0,\r\n            borderColor: 'transparent',\r\n            opacity:\r\n              cc.character.dead || character.dead\r\n                ? 0.5\r\n                : active(character.id)\r\n                ? 1\r\n                : 0.7,\r\n            ...(active(character.id) ? { borderColor: 'turquoise' } : {}),\r\n          }}\r\n        />\r\n      ))}\r\n      <FlexContainer $full />\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface CombatCharacterTargetPropsT {\r\n  name: string\r\n  disabled: boolean\r\n  style: CSSProperties\r\n  onClick: () => void\r\n}\r\nexport const CombatCharacterTarget = (props: CombatCharacterTargetPropsT) => {\r\n  const { name, disabled, style, onClick } = props\r\n  return (\r\n    <Hover>\r\n      {({ isHovering }) => (\r\n        <Tooltip\r\n          isOpen={isHovering}\r\n          direction='up'\r\n          tagName='div'\r\n          padding='0'\r\n          arrow={false}\r\n          content={<BoxContainer>{name}</BoxContainer>}\r\n        >\r\n          <BoxContainer\r\n            onClick={() => !disabled && onClick()}\r\n            disabled={disabled}\r\n            substyle={{\r\n              borderColor: isHovering ? '#999' : '#555',\r\n              padding: '4px',\r\n              cursor: disabled ? 'default' : 'pointer',\r\n              background: disabled ? '#444' : '#111',\r\n              ...style,\r\n            }}\r\n            style={{ border: 'none' }}\r\n          >\r\n            <img\r\n              alt='profile'\r\n              src={`https://picsum.photos/seed/${name}/60/60`}\r\n              style={{\r\n                height: size,\r\n                width: size,\r\n                boxSizing: 'border-box',\r\n                border: '1px solid black',\r\n              }}\r\n            />\r\n          </BoxContainer>\r\n        </Tooltip>\r\n      )}\r\n    </Hover>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport Tooltip from 'react-tooltip-lite'\r\nimport Inspect from '../../icons/svg/lorc/magnifying-glass.svg'\r\nimport WeaponHands from '../../icons/svg/delapouite/sword-brandish.svg'\r\nimport { useCharacterContext } from '../../contexts/CharacterContext'\r\nimport { BoxContainer, SmallBox, BoxButton } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Gauge } from '../Gauge'\r\nimport { CharacterInspect } from '../CharacterInspect'\r\nimport { Icon } from '../Icon'\r\nimport { ProcessedCharacterT } from '../../types/Character'\r\nimport { WeaponPreview } from '../WeaponPreview'\r\nimport Tombstone from '../../icons/svg/lorc/tombstone.svg'\r\nimport Pencil from '../../icons/svg/delapouite/pencil.svg'\r\nimport Save from '../../icons/svg/delapouite/save.svg'\r\nimport Delete from '../../icons/svg/delapouite/trash-can.svg'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { noneg } from '../../util/noneg'\r\nimport { CombatCharacterSkills } from '../CombatCharacterSkills'\r\nimport { CombatCharacterTargets } from '../CombatCharacterTargets'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { PC_PARTY_ID } from '../../state/parties'\r\n\r\nexport interface CharacterDetailsPropsT {\r\n  character?: ProcessedCharacterT\r\n  showInspect?: boolean\r\n  showWeaponInspect?: boolean\r\n  showEdit?: boolean\r\n  showSkills?: boolean\r\n}\r\nexport const CharacterDetails = (props: CharacterDetailsPropsT) => {\r\n  const {\r\n    showEdit = false,\r\n    showInspect = false,\r\n    showWeaponInspect = false,\r\n    showSkills = false,\r\n  } = props\r\n  const characterContext = useCharacterContext()\r\n  const { deleteCharacter, userParty } = usePartyContext()\r\n  const {\r\n    characterSkills,\r\n    setCharacterSkill,\r\n    characterTargets,\r\n    setCharacterTarget,\r\n  } = useCombatContext()\r\n  const { rawCharacter, onChange } = characterContext\r\n  const character = props.character || characterContext.character\r\n  const [detailsHovering, setDetailsHovering] = useState(false)\r\n  const [weaponHovering, setWeaponHovering] = useState(false)\r\n  const [isEditing, setIsEditing] = useState(false)\r\n  const [name, setName] = useState<string>(character.name)\r\n  const health = noneg(character.stats.health - character.healthOffset)\r\n  const focus = noneg(character.stats.focus - character.focusOffset)\r\n  useEffect(() => {\r\n    setName(character.name)\r\n  }, [character.name])\r\n  return (\r\n    <BoxContainer\r\n      style={{\r\n        width: 454,\r\n        transition: 'all 1s',\r\n        border: '2px solid black',\r\n      }}\r\n      substyle={{\r\n        padding: 0,\r\n      }}\r\n    >\r\n      <FlexContainer $direction='column'>\r\n        <FlexContainer\r\n          style={{\r\n            padding: 4,\r\n            background:\r\n              'linear-gradient(0deg, rgba(34,34,34,1) 0%, rgba(51,51,51,1) 100%)',\r\n          }}\r\n        >\r\n          <FlexContainer $full>\r\n            <BoxContainer\r\n              style={{\r\n                marginRight: 10,\r\n                height: 64,\r\n                width: 64,\r\n              }}\r\n              substyle={{\r\n                padding: 0,\r\n                backgroundColor: '#111',\r\n                border: 'none',\r\n              }}\r\n            >\r\n              {character.dead ? (\r\n                <FlexContainer\r\n                  style={{\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    height: 60,\r\n                  }}\r\n                >\r\n                  <Icon src={Tombstone} size={48} />\r\n                </FlexContainer>\r\n              ) : (\r\n                <img\r\n                  alt='profile'\r\n                  src={`https://picsum.photos/seed/${character.name}/60/60`}\r\n                  style={{\r\n                    height: 60,\r\n                    width: 60,\r\n                    border: '1px solid rgba(255,255,255,0.5)',\r\n                  }}\r\n                />\r\n              )}\r\n            </BoxContainer>\r\n\r\n            {isEditing ? (\r\n              <div>\r\n                <input value={name} onChange={(e) => setName(e.target.value)} />\r\n              </div>\r\n            ) : (\r\n              <FlexContainer $direction='column'>\r\n                <h2\r\n                  style={{\r\n                    margin: 0,\r\n                    textShadow: '1px 1px 1px black',\r\n                    fontSize: 18,\r\n                  }}\r\n                >\r\n                  {character.name}\r\n                </h2>\r\n                <FullContainer />\r\n                <strong\r\n                  style={{\r\n                    fontFamily: 'monospace',\r\n                    fontSize: 10,\r\n                    color: 'rgba(255,255,255,0.24)',\r\n                  }}\r\n                >\r\n                  {character.abilities.strength} {character.abilities.dexterity}{' '}\r\n                  {character.abilities.intelligence} {character.abilities.vigor}\r\n                </strong>\r\n                <strong\r\n                  style={{\r\n                    fontFamily: 'monospace',\r\n                    fontSize: 10,\r\n                    color: 'rgba(255,255,255,0.24)',\r\n                  }}\r\n                >\r\n                  {character.stats.will} {character.stats.perception}{' '}\r\n                  {character.stats.agility} {character.stats.accuracy}{' '}\r\n                  {character.stats.evade}\r\n                </strong>\r\n              </FlexContainer>\r\n            )}\r\n          </FlexContainer>\r\n          {showWeaponInspect && (\r\n            <Tooltip\r\n              isOpen={detailsHovering}\r\n              direction='right'\r\n              tagName='div'\r\n              padding='0'\r\n              arrow={false}\r\n              content={<WeaponPreview weapon={character.weapon} />}\r\n            >\r\n              <SmallBox\r\n                onMouseEnter={() => setDetailsHovering(true)}\r\n                onMouseLeave={() => setDetailsHovering(false)}\r\n              >\r\n                <Icon src={WeaponHands} size={18} />\r\n              </SmallBox>\r\n            </Tooltip>\r\n          )}\r\n          {showInspect && (\r\n            <Tooltip\r\n              isOpen={weaponHovering}\r\n              direction='right'\r\n              tagName='div'\r\n              padding='0'\r\n              arrow={false}\r\n              content={<CharacterInspect />}\r\n            >\r\n              <SmallBox\r\n                onMouseEnter={() => setWeaponHovering(true)}\r\n                onMouseLeave={() => setWeaponHovering(false)}\r\n              >\r\n                <Icon src={Inspect} size={18} />\r\n              </SmallBox>\r\n            </Tooltip>\r\n          )}\r\n          {showEdit && !isEditing && (\r\n            <BoxButton\r\n              style={{ height: 42, width: 42, margin: 0 }}\r\n              substyle={{\r\n                padding: 0,\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n              }}\r\n              onClick={() => setIsEditing((e) => !e)}\r\n            >\r\n              <Icon src={Pencil} size={18} />\r\n            </BoxButton>\r\n          )}\r\n          {isEditing && (\r\n            <>\r\n              <BoxButton\r\n                style={{ height: 42, width: 42, margin: 0 }}\r\n                substyle={{\r\n                  padding: 0,\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                }}\r\n                onClick={() => {\r\n                  onChange({ ...rawCharacter, name })\r\n                  setIsEditing((e) => !e)\r\n                }}\r\n              >\r\n                <Icon src={Save} size={18} />\r\n              </BoxButton>\r\n              <BoxButton\r\n                style={{ height: 42, width: 42, margin: 0 }}\r\n                substyle={{\r\n                  padding: 0,\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                }}\r\n                onClick={() => {\r\n                  deleteCharacter(character.id)\r\n                }}\r\n              >\r\n                <Icon src={Delete} size={18} />\r\n              </BoxButton>\r\n            </>\r\n          )}\r\n        </FlexContainer>\r\n        {showSkills && (\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{\r\n              backgroundColor: '#1a1a1a',\r\n              boxShadow: 'inset 0px 0px 15px black',\r\n              width: 'calc(100% - 16px)',\r\n              padding: '4px 8px',\r\n              borderTop: '1px solid #555',\r\n            }}\r\n          >\r\n            <span\r\n              style={{\r\n                fontFamily: 'monospace',\r\n                fontWeight: 'bold',\r\n                color: 'rgba(255,255,255,0.24)',\r\n                marginBottom: 2,\r\n              }}\r\n            >\r\n              SKILLS\r\n            </span>\r\n            <CombatCharacterSkills\r\n              activeSkillId={characterSkills[character.id]}\r\n              skills={character.skills}\r\n              onClick={(skillId) => setCharacterSkill(character.id, skillId)}\r\n            />\r\n            <span\r\n              style={{\r\n                fontFamily: 'monospace',\r\n                fontWeight: 'bold',\r\n                color: 'rgba(255,255,255,0.24)',\r\n                marginBottom: 2,\r\n                marginTop: 4,\r\n              }}\r\n            >\r\n              TARGETS\r\n            </span>\r\n            <CombatCharacterTargets\r\n              activeTargetId={characterTargets[character.id]}\r\n              onClick={(targetId) => setCharacterTarget(character.id, targetId)}\r\n            />\r\n          </FlexContainer>\r\n        )}\r\n        <Gauge\r\n          name='Health'\r\n          color='#8f4e4d'\r\n          max={character.stats.health}\r\n          value={health}\r\n          height={15}\r\n        >\r\n          {health}/{character.stats.health}\r\n        </Gauge>\r\n        <Gauge\r\n          name='Focus'\r\n          color='#517e4e'\r\n          max={character.stats.focus}\r\n          value={focus}\r\n          height={15}\r\n        >\r\n          {focus}/{character.stats.focus}\r\n        </Gauge>\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\n\r\nexport interface UIContextT {\r\n  logKey: string | undefined\r\n  sidebarKey: string | undefined\r\n\r\n  setLogKey: (key?: string) => void\r\n  setSidebarKey: (key?: string) => void\r\n}\r\nconst defaultValue: UIContextT = {\r\n  logKey: undefined,\r\n  sidebarKey: undefined,\r\n  setLogKey: () => {},\r\n  setSidebarKey: () => {},\r\n}\r\nexport const UIContext = React.createContext<UIContextT>(defaultValue)\r\nexport const useUIContext = () => useContext(UIContext)\r\n\r\nexport interface UIContextProviderPropsT {\r\n  children: React.ReactNode | React.ReactNode[]\r\n}\r\nexport const UIContextProvider = (props: UIContextProviderPropsT) => {\r\n  const { children } = props\r\n  const [logKey, setLogKey] = useState<string | undefined>()\r\n  const [sidebarKey, setSidebarKey] = useState<string | undefined>()\r\n\r\n  return (\r\n    <UIContext.Provider\r\n      value={{\r\n        logKey,\r\n        sidebarKey,\r\n        setLogKey,\r\n        setSidebarKey,\r\n      }}\r\n    >\r\n      {children}\r\n    </UIContext.Provider>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport Tooltip from 'react-tooltip-lite'\r\nimport { SkillT } from '../../types/Skill'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { SkillPreview } from '../SkillPreview'\r\nimport { Hover } from '../Hover'\r\n\r\nconst size = 60\r\nexport interface SkillPreviewAltPropsT {\r\n  skill: SkillT\r\n}\r\nexport const SkillPreviewAlt = (props: SkillPreviewAltPropsT) => {\r\n  const { skill } = props\r\n\r\n  return (\r\n    <BoxContainer\r\n      style={{\r\n        height: size + 4,\r\n        width: size + 4,\r\n      }}\r\n      substyle={{ padding: 0 }}\r\n    >\r\n      <Hover>\r\n        {({ isHovering }) => (\r\n          <Tooltip\r\n            isOpen={isHovering}\r\n            direction='down'\r\n            tagName='div'\r\n            padding='0'\r\n            arrow={false}\r\n            content={<SkillPreview skillId={skill.id} skill={skill} />}\r\n          >\r\n            <img src={skill.imgSrc} height={size} width={size} />\r\n          </Tooltip>\r\n        )}\r\n      </Hover>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React, { useMemo, useEffect } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { ResourceScore } from '../../components/ResourceScore'\r\nimport { AbilityScore } from '../../components/AbilityScore'\r\nimport { StatScore } from '../../components/StatScore'\r\nimport { DamageResistanceScore } from '../../components/DamageResistanceScore'\r\nimport { ArmorScoreList } from '../../components/ArmorScoreList'\r\nimport { ItemPreview } from '../../components/ItemPreview'\r\nimport { WeaponPreview } from '../../components/WeaponPreview'\r\nimport { CharacterDetails } from '../../components/CharacterDetails'\r\nimport { CharacterStateContextProvider } from '../../contexts/CharacterContext'\r\nimport { RollStateContextProvider } from '../../contexts/RollContext'\r\nimport { useParams, useHistory } from 'react-router'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { SkillPreviewAlt } from '../../components/SkillPreviewAlt'\r\nimport { BASIC_ATTACK, INSPECT } from '../../objects/makeSkill'\r\nimport { BoxContainer } from '../../elements/box'\r\n\r\nexport const Character = () => {\r\n  const { id } = useParams()\r\n  const history = useHistory()\r\n  const { rawUserParty, setActiveCharacterId } = usePartyContext()\r\n  const { setLogKey, setSidebarKey } = useUIContext()\r\n  const character = useMemo(() => {\r\n    return rawUserParty.characters.find((c) => c.id === id)\r\n  }, [id, rawUserParty])\r\n  useEffect(() => {\r\n    if (!character) {\r\n      history.push(`/characters/${rawUserParty.characters[0].id}`)\r\n    } else {\r\n      setActiveCharacterId(character.id)\r\n    }\r\n  }, [id])\r\n\r\n  useEffect(() => {\r\n    setLogKey('items')\r\n    return () => {\r\n      setLogKey(undefined)\r\n      setActiveCharacterId(null)\r\n    }\r\n  }, [])\r\n\r\n  if (!character) return null\r\n  return (\r\n    <CharacterStateContextProvider>\r\n      <RollStateContextProvider>\r\n        <FlexContainer style={{ margin: 10, flex: 1 }}>\r\n          <FlexContainer $direction='column' style={{ marginRight: 10 }}>\r\n            <CharacterDetails showEdit={true} />\r\n            <FlexContainer>\r\n              <div>\r\n                <ResourceScore id='characterPoints' />\r\n                <ResourceScore id='weaponHands' />\r\n                <ResourceScore id='heads' />\r\n                <ResourceScore id='bodies' />\r\n                <ResourceScore id='hands' />\r\n                <ResourceScore id='fingers' />\r\n                <ResourceScore id='feet' />\r\n              </div>\r\n              <div>\r\n                <AbilityScore id='strength' />\r\n                <AbilityScore id='dexterity' />\r\n                <AbilityScore id='intelligence' />\r\n                <AbilityScore id='vigor' />\r\n              </div>\r\n              <div>\r\n                <StatScore id='health' />\r\n                <StatScore id='focus' />\r\n                <StatScore id='will' />\r\n                <StatScore id='perception' />\r\n                <StatScore id='agility' />\r\n                <StatScore id='accuracy' />\r\n                <StatScore id='evade' />\r\n              </div>\r\n              <div>\r\n                <DamageResistanceScore id='slashing' />\r\n                <DamageResistanceScore id='piercing' />\r\n                <DamageResistanceScore id='fire' />\r\n                <DamageResistanceScore id='blood' />\r\n                <DamageResistanceScore id='light' />\r\n                <DamageResistanceScore id='dark' />\r\n              </div>\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n          <FlexContainer>\r\n            <div>\r\n              <WeaponPreview showEquipButton={true} showRequirement={false} />\r\n              {character.equippedItems.map((item) => (\r\n                <ItemPreview\r\n                  key={item.id}\r\n                  item={item}\r\n                  showRequirementCheck={false}\r\n                  showCollapseButton={false}\r\n                />\r\n              ))}\r\n              <BoxContainer\r\n                substyle={{\r\n                  width: 320,\r\n                  // padding: 28,\r\n                }}\r\n              >\r\n                <span\r\n                  style={{\r\n                    fontFamily: 'monospace',\r\n                    fontWeight: 'bold',\r\n                    color: 'rgba(255,255,255,0.24)',\r\n                    marginBottom: 2,\r\n                  }}\r\n                >\r\n                  SKILLS\r\n                </span>\r\n                <FlexContainer style={{ flexWrap: 'wrap' }}>\r\n                  {character.skills\r\n                    .filter(\r\n                      (s) => s.id !== BASIC_ATTACK.id && s.id !== INSPECT.id,\r\n                    )\r\n                    .map((skill) => (\r\n                      <div style={{ padding: 3.5 }}>\r\n                        <SkillPreviewAlt key={skill.id} skill={skill} />\r\n                      </div>\r\n                    ))}\r\n                </FlexContainer>\r\n              </BoxContainer>\r\n            </div>\r\n            <ArmorScoreList />\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n      </RollStateContextProvider>\r\n    </CharacterStateContextProvider>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { CharacterKeyMap3 } from '../../types/Character'\r\nimport { getSign } from '../../util/getSign'\r\nimport { getValueString } from '../../util/getValueString'\r\nimport { Roll2T, Check2T, Roll2ResultT, Check2ResultT } from '../../types/Roll2'\r\nimport { Span } from '../../contexts/CombatContext/log'\r\n\r\nexport const RollResult = (props: any) => {\r\n  const roll: Roll2ResultT | Check2ResultT = props.roll\r\n  const check = roll as Check2ResultT\r\n  const isCheck = check.goal !== undefined\r\n  const result = isCheck ? check.result : undefined\r\n  return (\r\n    <div style={{ fontFamily: 'monospace' }}>\r\n      {isCheck && result && Span('lightgreen', '[PASSED] ')}\r\n      {isCheck && !result && Span('lightcoral', '[FAILED] ')}\r\n      {!isCheck && Span('turquoise', '[STATIC] ')}\r\n      {isCheck && <span>({check.goal}) </span>}\r\n      <span>{roll.output}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst RollDescription = (props: any) => {\r\n  const keys: any[] = props.keys\r\n  const modifier = props.modifier\r\n  const goal = props.goal\r\n  const rollStr = props.rollStr\r\n  const percentage = props.percentage\r\n  const rollText = goal === null ? `${rollStr}+` : ''\r\n  const keyText = keys.reduce((str, key, i) => `${str}${getSign(i)}${key}`, '')\r\n  const modifierText = getSign(modifier) + getValueString(modifier)\r\n  const percentageStr =\r\n    goal === null\r\n      ? ''\r\n      : `: ${percentage === 100 ? ' ~' : ''}${percentage.toFixed(\r\n          percentage === 100 ? 0 : percentage >= 10 ? 1 : 2,\r\n        )}%`\r\n  return <>{`(${rollText}${keyText}${modifierText}${percentageStr})`}</>\r\n}\r\n\r\nconst RollStatus = (props: any) => {\r\n  const { result } = props\r\n  return (\r\n    <>\r\n      {'['}\r\n      <span style={{ color: getColor(result) }}>{getText(result)}</span>\r\n      {'] '}\r\n    </>\r\n  )\r\n}\r\n\r\nconst getColor = (result: boolean | null) => {\r\n  switch (result) {\r\n    case true:\r\n      return 'lightgreen'\r\n    case false:\r\n      return 'lightcoral'\r\n    default:\r\n      return '#4bebc6'\r\n  }\r\n}\r\nconst getText = (result: boolean | null) => {\r\n  switch (result) {\r\n    case true:\r\n      return 'PASSED'\r\n    case false:\r\n      return 'FAILED'\r\n    default:\r\n      return 'STATIC'\r\n  }\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { useRollContext } from '../RollContext'\r\nimport { getCompareFn, CompareResultFn, ZERO_COMPARE } from '../../util/compare'\r\nimport { CharacterRollT, CharacterCheckT } from '../../types/Roll2'\r\n\r\nexport type CompareKeyT = 'a' | 'b'\r\nexport interface CompareContextT<T> extends Record<CompareKeyT, T> {\r\n  compareChecks: (\r\n    checkA: CharacterCheckT,\r\n    checkB: CharacterCheckT,\r\n  ) => CompareResultFn\r\n  compareRolls: (\r\n    rollA: CharacterRollT,\r\n    rollB: CharacterRollT,\r\n  ) => CompareResultFn\r\n  compareValues: (valueA: number, valueB: number) => CompareResultFn\r\n}\r\nexport const CompareContext = React.createContext<CompareContextT<any>>({\r\n  a: null,\r\n  b: null,\r\n  compareChecks: (checkA: CharacterCheckT, checkB: CharacterCheckT) =>\r\n    ZERO_COMPARE,\r\n  compareRolls: (rollA: CharacterRollT, rollB: CharacterRollT) => ZERO_COMPARE,\r\n  compareValues: (valueA: number, valueB: number) => ZERO_COMPARE,\r\n})\r\n\r\nexport function useCompareContext<T>(): CompareContextT<T> {\r\n  return useContext(CompareContext)\r\n}\r\n\r\nexport interface CompareContextProviderProps<T> extends Record<CompareKeyT, T> {\r\n  children: React.ReactNode | React.ReactNode[]\r\n}\r\nexport function CompareContextProvider<T>(\r\n  props: CompareContextProviderProps<T>,\r\n) {\r\n  const { a, b, children } = props\r\n  const { execRoll, getProbability } = useRollContext()\r\n  const compareChecks = (checkA: CharacterCheckT, checkB: CharacterCheckT) => {\r\n    const a = getProbability(checkA)\r\n    const b = getProbability(checkB)\r\n    return getCompareFn(a, b)\r\n  }\r\n  const compareRolls = (rollA: CharacterRollT, rollB: CharacterRollT) => {\r\n    const a = execRoll(rollA, false).averageTotal as number\r\n    const b = execRoll(rollB, false).averageTotal as number\r\n    return getCompareFn(a, b < 0 ? 0 : b)\r\n  }\r\n  const compareValues = (valueA: number, valueB: number) =>\r\n    getCompareFn(valueA, valueB)\r\n  return (\r\n    <CompareContext.Provider\r\n      value={{ a, b, compareChecks, compareRolls, compareValues }}\r\n    >\r\n      {children}\r\n    </CompareContext.Provider>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { WeaponT } from '../../types/Weapon'\r\nimport { useCharacterContext } from '../../contexts/CharacterContext'\r\nimport { ONE_COMPARE } from '../../util/compare'\r\nimport { DamageTypeKeyT } from '../../types/Damage'\r\nimport {\r\n  CharacterSkillCheckKeyT,\r\n  combineTraits,\r\n  getTraitValue,\r\n} from '../../types/Character'\r\nimport {\r\n  CompareContextProvider,\r\n  useCompareContext,\r\n} from '../../contexts/CompareContext'\r\nimport { WeaponPreview } from '../WeaponPreview'\r\nimport { FISTS } from '../../objects/fists'\r\nimport { CharacterRollT } from '../../types/Roll2'\r\n\r\nexport interface EquipedWeaponComparePropsT {\r\n  weapon: WeaponT\r\n}\r\nexport const EquipedWeaponCompare = (props: EquipedWeaponComparePropsT) => {\r\n  const { weapon } = props\r\n  const { character } = useCharacterContext()\r\n  return (\r\n    <CompareContextProvider<WeaponT> a={weapon} b={character.weapon}>\r\n      <WeaponCompareItem />\r\n    </CompareContextProvider>\r\n  )\r\n}\r\n\r\nexport interface WeaponCompareItemPropsT {}\r\nexport const WeaponCompareItem = (props: WeaponCompareItemPropsT) => {\r\n  const context = useCompareContext<WeaponT>()\r\n  const { compareChecks, compareRolls, compareValues } = context\r\n  const a: WeaponT = context['a'] || FISTS\r\n  const b: WeaponT = context['b'] || FISTS\r\n\r\n  const requirementCompare = compareChecks(\r\n    a.requirementCheck,\r\n    b.requirementCheck,\r\n  )\r\n  const accuracyCompare = compareChecks(a.accuracyCheck, b.accuracyCheck)\r\n  const damageCompare = (key: DamageTypeKeyT) => {\r\n    const weaponRoll = a.damageRolls[key] as CharacterRollT\r\n    const testRoll = b.damageRolls[key] as CharacterRollT\r\n    if (!testRoll) return ONE_COMPARE\r\n    return compareRolls(weaponRoll, testRoll)\r\n  }\r\n  const traitCompare = (key: CharacterSkillCheckKeyT) => {\r\n    const weaponValue = getTraitValue(combineTraits(a.traits), key)\r\n    const testValue = getTraitValue(combineTraits(b.traits), key)\r\n    return compareValues(weaponValue, testValue)\r\n  }\r\n  const costComapre = compareValues(b.cost, a.cost)\r\n\r\n  return (\r\n    <WeaponPreview\r\n      weapon={a}\r\n      showEquipButton={false}\r\n      requirementCompare={requirementCompare}\r\n      accuracyCompare={accuracyCompare}\r\n      damageCompare={damageCompare}\r\n      traitCompare={traitCompare}\r\n      costComare={costComapre}\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useCharacterContext } from '../../contexts/CharacterContext'\r\nimport { ONE_COMPARE } from '../../util/compare'\r\nimport { DamageTypeKeyT } from '../../types/Damage'\r\nimport {\r\n  CharacterSkillCheckKeyT,\r\n  combineTraits,\r\n  getTraitValue,\r\n} from '../../types/Character'\r\nimport {\r\n  CompareContextProvider,\r\n  useCompareContext,\r\n} from '../../contexts/CompareContext'\r\nimport { EquippableT } from '../../types/Item'\r\nimport { BASE_EQUIPPABLE } from '../../objects/util'\r\nimport { ItemPreview } from '../ItemPreview'\r\nimport { ArmorT } from '../../types/Armor'\r\nimport { CharacterRollT } from '../../types/Roll2'\r\n\r\nexport interface EquipedItemComparePropsT {\r\n  item: EquippableT\r\n}\r\nexport const EquipeItemCompare = (props: EquipedItemComparePropsT) => {\r\n  const { item } = props\r\n  const { character } = useCharacterContext()\r\n  if ((item as ArmorT).armorType === 'ring')\r\n    return (\r\n      <ItemPreview\r\n        item={item}\r\n        showEquipButton={false}\r\n        showRequirementCheck={true}\r\n        showCollapseButton={false}\r\n      />\r\n    )\r\n  const testItem = [...character.armor, ...character.equippedItems].find(\r\n    (i) => {\r\n      if (item.type === 'armor') {\r\n        return i.type === 'armor' && i.resource === item.resource\r\n      } else {\r\n        return i.type !== 'armor' && i.resource === item.resource\r\n      }\r\n    },\r\n  )\r\n  return (\r\n    <CompareContextProvider<EquippableT>\r\n      a={item}\r\n      b={testItem || BASE_EQUIPPABLE('armor')}\r\n    >\r\n      <ItemCompareItem />\r\n    </CompareContextProvider>\r\n  )\r\n}\r\n\r\nexport interface ItemCompareItemPropsT {}\r\nexport const ItemCompareItem = (props: ItemCompareItemPropsT) => {\r\n  const context = useCompareContext<EquippableT>()\r\n  const { compareChecks, compareRolls, compareValues } = context\r\n  const a: EquippableT = context['a'] || BASE_EQUIPPABLE('armor')\r\n  const b: EquippableT = context['b'] || BASE_EQUIPPABLE('armor')\r\n\r\n  const requirementCompare = compareChecks(\r\n    a.requirementCheck,\r\n    b.requirementCheck,\r\n  )\r\n  const resistancesCompare = (key: DamageTypeKeyT) => {\r\n    const itemRoll = a.damageResistances[key] as CharacterRollT\r\n    const testRoll = b.damageResistances[key] as CharacterRollT\r\n    if (!testRoll) return ONE_COMPARE\r\n    return compareRolls(itemRoll, testRoll)\r\n  }\r\n  const traitCompare = (key: CharacterSkillCheckKeyT) => {\r\n    const itemValue = getTraitValue(combineTraits(a.traits), key)\r\n    const testValue = getTraitValue(combineTraits(b.traits), key)\r\n    return compareValues(itemValue, testValue)\r\n  }\r\n  const costComapre = compareValues(b.cost, a.cost)\r\n\r\n  return (\r\n    <ItemPreview\r\n      item={a}\r\n      showEquipButton={false}\r\n      requirementCompare={requirementCompare}\r\n      resistancesCompare={resistancesCompare}\r\n      traitCompare={traitCompare}\r\n      costComare={costComapre}\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Color from 'color'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { ItemRarityT, ItemRarityColorMap, ItemTypeT } from '../../types/Item'\r\nimport { FlexContainer } from '../../elements/flex'\r\n\r\nexport interface CharacterItemFilters {\r\n  onClick: (rarity?: ItemRarityT, type?: ItemTypeT) => void\r\n}\r\nexport const CharacterItemFilters = (props: CharacterItemFilters) => {\r\n  const { onClick } = props\r\n  return (\r\n    <FlexContainer>\r\n      <CharacterItemFilterButton rarity='common' onClick={onClick} />\r\n      <CharacterItemFilterButton rarity='uncommon' onClick={onClick} />\r\n      <CharacterItemFilterButton rarity='rare' onClick={onClick} />\r\n      <CharacterItemFilterButton rarity='legendary' onClick={onClick} />\r\n      <CharacterItemFilterButton rarity='unique' onClick={onClick} />\r\n      <CharacterItemFilterButton rarity='mythic' onClick={onClick} />\r\n      <CharacterItemFilterButton rarity='set' onClick={onClick} />\r\n      <CharacterItemFilterButton type='weapon' onClick={onClick}>\r\n        W\r\n      </CharacterItemFilterButton>\r\n      <CharacterItemFilterButton type='armor' onClick={onClick}>\r\n        A\r\n      </CharacterItemFilterButton>\r\n      <CharacterItemFilterButton onClick={onClick}>R</CharacterItemFilterButton>\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface CharacterItemFilterButtonPropsT {\r\n  rarity?: ItemRarityT\r\n  type?: ItemTypeT\r\n  children?: React.ReactNode | React.ReactNode[]\r\n  onClick: (rarity?: ItemRarityT, type?: ItemTypeT) => void\r\n}\r\nexport const CharacterItemFilterButton = (\r\n  props: CharacterItemFilterButtonPropsT,\r\n) => {\r\n  const { rarity, type, children, onClick } = props\r\n  const backgroundColor = rarity\r\n    ? Color(ItemRarityColorMap[rarity]).fade(0.75).hsl().toString()\r\n    : '#222'\r\n  const borderColor = rarity\r\n    ? Color(ItemRarityColorMap[rarity]).fade(0.5).hsl().toString()\r\n    : '#555'\r\n  return (\r\n    <BoxContainer\r\n      tag='button'\r\n      style={{ width: 40, height: 40 }}\r\n      substyle={{\r\n        background: backgroundColor,\r\n        cursor: 'pointer',\r\n        borderColor: borderColor,\r\n        boxShadow: 'inset 0 0 3px black',\r\n        display: 'flex',\r\n        padding: 0,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        margin: 0,\r\n      }}\r\n      onClick={() => onClick(rarity, type)}\r\n    >\r\n      {children}\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React, { useMemo, useState } from 'react'\r\nimport Color from 'color'\r\nimport { useCharacterContext } from '../../contexts/CharacterContext'\r\nimport {\r\n  ItemT,\r\n  EquippableT,\r\n  ItemRarityColorMap,\r\n  ItemTypeT,\r\n  ItemRarityT,\r\n} from '../../types/Item'\r\nimport { CharacterT, canEquip } from '../../types/Character'\r\nimport { WeaponIcon } from '../WeaponIcon'\r\nimport { WeaponT } from '../../types/Weapon'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport Tooltip from 'react-tooltip-lite'\r\nimport { ArmorIcon } from '../ArmorIcon'\r\nimport { ArmorT } from '../../types/Armor'\r\nimport { EquipedWeaponCompare } from '../WeaponCompare'\r\nimport { ItemIcon } from '../ItemIcon'\r\nimport { EquipeItemCompare } from '../ItemCompare'\r\nimport { CharacterItemFilters } from '../CharacterItemFilters'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\n\r\nexport const CharacterItems = () => {\r\n  const { rawCharacter } = useCharacterContext()\r\n  const { userParty, equipItem } = usePartyContext()\r\n  const [itemType, setItemType] = useState<ItemTypeT | undefined>()\r\n  const [itemRarity, setItemRarity] = useState<ItemRarityT | undefined>()\r\n\r\n  const filter = (i: EquippableT) => {\r\n    if (itemType) return i.type === itemType\r\n    if (itemRarity) return i.rarity === itemRarity\r\n    return true\r\n  }\r\n\r\n  const other = userParty.items\r\n    .filter((i) => i.type !== 'armor' && i.type !== 'weapon')\r\n    .filter(filter)\r\n  const weapons = userParty.items\r\n    .filter((i) => i.type === 'weapon')\r\n    .filter(filter)\r\n  const armors = userParty.items\r\n    .filter((i) => i.type === 'armor')\r\n    .filter(filter)\r\n  return (\r\n    <FlexContainer style={{}} $direction='column'>\r\n      <CharacterItemFilters\r\n        onClick={(r, t) => {\r\n          if (r) setItemRarity(r)\r\n          if (t) setItemType(t)\r\n          if (!r && !t) {\r\n            setItemRarity(undefined)\r\n            setItemType(undefined)\r\n          }\r\n        }}\r\n      />\r\n      <div style={{ marginTop: 10 }}>\r\n        {weapons.length > 0 && (\r\n          <span\r\n            style={{\r\n              fontFamily: 'monospace',\r\n              fontWeight: 'bold',\r\n              color: 'rgba(255,255,255,0.24)',\r\n              marginBottom: 2,\r\n            }}\r\n          >\r\n            WEAPONS\r\n          </span>\r\n        )}\r\n        <FlexContainer\r\n          style={{\r\n            flexWrap: 'wrap',\r\n            width: 400,\r\n          }}\r\n        >\r\n          {weapons.map((item) => (\r\n            <Item\r\n              key={item.id}\r\n              item={item}\r\n              rawCharacter={rawCharacter}\r\n              onEquip={(id) => equipItem(rawCharacter.id, id)}\r\n            />\r\n          ))}\r\n        </FlexContainer>\r\n        {armors.length > 0 && (\r\n          <span\r\n            style={{\r\n              fontFamily: 'monospace',\r\n              fontWeight: 'bold',\r\n              color: 'rgba(255,255,255,0.24)',\r\n              marginBottom: 2,\r\n            }}\r\n          >\r\n            ARMOR\r\n          </span>\r\n        )}\r\n        <FlexContainer\r\n          style={{\r\n            flexWrap: 'wrap',\r\n            width: 400,\r\n          }}\r\n        >\r\n          {armors.map((item) => (\r\n            <Item\r\n              key={item.id}\r\n              item={item}\r\n              rawCharacter={rawCharacter}\r\n              onEquip={(id) => equipItem(rawCharacter.id, id)}\r\n            />\r\n          ))}\r\n        </FlexContainer>\r\n        {other.length > 0 && (\r\n          <span\r\n            style={{\r\n              fontFamily: 'monospace',\r\n              fontWeight: 'bold',\r\n              color: 'rgba(255,255,255,0.24)',\r\n              marginBottom: 2,\r\n            }}\r\n          >\r\n            OTHER\r\n          </span>\r\n        )}\r\n        <FlexContainer\r\n          style={{\r\n            flexWrap: 'wrap',\r\n            width: 400,\r\n          }}\r\n        >\r\n          {other.map((item) => (\r\n            <Item\r\n              key={item.id}\r\n              item={item}\r\n              rawCharacter={rawCharacter}\r\n              onEquip={(id) => equipItem(rawCharacter.id, id)}\r\n            />\r\n          ))}\r\n        </FlexContainer>\r\n      </div>\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface ItemPropsT {\r\n  item: ItemT\r\n  rawCharacter: CharacterT\r\n  onEquip: (itemId: string) => void\r\n}\r\nconst Item = (props: ItemPropsT) => {\r\n  const { item, rawCharacter, onEquip } = props\r\n  const [isHovering, setIsHovering] = useState(false)\r\n  const type = (item as EquippableT).type\r\n  const isEquipable = (item as EquippableT).equippable\r\n  const isArmor = type === 'armor'\r\n  const isWeapon = type === 'weapon'\r\n  const canEquipItem = useMemo(\r\n    () => canEquip(rawCharacter)(item as EquippableT, !isWeapon),\r\n    [item, rawCharacter, isWeapon],\r\n  )\r\n  const iconSize = 18\r\n  const rarityColor = ItemRarityColorMap[item.rarity]\r\n  const icon = useMemo(() => {\r\n    if (isWeapon) {\r\n      return (\r\n        <WeaponIcon\r\n          weapon={item as WeaponT}\r\n          size={iconSize}\r\n          fill={rarityColor}\r\n        />\r\n      )\r\n    }\r\n    if (isArmor) {\r\n      return (\r\n        <ArmorIcon item={item as ArmorT} size={iconSize} fill={rarityColor} />\r\n      )\r\n    }\r\n    if (isEquipable) {\r\n      return (\r\n        <ItemIcon\r\n          item={item as EquippableT}\r\n          size={iconSize}\r\n          fill={rarityColor}\r\n        />\r\n      )\r\n    }\r\n  }, [item, isArmor, isEquipable, isWeapon, rarityColor])\r\n\r\n  return (\r\n    <div\r\n      onMouseEnter={() => setIsHovering(true)}\r\n      onMouseLeave={() => setIsHovering(false)}\r\n    >\r\n      <Tooltip\r\n        isOpen={isHovering}\r\n        direction='bottom'\r\n        tagName='div'\r\n        padding='0'\r\n        arrow={false}\r\n        content={\r\n          isWeapon ? (\r\n            <EquipedWeaponCompare weapon={item as WeaponT} />\r\n          ) : isEquipable ? (\r\n            <EquipeItemCompare item={item as EquippableT} />\r\n          ) : (\r\n            'item'\r\n          )\r\n        }\r\n      >\r\n        <BoxContainer\r\n          style={{\r\n            width: 40,\r\n            height: 40,\r\n            background: !canEquipItem ? '#333' : '#222',\r\n            boxShadow: `inset 0 0 ${!canEquipItem ? '3px' : '12px'} ${\r\n              item.rarity !== 'common' && canEquipItem\r\n                ? Color(rarityColor).fade(0.5).hsl().toString()\r\n                : 'black'\r\n            }`,\r\n          }}\r\n          substyle={{\r\n            background: 'transparent',\r\n            cursor: canEquipItem ? 'pointer' : 'default',\r\n            borderColor: isHovering\r\n              ? rarityColor\r\n              : item.rarity === 'common'\r\n              ? '#555'\r\n              : Color(rarityColor).fade(0.5).hsl().toString(),\r\n            boxShadow: canEquipItem ? 'inset 0 0 3px black' : 'none',\r\n            display: 'flex',\r\n            padding: 0,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            margin: 0,\r\n            opacity: canEquipItem ? 1 : 0.5,\r\n          }}\r\n          onClick={(event) => {\r\n            event.preventDefault()\r\n            event.stopPropagation()\r\n            if (isEquipable) {\r\n              onEquip(item.id)\r\n            }\r\n          }}\r\n        >\r\n          {icon}\r\n        </BoxContainer>\r\n      </Tooltip>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\n\r\nimport { Icon } from '../Icon'\r\nimport { FlexContainer } from '../../elements/flex'\r\n\r\nexport interface SidebarOptionT {\r\n  key: string\r\n  icon: string\r\n  Component: React.FC\r\n}\r\n\r\nexport interface SidebarPropsT {\r\n  activeKey: string | undefined\r\n  setActiveKey: (key?: string) => void\r\n  options: SidebarOptionT[]\r\n  direction?: 'right' | 'left'\r\n}\r\nexport const Sidebar = (props: SidebarPropsT) => {\r\n  const { activeKey, setActiveKey, options, direction = 'right' } = props\r\n  const activeOption = useMemo(() => options.find((o) => o.key === activeKey), [\r\n    activeKey,\r\n  ])\r\n  return (\r\n    <BoxContainer\r\n      substyle={{\r\n        display: 'flex',\r\n        flexDirection: direction === 'right' ? 'row' : 'row-reverse',\r\n        padding: 0,\r\n      }}\r\n    >\r\n      <FlexContainer\r\n        $direction='column'\r\n        style={{\r\n          width: 60,\r\n        }}\r\n      >\r\n        {options.map((option, i) => (\r\n          <div\r\n            key={option.key}\r\n            style={{\r\n              height: 60,\r\n              width: 60,\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              cursor: 'pointer',\r\n              boxSizing: 'border-box',\r\n              backgroundColor:\r\n                activeKey === option.key ? '#111' : 'transparent',\r\n              borderTop: i === 0 ? 'none' : '1px solid #555',\r\n              borderBottom: '1px solid black',\r\n              borderRight:\r\n                direction === 'right'\r\n                  ? activeKey && activeKey !== option.key\r\n                    ? '1px solid #555'\r\n                    : 'none'\r\n                  : 'none',\r\n              borderLeft:\r\n                direction === 'left'\r\n                  ? activeKey && activeKey !== option.key\r\n                    ? '1px solid #555'\r\n                    : 'none'\r\n                  : 'none',\r\n            }}\r\n            onClick={(e) => {\r\n              e.preventDefault()\r\n              e.stopPropagation()\r\n              setActiveKey(activeKey === option.key ? undefined : option.key)\r\n            }}\r\n          >\r\n            <Icon src={option.icon} size={24} />\r\n          </div>\r\n        ))}\r\n        <FlexContainer\r\n          $full\r\n          style={{\r\n            borderTop: '1px solid #555',\r\n            borderRight:\r\n              direction === 'right'\r\n                ? activeKey !== undefined\r\n                  ? '1px solid #555'\r\n                  : 'none'\r\n                : 'none',\r\n            borderLeft:\r\n              direction === 'left'\r\n                ? activeKey !== undefined\r\n                  ? '1px solid #555'\r\n                  : 'none'\r\n                : 'none',\r\n          }}\r\n        />\r\n      </FlexContainer>\r\n      {activeOption && (\r\n        <div\r\n          style={{\r\n            padding: 8,\r\n            backgroundColor: '#111',\r\n            overflow: 'auto',\r\n          }}\r\n        >\r\n          <activeOption.Component />\r\n        </div>\r\n      )}\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { BoxContainer, BoxButton } from '../../elements/box'\r\nimport { WeaponModT, combineWeaponTraits } from '../../types/Weapon'\r\nimport { Icon } from '../Icon'\r\nimport Mod from '../../icons/svg/lorc/emerald.svg'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { combineTraits } from '../../types/Character'\r\nimport { DamageRollScores, DamageRollScore } from '../DamageRollScores'\r\nimport { useCharacterContext } from '../../contexts/CharacterContext'\r\nimport { TraitScore } from '../TraitScore'\r\n\r\nexport interface ModPreviewPropsT {\r\n  mod: WeaponModT\r\n}\r\nexport const ModPreview = (props: ModPreviewPropsT) => {\r\n  const { mod } = props\r\n  const { character } = useCharacterContext()\r\n  const weaponTrait = combineWeaponTraits(...mod.traits)\r\n  const trait = combineTraits(weaponTrait.traits)\r\n  return (\r\n    <BoxContainer>\r\n      <FlexContainer>\r\n        <Icon src={Mod} size={24} />\r\n        <span style={{ margin: '0 10px', flex: 1, fontWeight: 'bold' }}>\r\n          {mod.name}\r\n        </span>\r\n        <BoxButton>equip</BoxButton>\r\n      </FlexContainer>\r\n      <div style={{ marginBottom: 10 }}>\r\n        <TraitScore trait={trait} />\r\n      </div>\r\n      <DamageRollScores parent={weaponTrait}>\r\n        {(values, combinedRoll) =>\r\n          values.map((value) => (\r\n            <DamageRollScore\r\n              key={value.id}\r\n              id={value.id}\r\n              damageRangeText={value.damageRangeText}\r\n              damageRollText={value.damageRollText}\r\n            />\r\n          ))\r\n        }\r\n      </DamageRollScores>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { RollLog } from '../RollLog'\r\nimport Dice6 from '../../icons/svg/delapouite/dice-six-faces-six.svg'\r\nimport Attack from '../../icons/svg/cathelineau/swordman.svg'\r\nimport Items from '../../icons/svg/lorc/swap-bag.svg'\r\nimport Skills from '../../icons/svg/delapouite/skills.svg'\r\nimport Mods from '../../icons/svg/delapouite/crystal-shrine.svg'\r\nimport { CharacterItems } from '../CharacterItems'\r\nimport { AttackLog } from '../AttackLog'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { SidebarOptionT, Sidebar } from '../Sidebar'\r\nimport { PartySkills } from '../PartySkills'\r\nimport { PartyMods } from '../PartyMods'\r\n\r\nexport const options: SidebarOptionT[] = [\r\n  {\r\n    key: 'roll-log',\r\n    icon: Dice6,\r\n    Component: RollLog,\r\n  },\r\n  {\r\n    key: 'attack-log',\r\n    icon: Attack,\r\n    Component: AttackLog,\r\n  },\r\n  {\r\n    key: 'items',\r\n    icon: Items,\r\n    Component: CharacterItems,\r\n  },\r\n  {\r\n    key: 'skills',\r\n    icon: Skills,\r\n    Component: PartySkills,\r\n  },\r\n  {\r\n    key: 'mods',\r\n    icon: Mods,\r\n    Component: PartyMods,\r\n  },\r\n]\r\n\r\nexport interface AppLogPropsT {}\r\nexport const AppLog = (props: AppLogPropsT) => {\r\n  const { logKey, setLogKey } = useUIContext()\r\n  return (\r\n    <Sidebar\r\n      activeKey={logKey}\r\n      setActiveKey={setLogKey}\r\n      options={options}\r\n      direction='left'\r\n    />\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useRollContext } from '../../contexts/RollContext'\r\nimport { RollResult } from '../RollResult'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Icon } from '../Icon'\r\nimport Dice6 from '../../icons/svg/delapouite/dice-six-faces-six.svg'\r\n\r\nexport interface RollLogPropsT {}\r\nexport const RollLog = (props: RollLogPropsT) => {\r\n  const { history, execRoll } = useRollContext()\r\n  const [text, setText] = useState('')\r\n  const [submitLog, setSubmitLog] = useState<string[]>([])\r\n  const [index, setIndex] = useState(0)\r\n  const submit = () => {\r\n    try {\r\n      execRoll({ string: text, keys: [], modifier: 0 }, true, true)\r\n      setSubmitLog([...submitLog, text])\r\n      setIndex(submitLog.length)\r\n    } catch (e) {\r\n      alert(e)\r\n    } finally {\r\n      setText('')\r\n    }\r\n  }\r\n  return (\r\n    <FlexContainer $direction='column' $full style={{ width: 400 }}>\r\n      {history.length > 0 ? (\r\n        <FlexContainer\r\n          $full\r\n          $direction='column'\r\n          style={{ overflow: 'auto', padding: 10 }}\r\n        >\r\n          {history.map((roll) => (\r\n            <React.Fragment key={roll.id}>\r\n              <RollResult key={roll.id} roll={roll} />\r\n            </React.Fragment>\r\n          ))}\r\n        </FlexContainer>\r\n      ) : (\r\n        <FlexContainer $full />\r\n      )}\r\n      <FlexContainer>\r\n        <input\r\n          value={text}\r\n          style={{ flex: 1 }}\r\n          onChange={(e) => setText(e.target.value)}\r\n          onKeyDown={(e) => {\r\n            if (e.keyCode === 13) {\r\n              submit()\r\n            }\r\n            if (e.keyCode === 38) {\r\n              setText(submitLog[index] || '')\r\n              setIndex(index - 1)\r\n            }\r\n          }}\r\n        />\r\n        <button onClick={submit}>\r\n          <Icon src={Dice6} size={18} fill='#4bebc6' />\r\n        </button>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useRef, useEffect } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useCombatLogContext } from '../../contexts/CombatLogContext'\r\n\r\nexport const AttackLog = () => {\r\n  // const { attackResults, clear } = useAttackContext()\r\n  const { lines, clear } = useCombatLogContext()\r\n  const scrollRef = useRef<HTMLDivElement>(null)\r\n  useEffect(() => {\r\n    if (scrollRef.current) {\r\n      scrollRef.current.scrollIntoView({ behavior: 'smooth' })\r\n    }\r\n  }, [lines])\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      $full\r\n      style={{ overflow: 'auto', padding: 10, overflowY: 'auto' }}\r\n    >\r\n      <button onClick={clear} style={{ marginBottom: 20 }}>\r\n        Clear Log\r\n      </button>\r\n      <FlexContainer\r\n        $direction='column'\r\n        $full\r\n        style={{\r\n          color: 'rgba(200,200,200, 1)',\r\n          background: '#111',\r\n          width: 380,\r\n          overflowX: 'auto',\r\n        }}\r\n      >\r\n        {lines.map((l, i) => (\r\n          <pre key={i}>{l}</pre>\r\n        ))}\r\n        <div ref={scrollRef} />\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { SkillPreviewAlt } from '../SkillPreviewAlt'\r\n\r\nexport const PartySkills = () => {\r\n  const { userParty } = usePartyContext()\r\n  return (\r\n    <FlexContainer style={{ width: 320, flexWrap: 'wrap' }}>\r\n      {userParty.skills.map((skill) => (\r\n        <SkillPreviewAlt skill={skill} />\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { ModPreview } from '../ModPreview'\r\n\r\nexport const PartyMods = () => {\r\n  const { userParty } = usePartyContext()\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      {userParty.mods.map((mod) => (\r\n        <ModPreview key={mod.id} mod={mod} />\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\n\r\nexport const makeRoute = (path: string, Component: React.FC) => (\r\n  <Route path={path}>\r\n    <Component />\r\n  </Route>\r\n)\r\n","import React from 'react'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { ProcessedCharacterT } from '../../types/Character'\r\nimport { BoxButton } from '../../elements/box'\r\n\r\nimport CharactersIcon from '../../icons/svg/lorc/two-shadows.svg'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { makeCharacter } from '../../objects/makeCharacter'\r\nimport { Sidebar, SidebarOptionT } from '../Sidebar'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\n\r\nexport const MAIN_OPTIONS: SidebarOptionT[] = [\r\n  {\r\n    key: 'characters',\r\n    icon: CharactersIcon,\r\n    Component: () => <AppSidebarCharacters />,\r\n  },\r\n]\r\n\r\nexport interface AppSidebarPropsT {}\r\nexport const AppSidebar = (props: AppSidebarPropsT) => {\r\n  const { sidebarKey, setSidebarKey } = useUIContext()\r\n  return (\r\n    <Sidebar\r\n      options={MAIN_OPTIONS}\r\n      direction='right'\r\n      activeKey={sidebarKey}\r\n      setActiveKey={setSidebarKey}\r\n    />\r\n  )\r\n}\r\n\r\nconst AppSidebarCharacters = () => {\r\n  const { userParty, upsertCharacter } = usePartyContext()\r\n  const history = useHistory()\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      {userParty.characters.map((character: ProcessedCharacterT) => (\r\n        <Link\r\n          key={character.id}\r\n          to={`/characters/${character.id}`}\r\n          style={{\r\n            padding: 8,\r\n          }}\r\n        >\r\n          {character.name}\r\n        </Link>\r\n      ))}\r\n      {userParty.characters.length < 4 && (\r\n        <BoxButton\r\n          onClick={() => {\r\n            const newCharacter = makeCharacter('new character')\r\n            upsertCharacter(newCharacter)\r\n            history.push(`/characters/${newCharacter.id}`)\r\n          }}\r\n        >\r\n          Add New Character\r\n        </BoxButton>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { PartyT } from '../../types/Party'\r\nimport {\r\n  CharacterContextProvider,\r\n  useCharacterContext,\r\n} from '../../contexts/CharacterContext'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { CharacterDetails } from '../CharacterDetails'\r\nimport { CombatCharacterSkills } from '../CombatCharacterSkills'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { PC_PARTY_ID } from '../../state/parties'\r\nimport { CombatCharacterTargets } from '../CombatCharacterTargets'\r\nimport { processCharacter, ProcessedCharacterT } from '../../types/Character'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { getSkillRange } from '../../types/Skill'\r\nimport { useRollContext } from '../../contexts/RollContext'\r\nimport { BASIC_ATTACK } from '../../objects/makeSkill'\r\nimport {\r\n  ZERO_CHECK,\r\n  reduceCharacterCheck,\r\n  getCheckProbability,\r\n  makeCharacterCheck,\r\n} from '../../types/Roll2'\r\n\r\nexport interface CombatPartyPropsT {\r\n  party: PartyT\r\n}\r\nexport const CombatParty = (props: CombatPartyPropsT) => {\r\n  const { party } = props\r\n  const { upsertCharacter } = usePartyContext()\r\n  const {\r\n    userParty,\r\n    enemyParty,\r\n    characterSkills,\r\n    setCharacterSkill,\r\n    characterTargets,\r\n    setCharacterTarget,\r\n  } = useCombatContext()\r\n  if (!party || !userParty || !enemyParty) return <div>Loading...</div>\r\n\r\n  const characters = [...userParty.characters, ...enemyParty.characters]\r\n  return (\r\n    <div>\r\n      {party.characters.map((character) => (\r\n        <CharacterContextProvider\r\n          key={character.id}\r\n          character={character}\r\n          onChange={(c) => upsertCharacter(c, party.id)}\r\n        >\r\n          <FlexContainer\r\n            style={{\r\n              position: 'relative',\r\n              opacity: processCharacter(character).dead ? 0.5 : 1,\r\n            }}\r\n          >\r\n            <FlexContainer\r\n              $direction='column'\r\n              $full\r\n              style={{\r\n                marginBottom: 10,\r\n              }}\r\n            >\r\n              <CharacterDetails\r\n                showInspect={\r\n                  character.inspected ||\r\n                  character.partyId === PC_PARTY_ID ||\r\n                  processCharacter(character).dead\r\n                }\r\n                showWeaponInspect={\r\n                  character.inspected ||\r\n                  character.partyId === PC_PARTY_ID ||\r\n                  processCharacter(character).dead\r\n                }\r\n                showSkills={party.id === PC_PARTY_ID}\r\n              />\r\n            </FlexContainer>\r\n            {character.partyId === PC_PARTY_ID && (\r\n              <FlexContainer\r\n                $direction='column'\r\n                style={{\r\n                  fontFamily: 'monospace',\r\n                  width: 80,\r\n                }}\r\n              >\r\n                <FullContainer />\r\n                <SelectedDamageRange\r\n                  skillId={characterSkills[character.id]}\r\n                  targetId={characterTargets[character.id]}\r\n                  characters={characters}\r\n                />\r\n                <FullContainer />\r\n              </FlexContainer>\r\n            )}\r\n          </FlexContainer>\r\n        </CharacterContextProvider>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface SelectedDamageRangePropsT {\r\n  skillId?: string\r\n  targetId?: string\r\n  characters: ProcessedCharacterT[]\r\n}\r\nconst SelectedDamageRange = (props: SelectedDamageRangePropsT) => {\r\n  const { skillId, targetId, characters } = props\r\n  const { character } = useCharacterContext()\r\n  const skill = character.skills.find((s) => s.id === skillId) || BASIC_ATTACK\r\n  const target = characters.find((c) => c.id === targetId)\r\n  if (!target && skill.target) return null\r\n  const range = getSkillRange(skill, character, target)\r\n  const prob = getCheckProbability(\r\n    reduceCharacterCheck(\r\n      skill.combineWeaponDamage\r\n        ? character.weapon.accuracyCheck\r\n        : skill.check || { ...ZERO_CHECK, keys: [] },\r\n      character,\r\n    ),\r\n  )\r\n  const dodgeProb =\r\n    skill.target && target\r\n      ? getCheckProbability(\r\n          reduceCharacterCheck(makeCharacterCheck(['evade']), target),\r\n        )\r\n      : 0\r\n  return (\r\n    <BoxContainer\r\n      style={{ textAlign: 'center', fontWeight: 'bold', borderLeft: 'none' }}\r\n      substyle={{ borderLeft: 'none', background: '#111' }}\r\n    >\r\n      {range && range !== '0' && (\r\n        <div style={{ marginBottom: 5 }}>({range})</div>\r\n      )}\r\n      <div style={{ fontSize: 20 }}>{Math.floor(prob - dodgeProb)}%</div>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import {\r\n  CharacterCheckT,\r\n  CharacterRollT,\r\n  Roll2ResultT,\r\n  resolveCharacterRoll,\r\n} from './Roll2'\r\nimport { DamageTypeRollsT, rollDamage, getDamageTypeKeys } from './Damage'\r\nimport { CharacterTraitT, ProcessedCharacterT } from './Character'\r\nimport { EventsT } from './Events'\r\nimport { getSkillDamageRolls } from '../contexts/CombatContext/util'\r\nimport { noneg } from '../util/noneg'\r\n\r\nexport interface SkillT {\r\n  id: string\r\n  name: string\r\n  imgSrc: string\r\n  check?: CharacterCheckT\r\n  requirementCheck: CharacterCheckT\r\n  damageRolls: DamageTypeRollsT\r\n  targetTraits: CharacterTraitT[]\r\n  sourceTraits: CharacterTraitT[]\r\n  events: EventsT\r\n  combineWeaponDamage: boolean\r\n  checkDodgeForTraits: boolean\r\n  focusCost: number\r\n  inspected?: true\r\n  target: boolean\r\n}\r\n\r\nexport const getSkillRange = (\r\n  skill: SkillT,\r\n  source: ProcessedCharacterT,\r\n  target?: ProcessedCharacterT,\r\n): string | undefined => {\r\n  if (!target) return undefined\r\n  let min = 0\r\n  let max = 0\r\n  const damageRolls = getSkillDamageRolls(skill, source.weapon)\r\n  const rr = (r: CharacterRollT) => resolveCharacterRoll(r, source)\r\n  const damageRollsResult = rollDamage(rr)(damageRolls, false)\r\n  const damageResults = damageRollsResult.rollResults\r\n  const { damageResistances } = target\r\n  const damageKeys = getDamageTypeKeys(damageResults).filter(\r\n    (k) => damageResults[k],\r\n  )\r\n  damageKeys.forEach((key) => {\r\n    const damageResult = damageResults[key] as Roll2ResultT\r\n    const resistanceCheck = damageResistances[key] as CharacterRollT\r\n    const resistanceResult = resolveCharacterRoll(resistanceCheck, source, true)\r\n    min += noneg(damageResult.minTotal - resistanceResult.maxTotal)\r\n    max += noneg(damageResult.maxTotal - resistanceResult.minTotal)\r\n  })\r\n  if (min === max) return `${max}`\r\n  return `${min}-${max}`\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { CombatParty } from '../../components/CombatParty'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { useEvent } from '../../hooks/useEvent'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport BG from '../../assets/img/23761.jpg'\r\n\r\nexport const Combat = () => {\r\n  const {\r\n    rawUserParty,\r\n    rawEnemyParty,\r\n    running,\r\n    done,\r\n    rounds,\r\n    start,\r\n    stop,\r\n    reset,\r\n    next,\r\n  } = useCombatContext()\r\n  const { setLogKey } = useUIContext()\r\n\r\n  useEffect(() => {\r\n    setLogKey('attack-log')\r\n    return () => {\r\n      setLogKey(undefined)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      $direction='column'\r\n      style={{\r\n        background: `url(${BG}) center center`,\r\n        backgroundSize: 'cover',\r\n      }}\r\n    >\r\n      <BoxContainer>\r\n        <FlexContainer style={{ alignItems: 'center' }}>\r\n          <div>\r\n            {done && <button onClick={() => reset()}>Reset</button>}\r\n            {!done && <button onClick={() => next()}>Next</button>}\r\n          </div>\r\n\r\n          <FullContainer />\r\n          <FlexContainer>Round {rounds.length + 1}</FlexContainer>\r\n        </FlexContainer>\r\n      </BoxContainer>\r\n      <FlexContainer id='Combat' $full style={{ padding: 10 }}>\r\n        <CombatParty party={rawUserParty} />\r\n        <FlexContainer $full $direction='column'></FlexContainer>\r\n        <CombatParty party={rawEnemyParty} />\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { CSSProperties } from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\nconst activeStyles: CSSProperties = {\r\n  background: '#111',\r\n  boxShadow: 'inset 0 0 3px black',\r\n}\r\nconst inactiveStyles: CSSProperties = {\r\n  backgroundColor: '#333',\r\n}\r\n\r\nexport const AppHeader = () => {\r\n  const location = useLocation()\r\n  const { pathname } = location\r\n  const chunks = pathname.split('/')\r\n  const check = (paths: string[]): CSSProperties =>\r\n    paths.includes(chunks[1]) ? activeStyles : inactiveStyles\r\n  return (\r\n    <BoxContainer\r\n      substyle={{\r\n        height: 64,\r\n        padding: 0,\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          fontFamily: 'monospace',\r\n          fontSize: 24,\r\n          margin: '0 30px',\r\n        }}\r\n      >\r\n        rpgjs\r\n      </div>\r\n      {/*\r\n      <BoxContainer\r\n        tag={Link}\r\n        to=''\r\n        style={{\r\n          height: '100%',\r\n        }}\r\n        substyle={{\r\n          padding: '0 20px',\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          ...check(['', 'characters']),\r\n        }}\r\n      >\r\n        character\r\n      </BoxContainer>\r\n      */}\r\n      <BoxContainer\r\n        tag={Link}\r\n        to='/battle'\r\n        style={{\r\n          height: '100%',\r\n        }}\r\n        substyle={{\r\n          padding: '0 20px',\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          ...check(['battle']),\r\n        }}\r\n      >\r\n        battle\r\n      </BoxContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Switch } from 'react-router-dom'\r\n\r\nimport { CharacterStateContextProvider } from './contexts/CharacterContext'\r\n\r\nimport { Character } from './domain'\r\n\r\nimport { FlexContainer } from './elements/flex'\r\nimport { AppLog } from './components/ApplicationLog'\r\nimport { makeRoute } from './routes'\r\nimport { PartyContextProvider } from './contexts/PartyContext'\r\nimport { AppSidebar, MAIN_OPTIONS } from './components/AppSidebar'\r\nimport { Combat } from './domain/Combat'\r\nimport { CombatContextProvider } from './contexts/CombatContext'\r\nimport { AppHeader } from './components/AppHeader'\r\nimport { CombatLogContextProvider } from './contexts/CombatLogContext'\r\nimport { ModalContextProvider } from './contexts/ModalContext'\r\nimport { UIContextProvider } from './contexts/UIContext'\r\n\r\nexport const App = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: '100%',\r\n        width: '100%',\r\n        display: 'flex',\r\n      }}\r\n    >\r\n      <UIContextProvider>\r\n        <ModalContextProvider>\r\n          <PartyContextProvider>\r\n            <CharacterStateContextProvider>\r\n              <CombatLogContextProvider>\r\n                <FlexContainer $full $direction='column' id='content-root'>\r\n                  <AppHeader />\r\n                  <FlexContainer\r\n                    $full\r\n                    style={{\r\n                      height: 'calc(100% - 70px)',\r\n                      width: '100vw',\r\n                      overflow: 'auto',\r\n                    }}\r\n                  >\r\n                    <AppSidebar />\r\n                    <FlexContainer $full style={{ overflow: 'auto' }}>\r\n                      <Switch>\r\n                        {makeRoute('/battle', () => (\r\n                          <CombatContextProvider>\r\n                            <Combat />\r\n                          </CombatContextProvider>\r\n                        ))}\r\n                        {makeRoute('/characters/:id', () => (\r\n                          <Character />\r\n                        ))}\r\n                        {makeRoute('/', () => (\r\n                          <Character />\r\n                        ))}\r\n                      </Switch>\r\n                    </FlexContainer>\r\n                    <AppLog />\r\n                  </FlexContainer>\r\n                </FlexContainer>\r\n              </CombatLogContextProvider>\r\n            </CharacterStateContextProvider>\r\n          </PartyContextProvider>\r\n        </ModalContextProvider>\r\n      </UIContextProvider>\r\n    </div>\r\n  )\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\nimport './index.css'\n\nimport { Provider as StyletronProvider, DebugEngine } from 'styletron-react'\nimport { Client as Styletron } from 'styletron-engine-atomic'\n\nimport { Provider as ReduxProvider } from 'react-redux'\nimport { makeStore } from './state'\n\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nconst debug = process.env.NODE_ENV === 'production' ? void 0 : new DebugEngine()\nconst engine: Styletron = new Styletron()\nconst store = makeStore()\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReduxProvider store={store}>\n      <StyletronProvider value={engine} debug={debug} debugAfterHydration>\n        <Router>\n          <App />\n        </Router>\n      </StyletronProvider>\n    </ReduxProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { createStore, combineReducers, compose, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rolls from './rolls'\r\nimport parties from './parties'\r\n\r\nexport const makeStore = () =>\r\n  createStore(\r\n    combineReducers({ rolls, parties }),\r\n    compose(applyMiddleware(thunk)),\r\n  )\r\n"],"sourceRoot":""}